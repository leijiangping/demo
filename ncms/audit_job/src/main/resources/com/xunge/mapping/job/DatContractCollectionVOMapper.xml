<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.dao.job.DatContractCollectionVOMapper" >
  <resultMap id="BaseResultMap" type="com.xunge.model.job.DatContractCollectionVO" >
    <id column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="prv_id" property="prvId" jdbcType="VARCHAR" />
    <result column="prv_sname" property="prvSname" jdbcType="VARCHAR" />
    <result column="preg_id" property="pregId" jdbcType="VARCHAR" />
    <result column="preg_name" property="pregName" jdbcType="VARCHAR" />
    <result column="reg_id" property="regId" jdbcType="VARCHAR" />
    <result column="reg_name" property="regName" jdbcType="VARCHAR" />
    <result column="is_downshare" property="isDownshare" jdbcType="INTEGER" />
    <result column="sys_dep_id" property="sysDepId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="manager_department" property="managerDepartment" jdbcType="VARCHAR" />
    <result column="manager_user" property="managerUser" jdbcType="VARCHAR" />
    <result column="contract_code" property="contractCode" jdbcType="VARCHAR" />
    <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
    <result column="contract_type" property="contractType" jdbcType="INTEGER" />
    <result column="contract_startdate" property="contractStartdate" jdbcType="DATE" />
    <result column="contract_enddate" property="contractEnddate" jdbcType="DATE" />
    <result column="contract_signdate" property="contractSigndate" jdbcType="DATE" />
    <result column="contract_changeenddate" property="contractChangeenddate" jdbcType="DATE" />
    <result column="contract_changedate" property="contractChangedate" jdbcType="DATE" />
    <result column="contract_yearquantity" property="contractYearquantity" jdbcType="DECIMAL" />
    <result column="contract_checkname1" property="contractCheckname1" jdbcType="VARCHAR" />
    <result column="contract_checkname2" property="contractCheckname2" jdbcType="VARCHAR" />
    <result column="old_contract_id" property="oldContractId" jdbcType="VARCHAR" />
    <result column="old_contract_code" property="oldContractCode" jdbcType="VARCHAR" />
    <result column="contract_flow" property="contractFlow" jdbcType="VARCHAR" />
    <result column="contract_introduction" property="contractIntroduction" jdbcType="VARCHAR" />
    <result column="contract_spaceresource" property="contractSpaceresource" jdbcType="VARCHAR" />
    <result column="contract_state" property="contractState" jdbcType="INTEGER" />
    <result column="contract_note" property="contractNote" jdbcType="VARCHAR" />
    <result column="auditing_state" property="auditingState" jdbcType="INTEGER" />
    <result column="auditing_user_id" property="auditingUserId" jdbcType="VARCHAR" />
    <result column="auditing_date" property="auditingDate" jdbcType="TIMESTAMP" />
    <result column="data_from" property="dataFrom" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    contract_id, prv_id, prv_sname, preg_id, preg_name, reg_id, reg_name, is_downshare, 
    sys_dep_id, user_id, manager_department, manager_user, contract_code, contract_name, 
    contract_type, contract_startdate, contract_enddate, contract_signdate, contract_changeenddate, 
    contract_changedate, contract_yearquantity, contract_checkname1, contract_checkname2, 
    old_contract_id, old_contract_code, contract_flow, contract_introduction, contract_spaceresource, 
    contract_state, contract_note, auditing_state, auditing_user_id, auditing_date, data_from
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from dat_contract_collection
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from dat_contract_collection
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xunge.model.job.DatContractCollectionVO" >
    insert into dat_contract_collection (contract_id, prv_id, prv_sname, 
      preg_id, preg_name, reg_id, 
      reg_name, is_downshare, sys_dep_id, 
      user_id, manager_department, manager_user, 
      contract_code, contract_name, contract_type, 
      contract_startdate, contract_enddate, contract_signdate, 
      contract_changeenddate, contract_changedate, contract_yearquantity, 
      contract_checkname1, contract_checkname2, 
      old_contract_id, old_contract_code, contract_flow, 
      contract_introduction, contract_spaceresource, 
      contract_state, contract_note, auditing_state, 
      auditing_user_id, auditing_date, data_from
      )
    values (#{contractId,jdbcType=VARCHAR}, #{prvId,jdbcType=VARCHAR}, #{prvSname,jdbcType=VARCHAR}, 
      #{pregId,jdbcType=VARCHAR}, #{pregName,jdbcType=VARCHAR}, #{regId,jdbcType=VARCHAR}, 
      #{regName,jdbcType=VARCHAR}, #{isDownshare,jdbcType=INTEGER}, #{sysDepId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{managerDepartment,jdbcType=VARCHAR}, #{managerUser,jdbcType=VARCHAR}, 
      #{contractCode,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, #{contractType,jdbcType=INTEGER}, 
      #{contractStartdate,jdbcType=DATE}, #{contractEnddate,jdbcType=DATE}, #{contractSigndate,jdbcType=DATE}, 
      #{contractChangeenddate,jdbcType=DATE}, #{contractChangedate,jdbcType=DATE}, #{contractYearquantity,jdbcType=DECIMAL}, 
      #{contractCheckname1,jdbcType=VARCHAR}, #{contractCheckname2,jdbcType=VARCHAR}, 
      #{oldContractId,jdbcType=VARCHAR}, #{oldContractCode,jdbcType=VARCHAR}, #{contractFlow,jdbcType=VARCHAR}, 
      #{contractIntroduction,jdbcType=VARCHAR}, #{contractSpaceresource,jdbcType=VARCHAR}, 
      #{contractState,jdbcType=INTEGER}, #{contractNote,jdbcType=VARCHAR}, #{auditingState,jdbcType=INTEGER}, 
      #{auditingUserId,jdbcType=VARCHAR}, #{auditingDate,jdbcType=TIMESTAMP}, #{dataFrom,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunge.model.job.DatContractCollectionVO" >
    insert into dat_contract_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="prvId != null" >
        prv_id,
      </if>
      <if test="prvSname != null" >
        prv_sname,
      </if>
      <if test="pregId != null" >
        preg_id,
      </if>
      <if test="pregName != null" >
        preg_name,
      </if>
      <if test="regId != null" >
        reg_id,
      </if>
      <if test="regName != null" >
        reg_name,
      </if>
      <if test="isDownshare != null" >
        is_downshare,
      </if>
      <if test="sysDepId != null" >
        sys_dep_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="managerDepartment != null" >
        manager_department,
      </if>
      <if test="managerUser != null" >
        manager_user,
      </if>
      <if test="contractCode != null" >
        contract_code,
      </if>
      <if test="contractName != null" >
        contract_name,
      </if>
      <if test="contractType != null" >
        contract_type,
      </if>
      <if test="contractStartdate != null" >
        contract_startdate,
      </if>
      <if test="contractEnddate != null" >
        contract_enddate,
      </if>
      <if test="contractSigndate != null" >
        contract_signdate,
      </if>
      <if test="contractChangeenddate != null" >
        contract_changeenddate,
      </if>
      <if test="contractChangedate != null" >
        contract_changedate,
      </if>
      <if test="contractYearquantity != null" >
        contract_yearquantity,
      </if>
      <if test="contractCheckname1 != null" >
        contract_checkname1,
      </if>
      <if test="contractCheckname2 != null" >
        contract_checkname2,
      </if>
      <if test="oldContractId != null" >
        old_contract_id,
      </if>
      <if test="oldContractCode != null" >
        old_contract_code,
      </if>
      <if test="contractFlow != null" >
        contract_flow,
      </if>
      <if test="contractIntroduction != null" >
        contract_introduction,
      </if>
      <if test="contractSpaceresource != null" >
        contract_spaceresource,
      </if>
      <if test="contractState != null" >
        contract_state,
      </if>
      <if test="contractNote != null" >
        contract_note,
      </if>
      <if test="auditingState != null" >
        auditing_state,
      </if>
      <if test="auditingUserId != null" >
        auditing_user_id,
      </if>
      <if test="auditingDate != null" >
        auditing_date,
      </if>
      <if test="dataFrom != null" >
        data_from,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractId != null" >
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="prvId != null" >
        #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="prvSname != null" >
        #{prvSname,jdbcType=VARCHAR},
      </if>
      <if test="pregId != null" >
        #{pregId,jdbcType=VARCHAR},
      </if>
      <if test="pregName != null" >
        #{pregName,jdbcType=VARCHAR},
      </if>
      <if test="regId != null" >
        #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regName != null" >
        #{regName,jdbcType=VARCHAR},
      </if>
      <if test="isDownshare != null" >
        #{isDownshare,jdbcType=INTEGER},
      </if>
      <if test="sysDepId != null" >
        #{sysDepId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="managerDepartment != null" >
        #{managerDepartment,jdbcType=VARCHAR},
      </if>
      <if test="managerUser != null" >
        #{managerUser,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contractStartdate != null" >
        #{contractStartdate,jdbcType=DATE},
      </if>
      <if test="contractEnddate != null" >
        #{contractEnddate,jdbcType=DATE},
      </if>
      <if test="contractSigndate != null" >
        #{contractSigndate,jdbcType=DATE},
      </if>
      <if test="contractChangeenddate != null" >
        #{contractChangeenddate,jdbcType=DATE},
      </if>
      <if test="contractChangedate != null" >
        #{contractChangedate,jdbcType=DATE},
      </if>
      <if test="contractYearquantity != null" >
        #{contractYearquantity,jdbcType=DECIMAL},
      </if>
      <if test="contractCheckname1 != null" >
        #{contractCheckname1,jdbcType=VARCHAR},
      </if>
      <if test="contractCheckname2 != null" >
        #{contractCheckname2,jdbcType=VARCHAR},
      </if>
      <if test="oldContractId != null" >
        #{oldContractId,jdbcType=VARCHAR},
      </if>
      <if test="oldContractCode != null" >
        #{oldContractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractFlow != null" >
        #{contractFlow,jdbcType=VARCHAR},
      </if>
      <if test="contractIntroduction != null" >
        #{contractIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="contractSpaceresource != null" >
        #{contractSpaceresource,jdbcType=VARCHAR},
      </if>
      <if test="contractState != null" >
        #{contractState,jdbcType=INTEGER},
      </if>
      <if test="contractNote != null" >
        #{contractNote,jdbcType=VARCHAR},
      </if>
      <if test="auditingState != null" >
        #{auditingState,jdbcType=INTEGER},
      </if>
      <if test="auditingUserId != null" >
        #{auditingUserId,jdbcType=VARCHAR},
      </if>
      <if test="auditingDate != null" >
        #{auditingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dataFrom != null" >
        #{dataFrom,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunge.model.job.DatContractCollectionVO" >
    update dat_contract_collection
    <set >
      <if test="prvId != null" >
        prv_id = #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="prvSname != null" >
        prv_sname = #{prvSname,jdbcType=VARCHAR},
      </if>
      <if test="pregId != null" >
        preg_id = #{pregId,jdbcType=VARCHAR},
      </if>
      <if test="pregName != null" >
        preg_name = #{pregName,jdbcType=VARCHAR},
      </if>
      <if test="regId != null" >
        reg_id = #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regName != null" >
        reg_name = #{regName,jdbcType=VARCHAR},
      </if>
      <if test="isDownshare != null" >
        is_downshare = #{isDownshare,jdbcType=INTEGER},
      </if>
      <if test="sysDepId != null" >
        sys_dep_id = #{sysDepId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="managerDepartment != null" >
        manager_department = #{managerDepartment,jdbcType=VARCHAR},
      </if>
      <if test="managerUser != null" >
        manager_user = #{managerUser,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        contract_type = #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contractStartdate != null" >
        contract_startdate = #{contractStartdate,jdbcType=DATE},
      </if>
      <if test="contractEnddate != null" >
        contract_enddate = #{contractEnddate,jdbcType=DATE},
      </if>
      <if test="contractSigndate != null" >
        contract_signdate = #{contractSigndate,jdbcType=DATE},
      </if>
      <if test="contractChangeenddate != null" >
        contract_changeenddate = #{contractChangeenddate,jdbcType=DATE},
      </if>
      <if test="contractChangedate != null" >
        contract_changedate = #{contractChangedate,jdbcType=DATE},
      </if>
      <if test="contractYearquantity != null" >
        contract_yearquantity = #{contractYearquantity,jdbcType=DECIMAL},
      </if>
      <if test="contractCheckname1 != null" >
        contract_checkname1 = #{contractCheckname1,jdbcType=VARCHAR},
      </if>
      <if test="contractCheckname2 != null" >
        contract_checkname2 = #{contractCheckname2,jdbcType=VARCHAR},
      </if>
      <if test="oldContractId != null" >
        old_contract_id = #{oldContractId,jdbcType=VARCHAR},
      </if>
      <if test="oldContractCode != null" >
        old_contract_code = #{oldContractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractFlow != null" >
        contract_flow = #{contractFlow,jdbcType=VARCHAR},
      </if>
      <if test="contractIntroduction != null" >
        contract_introduction = #{contractIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="contractSpaceresource != null" >
        contract_spaceresource = #{contractSpaceresource,jdbcType=VARCHAR},
      </if>
      <if test="contractState != null" >
        contract_state = #{contractState,jdbcType=INTEGER},
      </if>
      <if test="contractNote != null" >
        contract_note = #{contractNote,jdbcType=VARCHAR},
      </if>
      <if test="auditingState != null" >
        auditing_state = #{auditingState,jdbcType=INTEGER},
      </if>
      <if test="auditingUserId != null" >
        auditing_user_id = #{auditingUserId,jdbcType=VARCHAR},
      </if>
      <if test="auditingDate != null" >
        auditing_date = #{auditingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dataFrom != null" >
        data_from = #{dataFrom,jdbcType=INTEGER},
      </if>
    </set>
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunge.model.job.DatContractCollectionVO" >
    update dat_contract_collection
    set prv_id = #{prvId,jdbcType=VARCHAR},
      prv_sname = #{prvSname,jdbcType=VARCHAR},
      preg_id = #{pregId,jdbcType=VARCHAR},
      preg_name = #{pregName,jdbcType=VARCHAR},
      reg_id = #{regId,jdbcType=VARCHAR},
      reg_name = #{regName,jdbcType=VARCHAR},
      is_downshare = #{isDownshare,jdbcType=INTEGER},
      sys_dep_id = #{sysDepId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      manager_department = #{managerDepartment,jdbcType=VARCHAR},
      manager_user = #{managerUser,jdbcType=VARCHAR},
      contract_code = #{contractCode,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=INTEGER},
      contract_startdate = #{contractStartdate,jdbcType=DATE},
      contract_enddate = #{contractEnddate,jdbcType=DATE},
      contract_signdate = #{contractSigndate,jdbcType=DATE},
      contract_changeenddate = #{contractChangeenddate,jdbcType=DATE},
      contract_changedate = #{contractChangedate,jdbcType=DATE},
      contract_yearquantity = #{contractYearquantity,jdbcType=DECIMAL},
      contract_checkname1 = #{contractCheckname1,jdbcType=VARCHAR},
      contract_checkname2 = #{contractCheckname2,jdbcType=VARCHAR},
      old_contract_id = #{oldContractId,jdbcType=VARCHAR},
      old_contract_code = #{oldContractCode,jdbcType=VARCHAR},
      contract_flow = #{contractFlow,jdbcType=VARCHAR},
      contract_introduction = #{contractIntroduction,jdbcType=VARCHAR},
      contract_spaceresource = #{contractSpaceresource,jdbcType=VARCHAR},
      contract_state = #{contractState,jdbcType=INTEGER},
      contract_note = #{contractNote,jdbcType=VARCHAR},
      auditing_state = #{auditingState,jdbcType=INTEGER},
      auditing_user_id = #{auditingUserId,jdbcType=VARCHAR},
      auditing_date = #{auditingDate,jdbcType=TIMESTAMP},
      data_from = #{dataFrom,jdbcType=INTEGER}
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </update>
  
  <insert id="batchInsert" useGeneratedKeys="true" parameterType="java.util.List">   
    insert into dat_contract_collection (contract_id, prv_id, prv_sname, 
      preg_id, preg_name, reg_id, 
      reg_name, is_downshare, sys_dep_id, 
      user_id, manager_department, manager_user, 
      contract_code, contract_name, contract_type, 
      contract_startdate, contract_enddate, contract_signdate, 
      contract_changeenddate, contract_changedate, contract_yearquantity, 
      contract_checkname1, contract_checkname2, 
      old_contract_id, old_contract_code, contract_flow, 
      contract_introduction, contract_spaceresource, 
      contract_state, contract_note, auditing_state, 
      auditing_user_id, auditing_date, data_from
      )
    values 
    <foreach collection="list" item="item" index="index" separator="," >  
     (#{item.contractId,jdbcType=VARCHAR}, #{item.prvId,jdbcType=VARCHAR}, #{item.prvSname,jdbcType=VARCHAR}, 
      #{item.pregId,jdbcType=VARCHAR}, #{item.pregName,jdbcType=VARCHAR}, #{item.regId,jdbcType=VARCHAR}, 
      #{item.regName,jdbcType=VARCHAR}, #{item.isDownshare,jdbcType=INTEGER}, #{item.sysDepId,jdbcType=VARCHAR}, 
      #{item.userId,jdbcType=VARCHAR}, #{item.managerDepartment,jdbcType=VARCHAR}, #{item.managerUser,jdbcType=VARCHAR}, 
      #{item.contractCode,jdbcType=VARCHAR}, #{item.contractName,jdbcType=VARCHAR}, #{item.contractType,jdbcType=INTEGER}, 
      #{item.contractStartdate,jdbcType=DATE}, #{item.contractEnddate,jdbcType=DATE}, #{item.contractSigndate,jdbcType=DATE}, 
      #{item.contractChangeenddate,jdbcType=DATE}, #{item.contractChangedate,jdbcType=DATE}, #{item.contractYearquantity,jdbcType=DECIMAL}, 
      #{item.contractCheckname1,jdbcType=VARCHAR}, #{item.contractCheckname2,jdbcType=VARCHAR}, 
      #{item.oldContractId,jdbcType=VARCHAR}, #{item.oldContractCode,jdbcType=VARCHAR}, #{item.contractFlow,jdbcType=VARCHAR}, 
      #{item.contractIntroduction,jdbcType=VARCHAR}, #{item.contractSpaceresource,jdbcType=VARCHAR}, 
      #{item.contractState,jdbcType=INTEGER}, #{item.contractNote,jdbcType=VARCHAR}, #{item.auditingState,jdbcType=INTEGER}, 
      #{item.auditingUserId,jdbcType=VARCHAR}, #{item.auditingDate,jdbcType=TIMESTAMP}, #{item.dataFrom,jdbcType=INTEGER}
      )
    </foreach>  
</insert>  
<resultMap type="java.util.Map" id="prcResultMap">
       <result column="addEleCnt" property="addEleCnt" javaType="java.lang.Integer" jdbcType="INTEGER"/>
       <result column="updateEleCnt" property="updateEleCnt" javaType="java.lang.Integer" jdbcType="INTEGER"/>
       <result column="addRentCnt" property="addRentCnt" javaType="java.lang.Integer" jdbcType="INTEGER"/>
       <result column="updateRentCnt" property="updateRentCnt" javaType="java.lang.Integer" jdbcType="INTEGER"/>
       <result column="errCode" property="errCode" javaType="java.lang.Integer" jdbcType="INTEGER"/>
</resultMap>
 <select id="syncContractData" parameterType="java.util.Map"  resultMap="prcResultMap" statementType="CALLABLE">
        CALL prc_Syn_contract_comp(#{prvId,jdbcType=VARCHAR,mode=IN},  #{addEleCnt,jdbcType=INTEGER,mode=OUT}, #{updateEleCnt,jdbcType=INTEGER,mode=OUT}, #{addRentCnt,jdbcType=INTEGER,mode=OUT}, #{updateRentCnt,jdbcType=INTEGER,mode=OUT}, #{errCode,jdbcType=INTEGER,mode=OUT})
    </select>
</mapper>