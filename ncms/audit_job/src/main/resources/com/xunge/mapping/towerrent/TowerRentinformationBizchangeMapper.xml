<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.dao.towerrent.TowerRentinformationBizchangeMapper" >
  <resultMap id="BaseResultMap" type="com.xunge.model.towerrent.TowerRentinformationBizchangeVO" >
    <id column="twr_rentinformation_bizchange_id" property="twrRentinformationBizchangeId" jdbcType="VARCHAR" />
    <result column="reg_id" property="regId" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="business_confirm_number" property="businessConfirmNumber" jdbcType="VARCHAR" />
    <result column="tower_station_code" property="towerStationCode" jdbcType="VARCHAR" />
    <result column="change_item" property="changeItem" jdbcType="VARCHAR" />
    <result column="change_before_content" property="changeBeforeContent" jdbcType="VARCHAR" />
    <result column="change_behind_content" property="changeBehindContent" jdbcType="VARCHAR" />
    <result column="change_active_date" property="changeActiveDate" jdbcType="TIMESTAMP" />
    <result column="if_ascend" property="ifAscend" jdbcType="INTEGER" />
    <result column="ascend_fee" property="ascendFee" jdbcType="DECIMAL" />
    <result column="change_reason" property="changeReason" jdbcType="VARCHAR" />
    <result column="check_state" property="auditState" jdbcType="INTEGER" />
  </resultMap>
 
  <sql id="Base_Column_List" >
    twr_rentinformation_bizchange_id, reg_id, operator, business_confirm_number, tower_station_code, 
    change_item, change_before_content, change_behind_content, change_active_date, if_ascend, 
    ascend_fee, change_reason, check_state
  </sql>
  
  <sql id="selectColumn">
  	business_confirm_number, tower_station_code, change_item
  </sql>
  
  <select id="queryDataByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select 
  	<include refid="selectColumn"/>
  	from twr_rentinformation_bizchange  INNER JOIN v_sys_region ON v_sys_region.reg_id = twr_rentinformation_bizchange.reg_id
  	<where>
  		<if test="regId != '' and regId != null">
			and twr_rentinformation_bizchange.reg_id = #{regId,jdbcType=VARCHAR}
		</if>
    	<if test="pregId != '' and pregId != null">
    		and v_sys_region.preg_id = #{pregId,jdbcType=VARCHAR}
    	</if>
    	<if test="prvId != '' and prvId != null">
    		and v_sys_region.prv_id = #{prvId,jdbcType=VARCHAR}
    	</if>
  	</where>
  </select>
 
  <!-- 批量新增 -->
  <insert id="batchInsert" parameterType="java.util.List">
    insert into twr_rentinformation_bizchange
        (twr_rentinformation_bizchange_id,
        reg_id,
        operator,
        business_confirm_number,
        tower_station_code,
        change_item,
        change_before_content,
        change_behind_content,
        change_active_date,
        if_ascend,
        ascend_fee,
        check_state,
        change_reason)
        values
    <foreach collection="list" item="item" index="index" separator="," > 
       ( #{item.twrRentinformationBizchangeId,jdbcType=VARCHAR},
        #{item.regId,jdbcType=VARCHAR},
        #{item.operator,jdbcType=VARCHAR},
        #{item.businessConfirmNumber,jdbcType=VARCHAR},
        #{item.towerStationCode,jdbcType=VARCHAR},
        #{item.changeItem,jdbcType=VARCHAR},
        #{item.changeBeforeContent,jdbcType=VARCHAR},
        #{item.changeBehindContent,jdbcType=VARCHAR},
        #{item.changeActiveDate,jdbcType=TIMESTAMP},
        #{item.ifAscend,jdbcType=BIT},
        #{item.ascendFee,jdbcType=DECIMAL},
        #{item.auditState,jdbcType=INTEGER},
        #{item.changeReason,jdbcType=VARCHAR})
     </foreach>
  </insert>
  
  <!-- 批量修改 -->
  <update id="batchUpdate" parameterType="java.util.List" >
  	<foreach collection="list" item="item" index="index" open="" close="" separator=";">
	    update twr_rentinformation_bizchange
	    <set >
	      <if test="item.regId != null" >
	        reg_id = #{item.regId,jdbcType=VARCHAR},
	      </if>
	      <if test="item.operator != null" >
	        operator = #{item.operator,jdbcType=VARCHAR},
	      </if>
	      <if test="item.businessConfirmNumber != null" >
	        business_confirm_number = #{item.businessConfirmNumber,jdbcType=VARCHAR},
	      </if>
	      <if test="item.towerStationCode != null" >
	        tower_station_code = #{item.towerStationCode,jdbcType=VARCHAR},
	      </if>
	      <if test="item.changeItem != null" >
	        change_item = #{item.changeItem,jdbcType=VARCHAR},
	      </if>
	      <if test="item.changeBeforeContent != null" >
	        change_before_content = #{item.changeBeforeContent,jdbcType=VARCHAR},
	      </if>
	      <if test="item.changeBehindContent != null" >
	        change_behind_content = #{item.changeBehindContent,jdbcType=VARCHAR},
	      </if>
	      <if test="item.changeActiveDate != null" >
	        change_active_date = #{item.changeActiveDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="item.ifAscend != null" >
	        if_ascend = #{item.ifAscend,jdbcType=BIT},
	      </if>
	      <if test="item.ascendFee != null" >
	        ascend_fee = #{item.ascendFee,jdbcType=DECIMAL},
	      </if>
	      <if test="item.changeReason != null" >
	        change_reason = #{item.changeReason,jdbcType=VARCHAR},
	      </if>
	      <if test="item.auditState != null" >
	        check_state = #{item.auditState,jdbcType=INTEGER},
	      </if>
	    </set>
	    <where>
	    	<if test="item.businessConfirmNumber != null">
			    and business_confirm_number = #{item.businessConfirmNumber,jdbcType=VARCHAR}
	    	</if>
	    	<if test="item.towerStationCode != null">
			    and tower_station_code = #{item.towerStationCode,jdbcType=VARCHAR}
	    	</if>
	    	<if test="item.changeItem != null">
	    		and change_item = #{item.changeItem,jdbcType=VARCHAR}
	    	</if>
	    </where>
  	</foreach>
  </update>
</mapper>