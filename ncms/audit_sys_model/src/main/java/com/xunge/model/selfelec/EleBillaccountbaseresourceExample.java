package com.xunge.model.selfelec;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EleBillaccountbaseresourceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public EleBillaccountbaseresourceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andBillaccountbaseresourceIdIsNull() {
            addCriterion("billaccountbaseresource_id is null");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdIsNotNull() {
            addCriterion("billaccountbaseresource_id is not null");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdEqualTo(String value) {
            addCriterion("billaccountbaseresource_id =", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdNotEqualTo(String value) {
            addCriterion("billaccountbaseresource_id <>", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdGreaterThan(String value) {
            addCriterion("billaccountbaseresource_id >", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdGreaterThanOrEqualTo(String value) {
            addCriterion("billaccountbaseresource_id >=", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdLessThan(String value) {
            addCriterion("billaccountbaseresource_id <", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdLessThanOrEqualTo(String value) {
            addCriterion("billaccountbaseresource_id <=", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdLike(String value) {
            addCriterion("billaccountbaseresource_id like", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdNotLike(String value) {
            addCriterion("billaccountbaseresource_id not like", value, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdIn(List<String> values) {
            addCriterion("billaccountbaseresource_id in", values, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdNotIn(List<String> values) {
            addCriterion("billaccountbaseresource_id not in", values, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdBetween(String value1, String value2) {
            addCriterion("billaccountbaseresource_id between", value1, value2, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountbaseresourceIdNotBetween(String value1, String value2) {
            addCriterion("billaccountbaseresource_id not between", value1, value2, "billaccountbaseresourceId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdIsNull() {
            addCriterion("billaccount_id is null");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdIsNotNull() {
            addCriterion("billaccount_id is not null");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdEqualTo(String value) {
            addCriterion("billaccount_id =", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdNotEqualTo(String value) {
            addCriterion("billaccount_id <>", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdGreaterThan(String value) {
            addCriterion("billaccount_id >", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("billaccount_id >=", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdLessThan(String value) {
            addCriterion("billaccount_id <", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdLessThanOrEqualTo(String value) {
            addCriterion("billaccount_id <=", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdLike(String value) {
            addCriterion("billaccount_id like", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdNotLike(String value) {
            addCriterion("billaccount_id not like", value, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdIn(List<String> values) {
            addCriterion("billaccount_id in", values, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdNotIn(List<String> values) {
            addCriterion("billaccount_id not in", values, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdBetween(String value1, String value2) {
            addCriterion("billaccount_id between", value1, value2, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBillaccountIdNotBetween(String value1, String value2) {
            addCriterion("billaccount_id not between", value1, value2, "billaccountId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdIsNull() {
            addCriterion("baseresource_id is null");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdIsNotNull() {
            addCriterion("baseresource_id is not null");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdEqualTo(String value) {
            addCriterion("baseresource_id =", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdNotEqualTo(String value) {
            addCriterion("baseresource_id <>", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdGreaterThan(String value) {
            addCriterion("baseresource_id >", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdGreaterThanOrEqualTo(String value) {
            addCriterion("baseresource_id >=", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdLessThan(String value) {
            addCriterion("baseresource_id <", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdLessThanOrEqualTo(String value) {
            addCriterion("baseresource_id <=", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdLike(String value) {
            addCriterion("baseresource_id like", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdNotLike(String value) {
            addCriterion("baseresource_id not like", value, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdIn(List<String> values) {
            addCriterion("baseresource_id in", values, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdNotIn(List<String> values) {
            addCriterion("baseresource_id not in", values, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdBetween(String value1, String value2) {
            addCriterion("baseresource_id between", value1, value2, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andBaseresourceIdNotBetween(String value1, String value2) {
            addCriterion("baseresource_id not between", value1, value2, "baseresourceId");
            return (Criteria) this;
        }

        public Criteria andRelationStateIsNull() {
            addCriterion("relation_state is null");
            return (Criteria) this;
        }

        public Criteria andRelationStateIsNotNull() {
            addCriterion("relation_state is not null");
            return (Criteria) this;
        }

        public Criteria andRelationStateEqualTo(Integer value) {
            addCriterion("relation_state =", value, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateNotEqualTo(Integer value) {
            addCriterion("relation_state <>", value, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateGreaterThan(Integer value) {
            addCriterion("relation_state >", value, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("relation_state >=", value, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateLessThan(Integer value) {
            addCriterion("relation_state <", value, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateLessThanOrEqualTo(Integer value) {
            addCriterion("relation_state <=", value, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateIn(List<Integer> values) {
            addCriterion("relation_state in", values, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateNotIn(List<Integer> values) {
            addCriterion("relation_state not in", values, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateBetween(Integer value1, Integer value2) {
            addCriterion("relation_state between", value1, value2, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStateNotBetween(Integer value1, Integer value2) {
            addCriterion("relation_state not between", value1, value2, "relationState");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateIsNull() {
            addCriterion("relation_startdate is null");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateIsNotNull() {
            addCriterion("relation_startdate is not null");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateEqualTo(Date value) {
            addCriterionForJDBCDate("relation_startdate =", value, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("relation_startdate <>", value, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateGreaterThan(Date value) {
            addCriterionForJDBCDate("relation_startdate >", value, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("relation_startdate >=", value, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateLessThan(Date value) {
            addCriterionForJDBCDate("relation_startdate <", value, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("relation_startdate <=", value, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateIn(List<Date> values) {
            addCriterionForJDBCDate("relation_startdate in", values, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("relation_startdate not in", values, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("relation_startdate between", value1, value2, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationStartdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("relation_startdate not between", value1, value2, "relationStartdate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateIsNull() {
            addCriterion("relation_enddate is null");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateIsNotNull() {
            addCriterion("relation_enddate is not null");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateEqualTo(Date value) {
            addCriterionForJDBCDate("relation_enddate =", value, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateNotEqualTo(Date value) {
            addCriterionForJDBCDate("relation_enddate <>", value, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateGreaterThan(Date value) {
            addCriterionForJDBCDate("relation_enddate >", value, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("relation_enddate >=", value, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateLessThan(Date value) {
            addCriterionForJDBCDate("relation_enddate <", value, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("relation_enddate <=", value, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateIn(List<Date> values) {
            addCriterionForJDBCDate("relation_enddate in", values, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateNotIn(List<Date> values) {
            addCriterionForJDBCDate("relation_enddate not in", values, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("relation_enddate between", value1, value2, "relationEnddate");
            return (Criteria) this;
        }

        public Criteria andRelationEnddateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("relation_enddate not between", value1, value2, "relationEnddate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated do_not_delete_during_merge Sun Jul 02 03:52:13 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ele_billaccountbaseresource
     *
     * @mbggenerated Sun Jul 02 03:52:13 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}