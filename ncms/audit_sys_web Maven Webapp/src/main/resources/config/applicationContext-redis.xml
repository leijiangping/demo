<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- jedis 配置 -->  
   <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
         <property name="maxWaitMillis" value="${redis.maxWait}" />  
         <property name="testOnBorrow" value="${redis.testOnBorrow}" /> 
         <property name="timeBetweenEvictionRunsMillis" value="30000"/> 
         <property name="minEvictableIdleTimeMillis" value="30000"/>
	     <property name="testOnReturn" value="true"/>
	     <property name="testWhileIdle" value="true"/>
   </bean>  
  <!-- redis服务器中心 -->  
   <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >  
        <property name="poolConfig" ref="jedisPoolConfig" />  
        <property name="port" value="${redis.port}" />  
        <property name="hostName" value="${redis.host}" />  
        <property name="password" value="${redis.password}" />  
        <property name="timeout" value="${redis.timeout}" ></property>  
		<property name="usePool" value="true"/>
   </bean>  
	
	<!-- 将session放入redis -->
	<bean id="redisHttpSessionConfiguration"
			class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
	    <property name="maxInactiveIntervalInSeconds" value="${redis.session.timeout}" />
	</bean>
	
   <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >  
         <property name="connectionFactory" ref="connectionFactory" />  
         <property name="keySerializer" >  
             <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
         </property>  
         <property name="valueSerializer" >  
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
         </property>  
   </bean >  
     
    <!-- cache配置 -->  
   <bean id="methodCacheInterceptor" class="com.xunge.core.redis.MethodCacheInterceptor" >  
         <property name="redisUtil" ref="redisUtil" />  
   </bean > 
   <bean id="redisUtil" class="com.xunge.core.redis.RedisUtil" >  
         <property name="redisTemplate" ref="redisTemplate" />  
   </bean>   
	
	<!-- 扫描需要加入缓存的类或方法 -->  
	<bean id="methodCachePointCut"  class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" >  
	      <property name="advice" ref="methodCacheInterceptor" />  
	      <property name="patterns" >  
	          <list>  
	             <value>com.xunge.service.(.)+.*ServiceImpl.*</value >  
	          </list>  
	      </property>  
	</bean> 
	
</beans>