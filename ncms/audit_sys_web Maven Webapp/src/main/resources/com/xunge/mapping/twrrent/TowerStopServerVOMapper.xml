<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.dao.TowerStopServerMapper" >
  <resultMap id="BaseResultMap" type="com.xunge.model.towerrent.stopserver.TowerStopServerVO" >
    <id column="stopserver_id" property="stopServerId" jdbcType="VARCHAR" />
    <result column="business_confirm_number" property="businessConfirmNumber" jdbcType="VARCHAR" />
    <result column="reg_id" property="regId" jdbcType="VARCHAR" />
    <result column="tower_station_name" property="towerStationName" jdbcType="VARCHAR" />
    <result column="tower_station_code" property="towerStationCode" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="stop_use_date" property="stopUseDate" jdbcType="TIMESTAMP" />
    <result column="stop_reason" property="stopReason" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="check_state" property="auditState" jdbcType="INTEGER" />
     <collection property="sysRegionVO" javaType="com.xunge.model.system.region.SysRegionVO">
        <id column="reg_id" property="regId" jdbcType="VARCHAR" />
	    <result column="prv_id" property="prvId" jdbcType="VARCHAR" />
	    <result column="reg_code" property="regCode" jdbcType="VARCHAR" />
	    <result column="reg_name" property="regName" jdbcType="VARCHAR" />
	    <result column="preg_name" property="pRegName" jdbcType="VARCHAR" />
	    <result column="preg_id" property="pregId" jdbcType="VARCHAR" />
	    <result column="prv_name" property="prvName" jdbcType="INTEGER" />
     </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    stopserver_id, business_confirm_number, twr_rentinformationtower_stopserver.reg_id, tower_station_name, tower_station_code, 
    start_date, end_date, stop_use_date, stop_reason, create_user_id, create_time, check_state
  </sql>
  <!-- 审核完成修改审核状态 -->
  <update id="updateCheckStateById" parameterType="Map">
  	update twr_rentinformationtower_stopserver
  	set check_state = #{checkState}
  	where stopserver_id = #{stopServerId}
  </update>
  <!-- 根据id查询服务终止信息 -->
   <select id="queryTowerStopServerById" resultMap="BaseResultMap" parameterType="Map" >
  	select
    <include refid="Base_Column_List" />,
  		v_sys_region.preg_id,
		v_sys_region.reg_name,
		v_sys_region.prv_id,
		v_sys_region.reg_state,
		v_sys_region.preg_name,
		v_sys_region.prv_name
  	from twr_rentinformationtower_stopserver INNER JOIN v_sys_region 
  	ON v_sys_region.reg_id = twr_rentinformationtower_stopserver.reg_id
	  	<where>
	    	<if test="stopServerId != '' and stopServerId != null">
	    		and twr_rentinformationtower_stopserver.stopserver_id = #{stopServerId,jdbcType=VARCHAR}
	    	</if>
	    	<if test="towerStationCode != '' and towerStationCode != null">
	    		and twr_rentinformationtower_stopserver.tower_station_code = #{towerStationCode}
	    	</if>
	    	<if test="businessConfirmNumber != '' and businessConfirmNumber != null">
	    		and twr_rentinformationtower_stopserver.business_confirm_number = #{businessConfirmNumber}
	    	</if>
	    	<if test="stopUseDate != '' and stopUseDate != null">
	    		and twr_rentinformationtower_stopserver.stop_use_date = #{stopUseDate}
	    	</if>
	    </where>
  	</select>
  <select id="queryTowerStopServer" resultMap="BaseResultMap" parameterType="Map" >
  	select
    <include refid="Base_Column_List" />,
  		v_sys_region.preg_id,
		v_sys_region.reg_name,
		v_sys_region.prv_id,
		v_sys_region.reg_state,
		v_sys_region.preg_name,
		v_sys_region.prv_name
  	from twr_rentinformationtower_stopserver INNER JOIN v_sys_region 
  	ON v_sys_region.reg_id = twr_rentinformationtower_stopserver.reg_id
  	<where>
    	1=1
    	<if test="stopServerId != '' and stopServerId != null">
    		and stopserver_id = #{stopServerId,jdbcType=VARCHAR}
    	</if>
    	<if test="checkState != '' and checkState != null">
    		and check_state = #{checkState}
    	</if>
    	<if test="regId != '' and regId != null">
			and v_sys_region.reg_id = #{regId,jdbcType=VARCHAR}
		</if>
			
    	<if test="pregId != '' and pregId != null">
    		and preg_id = #{pregId,jdbcType=VARCHAR}
    	</if>
    	<!-- 流程实例id集合 -->
		<if test="idsList != null and idsList.size()>0">  
        	and stopserver_id in  
	        <foreach collection="idsList" item="item" index="index" open="(" separator="," close=")">  
                #{item.businessId}
            </foreach>  
   		</if>
   		<!-- 根据权限过滤 -->
   		<include refid="com.xunge.dao.system.SysRegionVOMapper.queryRegionByUserIds"></include>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from twr_rentinformationtower_stopserver
    where stopserver_id = #{stopServerId,jdbcType=VARCHAR}
  </delete>
  <insert id="insertTowerStopServer" parameterType="com.xunge.model.towerrent.stopserver.TowerStopServerVO" >
    insert into twr_rentinformationtower_stopserver (stopserver_id, business_confirm_number, 
      reg_id, tower_station_name, tower_station_code, 
      start_date, end_date, stop_use_date, 
      stop_reason, create_user_id, create_time, 
      check_state)
    values 
     <foreach collection="list" item="item" index="index" separator="," > 
	    (#{item.stopServerId,jdbcType=VARCHAR}, #{item.businessConfirmNumber,jdbcType=VARCHAR}, 
	      #{item.regId,jdbcType=VARCHAR}, #{item.towerStationName,jdbcType=VARCHAR}, 
	      #{item.towerStationCode,jdbcType=VARCHAR}, #{item.startDate,jdbcType=TIMESTAMP}, 
	      #{item.endDate,jdbcType=TIMESTAMP}, #{item.stopUseDate,jdbcType=TIMESTAMP}, 
	      #{item.stopReason,jdbcType=VARCHAR}, #{item.createUserId,jdbcType=VARCHAR}, 
	      now(), #{item.auditState,jdbcType=VARCHAR})
      </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.xunge.model.towerrent.stopserver.TowerStopServerVO" >
    insert into twr_rentinformationtower_stopserver
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stopServerId != null" >
        stopserver_id,
      </if>
      <if test="businessConfirmNumber != null" >
        business_confirm_number,
      </if>
      <if test="regId != null" >
        reg_id,
      </if>
      <if test="towerStationName != null" >
        tower_station_name,
      </if>
      <if test="towerStationCode != null" >
        tower_station_code,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="stopUseDate != null" >
        stop_use_date,
      </if>
      <if test="stopReason != null" >
        stop_reason,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="auditState != null" >
        check_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stopServerId != null" >
        #{stopServerId,jdbcType=VARCHAR},
      </if>
      <if test="businessConfirmNumber != null" >
        #{businessConfirmNumber,jdbcType=VARCHAR},
      </if>
      <if test="regId != null" >
        #{regId,jdbcType=VARCHAR},
      </if>
      <if test="towerStationName != null" >
        #{towerStationName,jdbcType=VARCHAR},
      </if>
      <if test="towerStationCode != null" >
        #{towerStationCode,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="stopUseDate != null" >
        #{stopUseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="stopReason != null" >
        #{stopReason,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunge.model.towerrent.stopserver.TowerStopServerVO" >
    update twr_rentinformationtower_stopserver
    <set >
      <if test="businessConfirmNumber != null" >
        business_confirm_number = #{businessConfirmNumber,jdbcType=VARCHAR},
      </if>
      <if test="regId != null" >
        reg_id = #{regId,jdbcType=VARCHAR},
      </if>
      <if test="towerStationName != null" >
        tower_station_name = #{towerStationName,jdbcType=VARCHAR},
      </if>
      <if test="towerStationCode != null" >
        tower_station_code = #{towerStationCode,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="stopUseDate != null" >
        stop_use_date = #{stopUseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="stopReason != null" >
        stop_reason = #{stopReason,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditState != null" >
        check_state = #{auditState,jdbcType=VARCHAR},
      </if>
    </set>
    where stopserver_id = #{stopServerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunge.model.towerrent.stopserver.TowerStopServerVO" >
    update twr_rentinformationtower_stopserver
    set business_confirm_number = #{businessConfirmNumber,jdbcType=VARCHAR},
      reg_id = #{regId,jdbcType=VARCHAR},
      tower_station_name = #{towerStationName,jdbcType=VARCHAR},
      tower_station_code = #{towerStationCode,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      stop_use_date = #{stopUseDate,jdbcType=TIMESTAMP},
      stop_reason = #{stopReason,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      check_state = #{auditState,jdbcType=VARCHAR}
    where stopserver_id = #{stopServerId,jdbcType=VARCHAR}
  </update>
</mapper>