<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunge.dao.selfelec.VEleBillaccountMapper">
  <resultMap id="BaseResultMap" type="com.xunge.model.selfelec.VEleBillaccount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    <result column="billaccount_id" jdbcType="VARCHAR" property="billaccountId" />
    <result column="prv_id" jdbcType="VARCHAR" property="prvId" />
    <result column="prv_sname" jdbcType="VARCHAR" property="prvSname" />
    <result column="preg_id" jdbcType="VARCHAR" property="pregId" />
    <result column="preg_name" jdbcType="VARCHAR" property="pregName" />
    <result column="reg_id" jdbcType="VARCHAR" property="regId" />
    <result column="reg_name" jdbcType="VARCHAR" property="regName" />
    <result column="billaccount_code" jdbcType="VARCHAR" property="billaccountCode" />
    <result column="billaccount_name" jdbcType="VARCHAR" property="billaccountName" />
    <result column="billaccount_state" jdbcType="INTEGER" property="billaccountState" />
    <result column="billaccount_type" jdbcType="INTEGER" property="billaccountType" />
    <result column="auditing_state" jdbcType="INTEGER" property="auditingState" />
    <result column="auditing_user_id" jdbcType="VARCHAR" property="auditingUserId" />
    <result column="auditing_date" jdbcType="TIMESTAMP" property="auditingDate" />
    <result column="plan_date" jdbcType="TIMESTAMP" property="planDate" />
    <result column="calc_multi" jdbcType="DECIMAL" property="calcMulti" />
    <result column="payment_state" jdbcType="INTEGER" property="paymentState" />
    <result column="billaccount_note" jdbcType="VARCHAR" property="billaccountNote" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    billaccount_id, prv_id, prv_sname, preg_id, preg_name, reg_id, reg_name, billaccount_code, 
    billaccount_name, billaccount_state, billaccount_type, auditing_state, auditing_user_id, 
    auditing_date, plan_date, calc_multi, payment_state, billaccount_note, user_name
  </sql>
  <select id="selectByExample" parameterType="Map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_ele_billaccount
   <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      <if test="regIds !=null and regIds.size()>0">
       AND reg_id in 
		<foreach collection="regIds" item="item" index="index" open="(" separator="," close=")">  
	         #{item}
	     </foreach>
     </if>
       AND billaccount_state !=-1
    </where>
    
   
  
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xunge.model.selfelec.VEleBillaccountExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    delete from v_ele_billaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunge.model.selfelec.VEleBillaccount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    insert into v_ele_billaccount (billaccount_id, prv_id, prv_sname, 
      preg_id, preg_name, reg_id, 
      reg_name, billaccount_code, billaccount_name, 
      billaccount_state, billaccount_type, auditing_state, 
      auditing_user_id, auditing_date, plan_date, 
      calc_multi, payment_state, billaccount_note, 
      user_name)
    values (#{billaccountId,jdbcType=VARCHAR}, #{prvId,jdbcType=VARCHAR}, #{prvSname,jdbcType=VARCHAR}, 
      #{pregId,jdbcType=VARCHAR}, #{pregName,jdbcType=VARCHAR}, #{regId,jdbcType=VARCHAR}, 
      #{regName,jdbcType=VARCHAR}, #{billaccountCode,jdbcType=VARCHAR}, #{billaccountName,jdbcType=VARCHAR}, 
      #{billaccountState,jdbcType=INTEGER}, #{billaccountType,jdbcType=INTEGER}, #{auditingState,jdbcType=INTEGER}, 
      #{auditingUserId,jdbcType=VARCHAR}, #{auditingDate,jdbcType=TIMESTAMP}, #{planDate,jdbcType=TIMESTAMP}, 
      #{calcMulti,jdbcType=DECIMAL}, #{paymentState,jdbcType=INTEGER}, #{billaccountNote,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xunge.model.selfelec.VEleBillaccount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    insert into v_ele_billaccount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billaccountId != null">
        billaccount_id,
      </if>
      <if test="prvId != null">
        prv_id,
      </if>
      <if test="prvSname != null">
        prv_sname,
      </if>
      <if test="pregId != null">
        preg_id,
      </if>
      <if test="pregName != null">
        preg_name,
      </if>
      <if test="regId != null">
        reg_id,
      </if>
      <if test="regName != null">
        reg_name,
      </if>
      <if test="billaccountCode != null">
        billaccount_code,
      </if>
      <if test="billaccountName != null">
        billaccount_name,
      </if>
      <if test="billaccountState != null">
        billaccount_state,
      </if>
      <if test="billaccountType != null">
        billaccount_type,
      </if>
      <if test="auditingState != null">
        auditing_state,
      </if>
      <if test="auditingUserId != null">
        auditing_user_id,
      </if>
      <if test="auditingDate != null">
        auditing_date,
      </if>
      <if test="planDate != null">
        plan_date,
      </if>
      <if test="calcMulti != null">
        calc_multi,
      </if>
      <if test="paymentState != null">
        payment_state,
      </if>
      <if test="billaccountNote != null">
        billaccount_note,
      </if>
      <if test="userName != null">
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billaccountId != null">
        #{billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="prvId != null">
        #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="prvSname != null">
        #{prvSname,jdbcType=VARCHAR},
      </if>
      <if test="pregId != null">
        #{pregId,jdbcType=VARCHAR},
      </if>
      <if test="pregName != null">
        #{pregName,jdbcType=VARCHAR},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regName != null">
        #{regName,jdbcType=VARCHAR},
      </if>
      <if test="billaccountCode != null">
        #{billaccountCode,jdbcType=VARCHAR},
      </if>
      <if test="billaccountName != null">
        #{billaccountName,jdbcType=VARCHAR},
      </if>
      <if test="billaccountState != null">
        #{billaccountState,jdbcType=INTEGER},
      </if>
      <if test="billaccountType != null">
        #{billaccountType,jdbcType=INTEGER},
      </if>
      <if test="auditingState != null">
        #{auditingState,jdbcType=INTEGER},
      </if>
      <if test="auditingUserId != null">
        #{auditingUserId,jdbcType=VARCHAR},
      </if>
      <if test="auditingDate != null">
        #{auditingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="planDate != null">
        #{planDate,jdbcType=TIMESTAMP},
      </if>
      <if test="calcMulti != null">
        #{calcMulti,jdbcType=DECIMAL},
      </if>
      <if test="paymentState != null">
        #{paymentState,jdbcType=INTEGER},
      </if>
      <if test="billaccountNote != null">
        #{billaccountNote,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunge.model.selfelec.VEleBillaccountExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    select count(*) from v_ele_billaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    update v_ele_billaccount
    <set>
      <if test="record.billaccountId != null">
        billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.prvId != null">
        prv_id = #{record.prvId,jdbcType=VARCHAR},
      </if>
      <if test="record.prvSname != null">
        prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      </if>
      <if test="record.pregId != null">
        preg_id = #{record.pregId,jdbcType=VARCHAR},
      </if>
      <if test="record.pregName != null">
        preg_name = #{record.pregName,jdbcType=VARCHAR},
      </if>
      <if test="record.regId != null">
        reg_id = #{record.regId,jdbcType=VARCHAR},
      </if>
      <if test="record.regName != null">
        reg_name = #{record.regName,jdbcType=VARCHAR},
      </if>
      <if test="record.billaccountCode != null">
        billaccount_code = #{record.billaccountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.billaccountName != null">
        billaccount_name = #{record.billaccountName,jdbcType=VARCHAR},
      </if>
      <if test="record.billaccountState != null">
        billaccount_state = #{record.billaccountState,jdbcType=INTEGER},
      </if>
      <if test="record.billaccountType != null">
        billaccount_type = #{record.billaccountType,jdbcType=INTEGER},
      </if>
      <if test="record.auditingState != null">
        auditing_state = #{record.auditingState,jdbcType=INTEGER},
      </if>
      <if test="record.auditingUserId != null">
        auditing_user_id = #{record.auditingUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditingDate != null">
        auditing_date = #{record.auditingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planDate != null">
        plan_date = #{record.planDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.calcMulti != null">
        calc_multi = #{record.calcMulti,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentState != null">
        payment_state = #{record.paymentState,jdbcType=INTEGER},
      </if>
      <if test="record.billaccountNote != null">
        billaccount_note = #{record.billaccountNote,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 15 11:30:31 CST 2017.
    -->
    update v_ele_billaccount
    set billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      prv_id = #{record.prvId,jdbcType=VARCHAR},
      prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      preg_id = #{record.pregId,jdbcType=VARCHAR},
      preg_name = #{record.pregName,jdbcType=VARCHAR},
      reg_id = #{record.regId,jdbcType=VARCHAR},
      reg_name = #{record.regName,jdbcType=VARCHAR},
      billaccount_code = #{record.billaccountCode,jdbcType=VARCHAR},
      billaccount_name = #{record.billaccountName,jdbcType=VARCHAR},
      billaccount_state = #{record.billaccountState,jdbcType=INTEGER},
      billaccount_type = #{record.billaccountType,jdbcType=INTEGER},
      auditing_state = #{record.auditingState,jdbcType=INTEGER},
      auditing_user_id = #{record.auditingUserId,jdbcType=VARCHAR},
      auditing_date = #{record.auditingDate,jdbcType=TIMESTAMP},
      plan_date = #{record.planDate,jdbcType=TIMESTAMP},
      calc_multi = #{record.calcMulti,jdbcType=DECIMAL},
      payment_state = #{record.paymentState,jdbcType=INTEGER},
      billaccount_note = #{record.billaccountNote,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- 批量导入数据就 wangz -->
  <insert id="batchInsert" parameterType="java.util.List">
  	INSERT INTO ele_billaccount (billaccount_id,prv_id,preg_id,reg_id,billaccount_code,billaccount_name,billaccount_state,billaccount_type,auditing_state,billaccount_note) 
	VALUES
	<foreach collection="list" item="item" index="index" separator="," > 
	  (
	   #{item.billaccountId,jdbcType=VARCHAR},
	   #{item.prvId,jdbcType=VARCHAR},
	   #{item.pregId,jdbcType=VARCHAR},
	   #{item.regId,jdbcType=VARCHAR},
	   #{item.billaccountCode,jdbcType=VARCHAR},
	   #{item.billaccountName,jdbcType=VARCHAR},
	   #{item.billaccountState,jdbcType=INTEGER},
	   #{item.billaccountType,jdbcType=INTEGER},
	   #{item.auditingState,jdbcType=INTEGER},
	   #{item.billaccountNote,jdbcType=VARCHAR}
	  )
	  </foreach>
  </insert>
  
  <!-- 查询数据库中最大数值的code wangz -->
  <select id="queryMaxCode" parameterType="Map" resultType="Map">
  	SELECT MAX(eb.billaccount_code) AS code FROM ele_billaccount AS eb 
  	<where>
  		<if test="prvId != null and prvid != ''">
  			AND eb.prv_id =#{prvId}
  		</if>
  		<if test=" prefix != null and prefix != ''">
  		AND INSTR(eb.billaccount_code,#{prefix})
  		</if>
  	</where>
  	ORDER BY eb.billaccount_code FOR UPDATE
  </select>
  
  <!-- 查询数据库中古话信息最大数值的code yuefy -->
  <select id="queryContractMaxCode" parameterType="Map" resultType="Map">
  	SELECT MAX(eb.contract_code) AS code FROM dat_contract AS eb 
  	<where>
  		<if test="prvId != null and prvid != ''">
  			AND eb.prv_id =#{prvId}
  		</if>
  		<if test=" prefix != null and prefix != ''">
  			AND INSTR(eb.contract_code,#{prefix})
  		</if>
  	</where>
  	ORDER BY eb.contract_code FOR UPDATE
  </select>
  
  <!-- 查询报账点总数 -->
  <select id="selectBillaccountNum" parameterType="map" resultType="java.lang.Integer">
	select sum(tt.billaccount_id) from (
		select count(DISTINCT eba.billaccount_id) billaccount_id from ele_billaccount eba
		<where> eba.billaccount_state=0 and eba.auditing_state=0
			<if test="prv_id != null">
				and eba.prv_id = #{prv_id,jdbcType=VARCHAR}
			</if>
			<if test="prv_ids != null">
				and eba.prv_id in
				<foreach collection="prv_ids" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		union all
		select count(DISTINCT rba.billaccount_id) billaccount_id from rent_billaccount rba
		<where> rba.billaccount_state=0 and rba.audit_state=0
			<if test="prv_id != null">
				and rba.prv_id = #{prv_id,jdbcType=VARCHAR}
			</if>
			<if test="prv_ids != null">
				and rba.prv_id in
				<foreach collection="prv_ids" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	) tt
  </select>
  
  <update id="updateById" parameterType="Map">
		update ele_billaccount set auditing_state = #{auditState,jdbcType=INTEGER}
		where billaccount_id=#{billaccountId,jdbcType=VARCHAR}
	</update>
</mapper>