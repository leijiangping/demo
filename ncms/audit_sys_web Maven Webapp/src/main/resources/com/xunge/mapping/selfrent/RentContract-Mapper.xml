<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.mapping.RentContractVOMapper">
	<resultMap id="BaseResultMap"
		type="com.xunge.model.selfrent.contract.RentContractVO">
		<id column="rentcontract_id" property="rentcontractId" jdbcType="VARCHAR" />
		<result column="contract_id" property="contractId" jdbcType="VARCHAR" />
		<result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
		<result column="paymentperiod_id" property="paymentperiodId"
			jdbcType="VARCHAR" />
		<result column="total_amountnotax" property="totalAmountnotax"
			jdbcType="DECIMAL" />
		<result column="include_tax" property="includeTax" jdbcType="INTEGER" />
		<result column="billamount_taxratio" property="billamountTaxratio"
			jdbcType="DECIMAL" />
		<result column="tax_amount" property="taxAmount" jdbcType="DECIMAL" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="year_amount" property="yearAmount" jdbcType="DECIMAL" />
		<result column="address_type" property="addressType" jdbcType="INTEGER" />
		<result column="house_type" property="houseType" jdbcType="INTEGER" />
		<result column="charge_type" property="chargeType" jdbcType="INTEGER" />
		<result column="property_type" property="propertyType"
			jdbcType="INTEGER" />
		<result column="property_area" property="propertyArea"
			jdbcType="DECIMAL" />
		<result column="property_address" property="propertyAddress"
			jdbcType="VARCHAR" />
		<result column="property_name" property="propertyName"
			jdbcType="VARCHAR" />
		<result column="rentcontract_note" property="rentcontractNote"
			jdbcType="VARCHAR" />
		<result column="audit_state" property="auditState" jdbcType="INTEGER" />
		<association property="datContractVO"
			javaType="com.xunge.model.selfrent.contract.DatContractVO">
			<id column="contract_id" property="contractId" jdbcType="VARCHAR" />
			<result column="reg_id" property="regId" jdbcType="VARCHAR" />
			<result column="manager_department" property="managerDepartment"
				jdbcType="VARCHAR" />
			<result column="manager_user" property="managerUser" jdbcType="VARCHAR" />
			<result column="contract_code" property="contractCode"
				jdbcType="VARCHAR" />
			<result column="contract_name" property="contractName"
				jdbcType="VARCHAR" />
			<result column="contract_type" property="contractType"
				jdbcType="INTEGER" />
			<result column="contract_startdate" property="contractStartdate"
				jdbcType="VARCHAR" />
			<result column="contract_enddate" property="contractEnddate"
				jdbcType="VARCHAR" />
			<result column="contract_signdate" property="contractSigndate"
				jdbcType="VARCHAR" />
			<result column="contract_yearquantity" property="contractYearquantity"
				jdbcType="DECIMAL" />
			<result column="contract_checkname1" property="contractCheckname1"
				jdbcType="VARCHAR" />
			<result column="contract_checkname2" property="contractCheckname2"
				jdbcType="VARCHAR" />
			<result column="contract_state" property="contractState"
				jdbcType="INTEGER" />
			<result column="contract_note" property="contractNote"
				jdbcType="VARCHAR" />
			<result column="data_from" property="dataFrom" jdbcType="INTEGER" />
			<result column="is_downshare" property="isDownShare" jdbcType="INTEGER" />
			<result column="prv_id" property="prvId" jdbcType="VARCHAR" />
			<result column="reg_name" property="regName" jdbcType="VARCHAR" />
			<result column="preg_name" property="pregName" jdbcType="VARCHAR" />
			<result column="preg_id" property="pregId" jdbcType="VARCHAR" />
			<result column="prv_sname" property="prvSName" jdbcType="INTEGER" />
			<result column="auditing_state" property="auditingState" jdbcType="INTEGER"/>
		</association>
		<association property="datSupplierVO"
			javaType="com.xunge.model.selfrent.contract.DatSupplierVO">
			<id column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
			<result column="contractsys_id" property="supplierCode"
				jdbcType="VARCHAR" />
			<result column="supplier_code" property="supplierCode"
				jdbcType="VARCHAR" />
			<result column="supplier_name" property="supplierName"
				jdbcType="VARCHAR" />
		</association>
		<association property="datPaymentPeriodVO"
			javaType="com.xunge.model.selfrent.billAccount.DatPaymentPeriodVO">
			<id column="paymentperiod_id" property="paymentperiodId" jdbcType="VARCHAR" />
			<result column="paymentperiod_value" property="paymentperiodValue"
				jdbcType="DOUBLE" />
			<result column="paymentperiod_state" property="paymentperiodState"
				jdbcType="INTEGER" />
		</association>
	</resultMap>

	<resultMap id="BaseResultMap_RentContract"
		type="com.xunge.model.selfrent.contract.RentContractVO">
		<id column="rentcontract_id" property="rentcontractId" jdbcType="VARCHAR" />
		<result column="contract_id" property="contractId" jdbcType="VARCHAR" />
		<result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
		<result column="paymentperiod_id" property="paymentperiodId"
			jdbcType="VARCHAR" />
		<result column="total_amountnotax" property="totalAmountnotax"
			jdbcType="DECIMAL" />
		<result column="include_tax" property="includeTax" jdbcType="INTEGER" />
		<result column="billamount_taxratio" property="billamountTaxratio"
			jdbcType="DECIMAL" />
		<result column="tax_amount" property="taxAmount" jdbcType="DECIMAL" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="year_amount" property="yearAmount" jdbcType="DECIMAL" />
		<result column="address_type" property="addressType" jdbcType="INTEGER" />
		<result column="house_type" property="houseType" jdbcType="INTEGER" />
		<result column="charge_type" property="chargeType" jdbcType="INTEGER" />
		<result column="property_type" property="propertyType"
			jdbcType="INTEGER" />
		<result column="property_area" property="propertyArea"
			jdbcType="DECIMAL" />
		<result column="property_address" property="propertyAddress"
			jdbcType="VARCHAR" />
		<result column="property_name" property="propertyName"
			jdbcType="VARCHAR" />
		<result column="rentcontract_note" property="rentcontractNote"
			jdbcType="VARCHAR" />
		<result column="audit_state" property="auditState" jdbcType="INTEGER" />
	</resultMap>

	<!-- 查询最后缴费日期 -->
	<resultMap id="BaseResultMap_paymentEnddate"
		type="com.xunge.model.selfrent.contract.RentContractVO">
		<id column="rentcontract_id" property="rentcontractId" jdbcType="VARCHAR" />
		<result column="paymentperiod_id" property="paymentperiodId"
			jdbcType="VARCHAR" />
		<association property="rentBillAccountContractVO"
			javaType="com.xunge.model.selfrent.billAccount.RentBillAccountContractVO">
			<id column="billaccountcontract_id" property="billaccountcontractId"
				jdbcType="VARCHAR" />
			<result column="rentcontract_id" property="rentcontractId"
				jdbcType="VARCHAR" />
			<result column="billAccount_id" property="billAccountId"
				jdbcType="VARCHAR" />
			<association property="rentPaymentVO"
				javaType="com.xunge.model.selfrent.billAccount.RentPaymentVO">
				<id column="payment_id" property="paymentId" jdbcType="VARCHAR" />
				<result column="billAccount_id" property="billAccountId"
					jdbcType="VARCHAR" />
				<result column="payment_enddate" property="paymentEnddate"
					jdbcType="INTEGER" />
			</association>
		</association>
		<collection property="datPaymentPeriodVO"
			javaType="com.xunge.model.selfrent.billAccount.DatPaymentPeriodVO">
			<id column="paymentperiod_id" property="paymentperiodId" jdbcType="VARCHAR" />
			<result column="paymentperiod_value" property="paymentperiodValue"
				jdbcType="DOUBLE" />
			<result column="paymentperiod_state" property="paymentperiodState"
				jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<!-- 查询付款周期 -->
	<resultMap id="BaseResultMap_paymentPeriodDate"
		type="com.xunge.model.selfrent.contract.RentContractVO">
		<id column="rentcontract_id" property="rentcontractId" jdbcType="VARCHAR" />
		<result column="paymentperiod_id" property="paymentperiodId"
			jdbcType="VARCHAR" />
		<association property="datPaymentPeriodVO"
			javaType="com.xunge.model.selfrent.billAccount.DatPaymentPeriodVO">
			<id column="paymentperiod_id" property="paymentperiodId" jdbcType="VARCHAR" />
			<result column="paymentperiod_value" property="paymentperiodValue"
				jdbcType="DOUBLE" />
			<result column="paymentperiod_unit" property="paymentperiodUnit"
				jdbcType="INTEGER" />
			<result column="paymentperiod_name" property="paymentperiodName"
				jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<!-- 新增RentContract对象 -->
	<insert id="insertRentContractVO" parameterType="com.xunge.model.selfrent.contract.RentContractVO">
		insert into rent_contract (
		rentcontract_id,contract_id,supplier_id,paymentperiod_id,total_amountnotax,
		include_tax,billamount_taxratio,tax_amount,total_amount,year_amount,address_type,
		house_type,charge_type,property_type,property_area,property_address,property_name,
		rentcontract_note,audit_state
		)
		values (
		#{rentcontractId},
		#{contractId},
		#{supplierId},
		#{paymentperiodId},
		#{totalAmountnotax},
		#{includeTax},
		#{billamountTaxratio},
		#{taxAmount},
		#{totalAmount},
		#{yearAmount},
		#{addressType},
		#{houseType},
		#{chargeType},
		#{propertyType},
		#{propertyArea},
		#{propertyAddress},
		#{propertyName},
		#{rentcontractNote},
		#{auditState}
		)
	</insert>
	<!-- 补录页面提交审核 -->
	<update id="commit" parameterType="Map">
		<!-- update rent_contract
		set
		audit_state = #{state,jdbcType=VARCHAR}
		where
		rentcontract_id = #{id,jdbcType=VARCHAR} -->
		update dat_contract
		set
		auditing_state = #{state,jdbcType=VARCHAR}
		where
		contract_id = #{contractId,jdbcType=VARCHAR}
	</update>
	<!-- 补录RentContract对象 -->
	<update id="updateRentContractVO" parameterType="com.xunge.model.selfrent.contract.RentContractVO">
		update rent_contract
		set
		paymentperiod_id = #{paymentperiodId},
		supplier_id = #{supplierId},
		contract_id = #{contractId},
		total_amount = #{totalAmount},
		year_amount = #{yearAmount},
		house_type = #{houseType},
		charge_type = #{chargeType},
		property_address = #{propertyAddress},
		rentcontract_note = #{rentcontractNote}
		where
		rentcontract_id = #{rentcontractId}
	</update>

	<select id="selectContractNumByCondition" parameterType="map" resultType="java.util.Map">
		select 
			reg.reg_name name,
			count(rentc.contract_id) value 
		from rent_contract rentc
		left join dat_contract datc on rentc.contract_id=datc.contract_id
		left join sys_region reg on reg.reg_id=datc.reg_id
		<where> 
			<if test="prv_id != null">
				datc.prv_id=#{prv_id,jdbcType=VARCHAR} and
			</if>
			<if test="reg_ids != null">
				datc.reg_id in
				<foreach collection="reg_ids" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		GROUP BY reg.reg_id
	</select>
	
	<!-- 查询所有主合同信息 -->
	<select id="queryRentContractVO" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT
		dat_contract.contract_id,
		rent_contract.rentcontract_id,
		rent_contract.audit_state,
		rent_contract.supplier_id,
		rent_contract.total_amount,
		dat_contract.auditing_state,
		dat_contract.contractsys_id,
		dat_contract.is_downshare,
		dat_contract.manager_department,
		dat_contract.manager_user,
		dat_contract.contract_code,
		dat_contract.contract_name,
		dat_contract.contract_type,
		dat_contract.contract_startdate,
		dat_contract.contract_enddate,
		dat_contract.contract_signdate,
		dat_contract.contract_yearquantity,
		dat_contract.contract_checkname1,
		dat_contract.contract_checkname2,
		dat_contract.contract_state,
		dat_contract.contract_note,
		dat_contract.data_from,
		dat_contract.reg_id,
		dat_contract.preg_id,
		dat_contract.reg_name,
		dat_contract.prv_id,
		dat_contract.preg_name,
		dat_contract.prv_sname
		FROM
		rent_contract
		INNER
		JOIN dat_contract ON dat_contract.contract_id =
		rent_contract.contract_id
		<where>
			<if test="warningDate != null and warningDate != ''">
				and dat_contract.contract_enddate &lt;= (date_add(#{nowDateTime}, interval #{warningDate} day))
			</if>
			<if test="contractName != '' and contractName != null">
				and (dat_contract.contract_name like
				CONCAT('%',#{contractName,jdbcType=VARCHAR},'%')
				or
				dat_contract.contract_code like
				CONCAT('%',#{contractName,jdbcType=VARCHAR},'%'))
			</if>
			<if test="contractState != '' and contractState != null">
				and dat_contract.contract_state =
				#{contractState,jdbcType=VARCHAR}
			</if>
			<if test="dataFrom != null">
				and ( dat_contract.data_from = #{dataFrom,jdbcType=VARCHAR}
				<if test="dataFrom1 != null">
					or dat_contract.data_from = #{dataFrom1,jdbcType=VARCHAR}
				</if>
				)
			</if>
			<if test="regId != null and regId != ''">
				and (dat_contract.reg_id = #{regId,jdbcType=VARCHAR}
				<if test="pregIds !=null and pregIds.size()>0">
					or (dat_contract.is_downshare = #{isDownShare} and (dat_contract.reg_id IS NULL or dat_contract.reg_id = '') and
					dat_contract.preg_id in
					<foreach collection="pregIds" item="item" index="index"
						open="(" separator="," close=")">
						#{item}
					</foreach>
					)
				</if>
				<if test="prvId != null and prvId != ''">
					or (dat_contract.prv_id = #{prvId} and dat_contract.is_downshare =
					#{isDownShare} and (dat_contract.preg_id IS NULL or dat_contract.preg_id = ''))
				</if>
				)
			</if>
			<if test="pregId != null and pregId !=''">
				and ((dat_contract.preg_id = #{pregId,jdbcType=VARCHAR}
				or (dat_contract.preg_id = #{pregId,jdbcType=VARCHAR} and dat_contract.is_downshare =
				#{isDownShare}))
				<if test="prvId != null and prvId != ''">
					or (dat_contract.prv_id = #{prvId} and dat_contract.is_downshare =
					#{isDownShare} and (dat_contract.preg_id IS NULL or dat_contract.preg_id = ''))
				</if>
				)
			</if>
			<if test="rentcontractState != '' and rentcontractState != null">
				and dat_contract.auditing_state =
				#{rentcontractState,jdbcType=VARCHAR}
			</if>
			<if test="contractStartdate != null and contractStartdate != ''">
				and dat_contract.contract_startdate &gt;= #{contractStartdate}
			</if>
			<if test="contractEnddate != null and contractEnddate != ''">
				and dat_contract.contract_enddate &lt;= #{contractEnddate}
			</if>
			<if test="managerDepartment != '' and managerDepartment != null">
				and dat_contract.manager_department =
				#{managerDepartment,jdbcType=VARCHAR}
			</if>
			<!-- 流程实例id集合 -->
			<if test="idsList != null and idsList.size()>0">
				and rent_contract.rentcontract_id in
				<foreach collection="idsList" item="item" index="index"
					open="(" separator="," close=")">
					#{item.businessId}
				</foreach>
			</if>
			<if test="regId == '' or regId == null ">
				and ((dat_contract.prv_id = #{prvId} and dat_contract.is_downshare = #{isDownShare} 
				and (dat_contract.preg_id IS NULL or dat_contract.preg_id = ''))
	 			<if test="regIds !=null and regIds.size()>0">
					or dat_contract.reg_id in
					<foreach collection="regIds" item="item" index="index" open="("
						separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="pregIds !=null and pregIds.size()>0">
					or (dat_contract.is_downshare = #{isDownShare} and (dat_contract.reg_id IS NULL or dat_contract.reg_id = '') and
					dat_contract.preg_id in
					<foreach collection="pregIds" item="item" index="index"
						open="(" separator="," close=")">
						#{item}
					</foreach>
					)
				</if>
				)
			</if>
		</where>
		GROUP BY dat_contract.contract_enddate,dat_contract.contract_id,
		rent_contract.rentcontract_id,
		rent_contract.audit_state,
		rent_contract.supplier_id,
		dat_contract.contractsys_id
		order by
		dat_contract.contract_name
	</select>
	<!-- 根据租房合同id查询房租合同信息 -->
	<select id="queryRentContractById" resultMap="BaseResultMap_RentContract"
		parameterType="Map">
		SELECT
		rentcontract_id,
		contract_id,
		supplier_id,
		paymentperiod_id,
		total_amountnotax,
		include_tax,
		billamount_taxratio,
		tax_amount,
		total_amount,
		year_amount,
		address_type,
		house_type,
		charge_type,
		property_type ,
		property_area,
		property_address,
		property_name,
		audit_state,
		rentcontract_note
		FROM
		rent_contract
		<where>
			rentcontract_id = #{rentContractId}
		</where>
	</select>
	<!-- 根据租房合同id查询房租合同、主合同以及区域信息 -->
	<select id="queryAllRentContractById" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT
		rent_contract.rentcontract_id,
		rent_contract.contract_id,
		rent_contract.supplier_id,
		rent_contract.paymentperiod_id,
		rent_contract.total_amountnotax,
		rent_contract.include_tax,
		rent_contract.billamount_taxratio,
		rent_contract.tax_amount,
		rent_contract.total_amount,
		rent_contract.year_amount,
		rent_contract.address_type,
		rent_contract.house_type,
		rent_contract.charge_type,
		rent_contract.property_type ,
		rent_contract.property_area,
		rent_contract.property_address,
		rent_contract.property_name,
		rent_contract.rentcontract_note,
		rent_contract.audit_state,
		dat_contract.auditing_state,
		dat_contract.contractsys_id,
		dat_contract.is_downshare,
		dat_contract.manager_department,
		dat_contract.manager_user,
		dat_contract.contract_code,
		dat_contract.contract_name,
		dat_contract.contract_type,
		dat_contract.contract_startdate,
		dat_contract.contract_enddate,
		dat_contract.contract_signdate,
		dat_contract.contract_yearquantity,
		dat_contract.contract_checkname1,
		dat_contract.contract_checkname2,
		dat_contract.contract_state,
		dat_contract.contract_note,
		dat_contract.data_from,
		dat_contract.reg_id,
		dat_contract.preg_id,
		dat_contract.reg_name,
		dat_contract.prv_id,
		dat_contract.preg_name,
		dat_contract.prv_name
		FROM
		rent_contract
		INNER JOIN dat_contract ON dat_contract.contract_id =
		rent_contract.contract_id
		<where>
			<if test="rentContractId!=null and rentContractId!=''">
				rentcontract_id = #{rentContractId}
			</if>
		</where>
	</select>
	<select id="queryRentContractByBillAccountId" parameterType="java.lang.String"
		resultMap="BaseResultMap_RentContract">
		select
		rc.rentcontract_id,
		rc.contract_id,
		rc.supplier_id,
		rc.paymentperiod_id,
		rc.total_amountnotax,
		rc.include_tax,
		rc.billamount_taxratio,
		rc.tax_amount,
		rc.total_amount,
		rc.year_amount,
		rc.address_type,
		rc.house_type,
		rc.charge_type,
		rc.property_type ,
		rc.property_area,
		rc.property_address,
		rc.property_name,
		rc.audit_state,
		rc.rentcontract_note
		FROM
		rent_contract rc
		where
		rc.rentcontract_id = (
		select
		rb.rentcontract_id
		from
		rent_billaccountcontract rb
		where
		rb.billaccount_id = #{billAccountId}
		)

	</select>

	<!-- 查询上次房租缴费终期 -->
	<select id="getPaymentEnddate" parameterType="Map" resultType="string">
		SELECT
		rent_payment.payment_enddate
		FROM
		rent_contract
		INNER JOIN
		rent_billaccountcontract ON
		rent_contract.rentcontract_id = rent_billaccountcontract.rentcontract_id
		INNER JOIN rent_payment ON
		rent_billaccountcontract.billaccount_id = rent_payment.billaccount_id
		<where>
			1=1
			<if test="rentcontractId != null and rentcontractId != ''">
				and rent_contract.rentcontract_id =
				#{rentcontractId,jdbcType=VARCHAR}
			</if>
			<if test="paymentState != null and paymentState != ''">
				and rent_payment.payment_flowstate =
				#{paymentState,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY rent_payment.payment_enddate DESC
	</select>

	<!-- 查询付款周期 -->
	<select id="getPaymentPerioddate" parameterType="Map"
		resultMap="BaseResultMap_paymentPeriodDate">
		SELECT
		dat_paymentperiod.paymentperiod_name,
		dat_paymentperiod.paymentperiod_value,
		dat_paymentperiod.paymentperiod_unit
		FROM
		rent_contract
		INNER JOIN
		dat_paymentperiod ON
		rent_contract.paymentperiod_id = dat_paymentperiod.paymentperiod_id
		<where>
			1=1
			<if test="rentcontractId != null and rentcontractId != ''">
				and rent_contract.rentcontract_id =
				#{rentcontractId,jdbcType=VARCHAR}
			</if>
			<if test="paymentperiodState != null and paymentperiodState != ''">
				and dat_paymentperiod.paymentperiod_state =
				#{paymentperiodState,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<select id="querySupplierInfo" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT
		dat_supplier.supplier_id,
		dat_supplier.supplier_code,
		dat_supplier.supplier_name
		FROM
		rent_contract
		INNER JOIN dat_supplier ON rent_contract.supplier_id =
		dat_supplier.supplier_id
		where rent_contract.contract_id=#{contractId}
	</select>
	<select id="queryContractById" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT
		dc.contract_id,
		dc.contract_code,
		dc.contract_name,
		dc.contract_state,
		dc.contract_startdate,
		dc.contract_enddate,
		dc.contract_signdate,
		dc.contract_yearquantity,
		dc.reg_id,
		rc.rentcontract_id,
		vsr.reg_name,
		vsr.preg_id,
		vsr.preg_name
		FROM
		rent_contract rc
		INNER JOIN dat_contract
		dc on dc.contract_id=rc.contract_id
		INNER JOIN v_sys_region vsr ON
		vsr.reg_id = dc.reg_id
		where 1=1
		<if test="regId !='' and regId != null">
			and dc.reg_id =#{regId}
		</if>
		<if test="contractId !='' and contractId != null">
			and dc.contract_id =#{contractId}
		</if>
	</select>

	<!-- 批量删除房租合同 -->
	<delete id="deleteRentContract" parameterType="Map">
		delete from
		rent_contract
		where
		rentcontract_id in
		<foreach collection="rentcontractIdlst" item="item" index="index"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<select id="queryContAndSupByBillId" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT
		rc.rentcontract_id,
		rc.contract_id,
		rc.supplier_id,
		rc.total_amount,
		rc.year_amount,
		rc.paymentperiod_id,
		dc.contract_id,
		dc.is_downshare,
		dc.contract_code,
		dc.contract_name,
		dc.contract_startdate,
		dc.contract_enddate,
		dc.contract_signdate,
		dc.contract_yearquantity,
		ds.supplier_code,
		ds.supplier_name,
		rbc.billaccount_id,
		rbc.rentcontract_id,
		dc.reg_id,
		dc.reg_name,
		dc.preg_id,
		dc.preg_name
		FROM
		rent_contract rc
		INNER JOIN rent_billaccountcontract rbc ON rbc.rentcontract_id =
		rc.rentcontract_id
		INNER JOIN dat_contract dc ON rc.contract_id =
		dc.contract_id
		INNER JOIN dat_supplier ds ON rc.supplier_id =
		ds.supplier_id
		WHERE rc.rentcontract_id=(SELECT t.rentcontract_id from
		rent_billaccountcontract t where t.billaccount_id=#{billaccountId})
	</select>
	<select id="queryContractAndSupplier" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT
		rc.rentcontract_id,
		rc.contract_id,
		rc.supplier_id,
		rc.total_amount,
		rc.year_amount,
		dc.reg_id,
		dc.reg_name,
		dc.preg_id,
		dc.preg_name,
		dc.contract_id,
		dc.contract_code,
		dc.is_downshare,
		dc.contract_name,
		dc.contract_startdate,
		dc.contract_enddate,
		dc.contract_signdate,
		dc.contract_yearquantity,
		ds.supplier_name,
		ds.supplier_code
		FROM
		rent_contract rc
		INNER JOIN dat_contract dc
		ON rc.contract_id = dc.contract_id
		INNER JOIN dat_supplier ds ON
		rc.supplier_id = ds.supplier_id
		<where>
			<if test="rentcontractId !='' and rentcontractId != null">
				and rc.rentcontract_id=#{rentcontractId}
			</if>
			<if test="regId !='' and regId != null">
				 and dc.reg_id=#{regId}
			</if>
		</where>
	</select>
	<select id="queryContractAgreement" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT
		rc.rentcontract_id,
		dc.contract_id,
		dc.contract_code,
		dc.is_downshare,
		dc.contract_name,
		dc.contract_state,
		dc.reg_name,
		dc.preg_id,
		dc.reg_id,
		dc.preg_name
		FROM
		rent_contract rc
		INNER JOIN
		dat_contract dc ON rc.contract_id = dc.contract_id
		<where>
			dc.contract_state=#{contractState}
			<if test="regId != null and regId != ''">
				and (dc.reg_id = #{regId,jdbcType=VARCHAR}
				<if test="pregIds !=null and pregIds.size()>0">
					or (dc.is_downshare = #{isDownShare} and (dc.reg_id IS NULL or dc.reg_id = '') and
					dc.preg_id in
					<foreach collection="pregIds" item="item" index="index"
						open="(" separator="," close=")">
						#{item}
					</foreach>
					)
				</if>
				<if test="prvId != null and prvId != ''">
					or (dc.prv_id = #{prvId} and dc.is_downshare =
					#{isDownShare} and (dc.preg_id IS NULL or dc.preg_id = ''))
				</if>
				)
			</if>
			<if test="pregId != null and pregId !=''">
				and ((dc.preg_id = #{pregId,jdbcType=VARCHAR}
				or (dc.preg_id = #{pregId,jdbcType=VARCHAR} and dc.is_downshare =
				#{isDownShare}))
				<if test="prvId != null and prvId != ''">
					or (dc.prv_id = #{prvId} and dc.is_downshare =
					#{isDownShare} and (dc.preg_id IS NULL or dc.preg_id = ''))
				</if>
				)
			</if>
			<if test="contractCodeOrName != '' and contractCodeOrName != null">
				and (dc.contract_name like
				CONCAT('%',#{contractCodeOrName,jdbcType=VARCHAR},'%')
				or
				dc.contract_code like
				CONCAT('%',#{contractCodeOrName,jdbcType=VARCHAR},'%'))
			</if>
			<if test="regId == null or regId == ''">
				and ((dc.prv_id = #{prvId} 
				and dc.is_downshare = #{isDownShare}
				and (dc.preg_id IS NULL or dc.preg_id = '')
				)
				<if test="regIds !=null and regIds.size()>0">
					or dc.reg_id in
					<foreach collection="regIds" item="item" index="index" open="("
						separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="pregIds !=null and pregIds.size()>0">
					or (dc.is_downshare = #{isDownShare} and (dc.reg_id IS NULL or dc.reg_id = '') and
					dc.preg_id in
					<foreach collection="pregIds" item="item" index="index"
						open="(" separator="," close=")">
						#{item}
					</foreach>
					)
				</if>
				)
			</if>
			and rc.rentcontract_id not IN (SELECT
			rbc.rentcontract_id
			FROM
			rent_billaccountcontract rbc)
		</where>
	</select>
</mapper>