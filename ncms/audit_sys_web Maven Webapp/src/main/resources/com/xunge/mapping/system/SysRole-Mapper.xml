<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.dao.system.SysRoleVOMapper">
  <resultMap id="BaseResultMap" type="com.xunge.model.system.role.SystemRoleVO" >
    <id column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="prv_id" property="prvId" jdbcType="VARCHAR" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_note" property="roleNote" jdbcType="VARCHAR" />
    <result column="role_state" property="roleState" jdbcType="VARCHAR" />
    <result column="roleuser_num" property="roleuserNum" jdbcType="INTEGER" />
      <collection property="roleUser" ofType="com.xunge.model.system.roleuser.RoleUserVO">
           	<id column="roleuser_id" property="roleUserId" jdbcType="VARCHAR"/>
            <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
            <result column="user_id" property="userId" jdbcType="VARCHAR"/>
             <result column="relation_state" property="relationState" jdbcType="INTEGER"/>
       </collection>
  </resultMap>
  
  	<resultMap id="BaseResultMapRoleAndUser" type="com.xunge.model.system.roleuser.RoleUserVO" >
		<id column="roleuser_id" property="roleUserId" jdbcType="VARCHAR" />
	    <id column="user_id" property="userId" jdbcType="VARCHAR" />
	    <id column="role_id" property="roleId" jdbcType="VARCHAR" />
	    <result column="relation_state" property="relationState" jdbcType="INTEGER" />
	    <result column="relation_startdate" property="relationStartdate" jdbcType="DATE" />
	    <result column="relation_enddate" property="relationEnddate" jdbcType="DATE" />
 	 </resultMap>
 	 
 	 <resultMap id="BaseResultMapProvince" type="com.xunge.model.system.province.SysProvinceVO" >
		<id column="prv_id" property="prvId" jdbcType="VARCHAR" />
	    <result column="prv_name" property="prvName" jdbcType="VARCHAR" />
	    <result column="prv_state" property="prvState" jdbcType="INTEGER" />
 	 </resultMap>
 	 
 	 <!-- 根据菜单id查询角色对象集合 -->
 	 <select id="queryRoleByMenuId" parameterType="Map" resultMap="BaseResultMap">
 	 	select sr.role_id,sr.prv_id from sys_role sr
 	 	where sr.role_id in (
 	 		select srm.role_id from sys_rolemenu srm,sys_menu sm
 	 		where srm.menu_id = sm.menu_id
 	 		and sm.menu_code = #{menuId}
 	 	)and sr.role_state = #{roleState}
 	 	<if test="prvId != null">
 	 		and sr.prv_id = #{prvId}
 	 	</if>
 	 </select>
 	 <!--查询省份信息  -->
 	 <select id="queryAllProvince"  resultMap="BaseResultMapProvince" parameterType="Map">
 	 	select prv_id,prv_name,prv_state from sys_province 
 	 	<where> 
    	<if test="prvId != '' and prvId != null">
     		and prv_id=#{prvId}
     	</if>
     	<if test="prvState != '' and prvState != null">
     		and prv_state= #{prvState}
     	</if>
     </where>
 	 </select>
 	 
    <!-- 查询所有角色 -->
 <select id="queryAllRole" resultMap="BaseResultMap">
	select r.role_id,r.prv_id,r.role_code,r.role_name,r.role_note,r.role_state,u.user_id ,count(u.user_id ) as roleuser_num 
	from sys_role r LEFT JOIN sys_roleuser u ON (r.role_id=u.role_id  and u.relation_state !=#{roleState})
	where r.role_state!=#{roleState}
	GROUP BY r.role_id,r.prv_id,r.role_code,r.role_name,r.role_note,r.role_state
  </select>
  <!-- 查询所有角色 -->
   <select id="queryAllSysRole" resultMap="BaseResultMap" parameterType="Integer">
   select r.role_id,r.prv_id,r.role_code,r.role_name,r.role_note,r.role_state from sys_role r 
   where r.role_state = #{state}
  </select>
  
	<!-- 根据id查询角色 修改-->
	 <select id="queryRoleById" resultMap="BaseResultMap" parameterType="String">
	 select r.role_id,r.prv_id,r.role_code,r.role_name,r.role_note,r.role_state,u.user_id,u.relation_state from sys_role r
	 LEFT JOIN sys_roleuser u ON (r.role_id=u.role_id  and u.relation_state =0) 
	  where r.role_id=#{roleId}  
  </select>
 <!-- 修改用户角色关系状态 -->
	  <!--<update id="updateUserRoleState" parameterType="Map">
       update sys_roleuser ru set ru.relation_state=#{state},ru.relation_enddate = now() 
	   where ru.relation_state=0 
	   		<if test="idsList != null and idsList.size()>0">
	   			and ru.role_id in  
	        	<foreach collection="idsList" item="item" index="index" open="("
				separator="," close=")">
					#{item}
				</foreach>
			</if>
    </update> -->
    <!-- 根据id查询所有角色 -->
  <select id="queryAllRoleById" resultMap="BaseResultMap" parameterType="String">
   select r.user_id,r.user_code,r.user_name,r.user_loginname from sys_user r, sys_roleuser u
   where r.user_id=u.user_id and u.role_id=#{roleId}
  </select>
  
   <select id="queryRoleNameById" resultType="String" parameterType="Map">
   select r.role_code from sys_role r
   <where>
		<if test="roleLists != null and roleLists.size()>0">
   			r.role_id in
		   <foreach collection="roleLists" item="item" index="index" open="(" separator="," close=")">  
                #{item}  
           </foreach>  
		</if>
	</where>
  </select>
  
  <select id="queryAllRoleName" resultMap="BaseResultMap" >
   select role_id, role_name, role_state from sys_role where role_state = #{state}
   <if test="prvId != '' and prvId != null">
     	and prv_id=#{prvId}
   </if>
   
  </select>
    <!-- 根据id查询所有roleuser -->
  <select id="queryAllRoleUserById"  parameterType="String" resultType="java.lang.String">
   select u.user_id from sys_roleuser u
   where u.role_id=#{roleId} and u.relation_state=0;
  </select>
  
  <!--根据角色名查找角色id  -->
    <select id="queryRoleByRoleName" resultMap="BaseResultMap" parameterType="Map">
   select role_id from sys_role
   <where> 
   	<if test="roleLists != null and roleLists.size()>0">
   		 role_code in
   	 	  <foreach collection="roleLists" item="item" index="index" open="(" separator="," close=")">  
                #{item,jdbcType=VARCHAR}  
           </foreach>  
    </if>
    </where>
  </select>
  
  <!-- 模糊查询 -->
  <select id="querySysRole" resultMap="BaseResultMap" parameterType="Map" >
	select
	r.role_id,r.prv_id,r.role_code,r.role_name,r.role_note,
	case r.role_state when 0 then '启用' when 9 then '停用' end as role_state,
	u.user_id ,count(u.user_id) as roleuser_num,u.relation_state
	from sys_role r LEFT JOIN sys_roleuser u
	ON r.role_id=u.role_id and u.relation_state =0
     <where> 
    	<if test="role.roleCode != '' and role.roleCode != null">
     		and role_code like CONCAT('%',#{role.roleCode,jdbcType=VARCHAR},'%')
     	</if>
     	<if test="role.roleName != '' and role.roleName != null">
     		and role_name like CONCAT('%',#{role.roleName,jdbcType=VARCHAR},'%') 
     	</if>
     	<if test="role.prvId != '' and role.prvId != null">
     		and prv_id=#{role.prvId}
     	</if>
     	<if test="role.roleState != '' and role.roleState != null">
     		and role_state!=-1
     	</if>
     	
     </where>
     GROUP BY r.role_id,r.prv_id,r.role_code,r.role_name,r.role_note,r.role_state
   </select> 
  
   <!-- 增加角色 -->
  <insert id="insertRole" parameterType="com.xunge.model.system.role.SystemRoleVO">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="prvId != null">
				prv_id,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleNote != null">
				role_note,
			</if>
			<if test="roleState != null">
				role_state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="roleId != null">
				#{roleId,jdbcType=VARCHAR},
			</if>
			<if test="prvId != null">
				 #{prvId,jdbcType=VARCHAR},
			</if>
   
			<if test="roleCode != null">
					#{roleCode,jdbcType=VARCHAR}, 
			</if>
			<if test="roleName != null">
				 #{roleName,jdbcType=VARCHAR}, 
			</if>
			<if test="roleNote != null">
			 #{roleNote,jdbcType=VARCHAR}, 
			</if>
			<if test="roleState != null">
			 #{roleState,jdbcType=INTEGER}
			 </if>
		</trim>
	</insert>
  
  <!-- 删除角色 -->
 
  	<update id="deleteByPrimaryKey" parameterType="Map">
		update sys_role s set s.role_state=#{state} 
	    where 1=1
		<if test="idsList != null and idsList.size()>0">  
	        and s.role_id in  
	        <foreach collection="idsList" item="item" index="index" open="(" separator="," close=")">  
                #{item}  
            </foreach>  
    	</if>
	</update>
	
	<!-- 根据角色ID  查询功能菜单ID -->
	  <!-- 根据角色id查询功能菜单ID -->
  <select id="queryAllRoleByIdMap" resultType="java.lang.String" parameterType="map">
  	select menu_id from sys_rolemenu where 1 = 1 
   	<if test="idsList != null and idsList.size()>0">  
        and role_id in  
        <foreach collection="idsList" item="item" index="index" open="(" separator="," close=")">  
        	#{item}
        </foreach>
   	</if>
  </select>
	
	
   <!--开启/关闭角色状态 -->
  	<update id="updateState" parameterType="Map">
  	update sys_role s set s.role_state=#{state} 
  	where 1=1
		<if test="idsList != null and idsList.size()>0">  
	        and s.role_id in  
	        <foreach collection="idsList" item="item" index="index" open="(" separator="," close=")">  
                #{item}  
            </foreach>  
    	</if>
	</update>
  
  
  <!-- 修改角色状态 -->
  <update id="updateRole" parameterType="com.xunge.model.system.role.SystemRoleVO">
    update sys_role
    <set>
      <if test="prvId != null">
        prv_id = #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleNote != null">
        role_note = #{roleNote,jdbcType=VARCHAR},
      </if>
      <if test="roleState != null">
        role_state = #{roleState,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  
  <!-- 角色模块模糊查询 -->
  <select id="RoleLikeAll" resultType="java.lang.Integer">
    select role_id,prv_id,role_code,role_name,role_note,role_state
    from sys_role where like '%"+role_name+"%'"
  </select>
  
<sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
 <sql id="Base_Column_List">
    role_id, prv_id, role_code, role_name, role_note, role_state
  </sql>
  
<!-- 用户菜单关系表 -->
  <resultMap id="RoleMenuMap" type="com.xunge.model.system.rolemenu.RoleMenuVO" >
  	<id column="rolemenu_id" property="roleMenuId" jdbcType="VARCHAR"/>
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="menu_id" property="menuId" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 删除角色菜单关系 -->
  <delete id="delRoleMenu" parameterType="java.lang.String">
  	delete from sys_rolemenu where role_id = #{roleId}
  </delete>
  <!-- 新增角色菜单关系  -->
  <insert id="insert" parameterType="Map">
    insert into sys_rolemenu (rolemenu_id ,role_id, menu_id)
    values 
    <foreach collection="lstRoleMenuVO" item="rolemenu" index="index" separator=",">
    	(
    	#{rolemenu.roleMenuId,jdbcType=VARCHAR},
    	#{rolemenu.roleId,jdbcType=VARCHAR},
    	#{rolemenu.menuId,jdbcType=VARCHAR}
    	)
    </foreach>
  </insert>
  <!-- 查询对应角色的所有菜单 -->
  <select id="queryMenuId" parameterType="java.lang.String" resultType="java.lang.String">
  select menu_id from sys_rolemenu where role_id = #{roleId}
  </select>
  
  

  <resultMap id="SysRoleMap" type="com.xunge.model.system.user.SysRoleVO" >
    <id column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="prv_id" property="prvId" jdbcType="VARCHAR" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_note" property="roleNote" jdbcType="VARCHAR" />
    <result column="role_state" property="roleState" jdbcType="INTEGER" />
     <collection property="lsru" ofType="com.xunge.model.system.roleuser.RoleUserVO">
            <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
            <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        </collection>
  </resultMap>
  <!-- 查询所有用户id -->
  <select id="queryAllUserId" parameterType="java.lang.String" resultType="java.lang.String">
 	 select u.user_id from sys_roleuser u,sys_role o where u.role_id =#{roleId} and u.role_id = o.role_id
  </select>
  

</mapper>