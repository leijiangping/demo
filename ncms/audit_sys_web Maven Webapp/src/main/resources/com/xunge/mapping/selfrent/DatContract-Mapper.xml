<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.mapping.DatContractVOMapper" >
  <resultMap id="BaseResultMap" type="com.xunge.model.selfrent.contract.DatContractVO" >
    <id column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="contract_flow" property="contractFlow" jdbcType="VARCHAR" />
    <result column="reg_id" property="regId" jdbcType="VARCHAR" />
    <result column="manager_department" property="managerDepartment" jdbcType="VARCHAR" />
    <result column="manager_user" property="managerUser" jdbcType="VARCHAR" />
    <result column="contract_code" property="contractCode" jdbcType="VARCHAR" />
    <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
    <result column="contract_type" property="contractType" jdbcType="INTEGER" />
    <result column="contract_startdate" property="contractStartdate" jdbcType="VARCHAR" />
    <result column="contract_enddate" property="contractEnddate" jdbcType="VARCHAR" />
    <result column="contract_signdate" property="contractSigndate" jdbcType="VARCHAR" />
    <result column="contract_yearquantity" property="contractYearquantity" jdbcType="DECIMAL" />
    <result column="contract_checkname1" property="contractCheckname1" jdbcType="VARCHAR" />
    <result column="contract_checkname2" property="contractCheckname2" jdbcType="VARCHAR" />
    <result column="contract_state" property="contractState" jdbcType="INTEGER" />
    <result column="contract_note" property="contractNote" jdbcType="VARCHAR" />
    <result column="is_downshare" property="isDownShare" jdbcType="INTEGER" />
    <result column="data_from" property="dataFrom" jdbcType="INTEGER" />
    <result column="prv_id" property="prvId" jdbcType="VARCHAR" />
    <result column="reg_name" property="regName" jdbcType="VARCHAR" />
    <result column="preg_name" property="pregName" jdbcType="VARCHAR" />
    <result column="preg_id" property="pregId" jdbcType="VARCHAR" />
    <result column="prv_sname" property="prvSName" jdbcType="INTEGER" />
    <result column="auditing_state" property="auditingState" jdbcType="INTEGER"/>
  </resultMap>
  
  <!-- 查询所有主合同信息 -->
	<select id="queryDatContractById" resultMap="BaseResultMap" parameterType="Map">
		SELECT
		dat_contract.contract_id,
		dat_contract.is_downshare,
		dat_contract.contract_flow,
		dat_contract.manager_department,
		dat_contract.manager_user,
		dat_contract.contract_code,
		dat_contract.contract_name,
		dat_contract.contract_type,
		dat_contract.contract_startdate,
		dat_contract.contract_enddate,
		dat_contract.contract_signdate,
		dat_contract.contract_yearquantity,
		dat_contract.contract_checkname1,
		dat_contract.contract_checkname2,
		dat_contract.contract_state,
		dat_contract.contract_note,
		dat_contract.data_from,
		dat_contract.preg_id,
		dat_contract.reg_id,
		dat_contract.reg_name,
		dat_contract.prv_id,
		dat_contract.preg_name,
		dat_contract.auditing_state,
		dat_contract.prv_sname
		FROM
		dat_contract
		where dat_contract.contract_id = #{datContractId,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据合同代码查询合同信息 -->
	<select id="checkContractCode" resultMap="BaseResultMap" parameterType="Map">
		SELECT
		dat_contract.contract_id,
		dat_contract.is_downshare,
		dat_contract.contract_flow,
		dat_contract.manager_department,
		dat_contract.manager_user,
		dat_contract.contract_code,
		dat_contract.contract_name,
		dat_contract.contract_type,
		dat_contract.contract_startdate,
		dat_contract.contract_enddate,
		dat_contract.contract_signdate,
		dat_contract.contract_yearquantity,
		dat_contract.contract_checkname1,
		dat_contract.contract_checkname2,
		dat_contract.contract_state,
		dat_contract.contract_note,
		dat_contract.preg_id,
		dat_contract.reg_id,
		dat_contract.reg_name,
		dat_contract.prv_id,
		dat_contract.preg_name,
		dat_contract.auditing_state,
		dat_contract.data_from,
		dat_contract.prv_sname
		FROM
		dat_contract 
		where
		contract_state = #{state,jdbcType=INTEGER}
		<if test="contractCode !='' and contractCode != null">
			and dat_contract.contract_code = #{contractCode,jdbcType=VARCHAR}
		</if>
		<if test="contractId !='' and contractId != null">
			and dat_contract.contract_id = #{contractId,jdbcType=VARCHAR}
		</if>
	</select>
	
	<!-- 新增DatContract对象 -->
  	<insert id="insertDatContractVO" parameterType="com.xunge.model.selfrent.contract.DatContractVO">
  		insert into dat_contract (
  		auditing_state,
  		<if test="regId !='' and regId != null">
				reg_id,
		</if> 
		<if test="regId =='' or regId == null">
			preg_id,prv_id,
		</if>
  		is_downshare,data_from,contract_id,manager_department,manager_user,
  		contract_code,contract_name,contract_type,contract_startdate,contract_enddate,contract_signdate,
  		contract_yearquantity,contract_checkname1,contract_checkname2,contract_state,contract_note)
  		values (
  		#{auditingState},
  		<if test="regId !='' and regId != null">
				#{regId},
		</if>
		<if test="regId =='' or regId == null">
			#{pregId},
	  		#{prvId},
		</if>
  		#{isDownShare},
  		#{dataFrom},
  		#{contractId},
  		#{managerDepartment},
  		#{managerUser},
  		#{contractCode},
  		#{contractName},
  		#{contractType},
  		#{contractStartdate},
  		#{contractEnddate},
  		#{contractSigndate},
  		#{contractYearquantity},
  		#{contractCheckname1},
  		#{contractCheckname2},
  		#{contractState},
  		#{contractNote}
  		) 
  	</insert>
  	<!-- 补录datcontratct对象 -->
  	<update id="updateDatContractVO" parameterType="com.xunge.model.selfrent.contract.DatContractVO">
  		update dat_contract
  		set 
  			auditing_state = #{auditingState},
  			is_downshare=#{isDownShare},
  			<if test="regId !='' and regId != null">
				reg_id = #{regId},
			</if> 
			<if test="regId =='' or regId == null">
				reg_id='',
				preg_id = #{pregId},
	  			prv_id = #{prvId},
			</if>
	  		manager_department = #{managerDepartment},
	  		manager_user = #{managerUser},
	  		contract_code = #{contractCode},
	  		contract_name = #{contractName},
	  		contract_startdate = #{contractStartdate},
	  		contract_enddate =#{contractEnddate},
	  		contract_signdate = #{contractSigndate},
	  		contract_yearquantity = #{contractYearquantity},
	  		contract_checkname1 = #{contractCheckname1},
	  		contract_checkname2 = #{contractCheckname2}
  		where 
  			contract_id = #{contractId}
  	</update>
  	
  	<!-- 批量删除合同 -->
 	<delete id="deleteContract" parameterType="Map">
 		delete from
			dat_contract
 		where 
 			contract_id in
 		<foreach collection="contractIdsList" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
  	</delete>
  	
  	<!-- 批量终止合同 -->
 	<update id="stopContract" parameterType="Map">
 		update dat_contract
 		set 
  		contract_state = #{state}
 		where 
 		contract_id in
 		<foreach collection="contractIdsList" item="item" index="index" open="("
		separator="," close=")">
		#{item}
		</foreach>
  	</update>
  	<select id="queryContractByCond" resultMap="BaseResultMap" parameterType="Map">
  		SELECT                                
		dc.contract_id,
		dc.contract_code,
		dc.contract_name,
		dc.contract_state,
		dc.reg_id,
		dc.reg_name,
		dc.preg_id,
		dc.preg_name
		FROM
		dat_contract dc 
		where 1=1 
			<if test="regId !='' and regId != null">
				and dc.reg_id =#{regId} 
			</if> 
			<if test="contractId !='' and contractId != null">
				and dc.contract_id =#{contractId} 
			</if> 
			 and rc.rentcontract_id not IN (SELECT
			rbc.rentcontract_id
			FROM
			rent_billaccountcontract rbc)
  	</select>
</mapper>