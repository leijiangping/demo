<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunge.dao.selfelec.VDatElectricmeterMapper">
  <resultMap id="BaseResultMap" type="com.xunge.model.selfelec.VDatElectricmeter">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    <result column="meter_id" jdbcType="VARCHAR" property="meterId" />
    <result column="prv_id" jdbcType="VARCHAR" property="prvId" />
    <result column="prv_sname" jdbcType="VARCHAR" property="prvSname" />
    <result column="preg_id" jdbcType="VARCHAR" property="pregId" />
    <result column="preg_name" jdbcType="VARCHAR" property="pregName" />
    <result column="reg_id" jdbcType="VARCHAR" property="regId" />
    <result column="reg_name" jdbcType="VARCHAR" property="regName" />
    <result column="billaccount_id" jdbcType="VARCHAR" property="billaccountId" />
    <result column="meter_code" jdbcType="VARCHAR" property="meterCode" />
    <result column="initial_value" jdbcType="DECIMAL" property="initialValue" />
    <result column="upper_value" jdbcType="DECIMAL" property="upperValue" />
    <result column="flat_value" jdbcType="DECIMAL" property="flatValue" />
    <result column="peak_value" jdbcType="DECIMAL" property="peakValue" />
    <result column="top_value" jdbcType="DECIMAL" property="topValue" />
    <result column="valley_value" jdbcType="DECIMAL" property="valleyValue" />
    <result column="flat_upper_value" jdbcType="DECIMAL" property="flatUpperValue" />
    <result column="peak_upper_value" jdbcType="DECIMAL" property="peakUpperValue" />
    <result column="valley_upper_value" jdbcType="DECIMAL" property="valleyUpperValue" />
    <result column="top_upper_value" jdbcType="DECIMAL" property="topUpperValue" />
    <result column="meter_type" jdbcType="INTEGER" property="meterType" />
    <result column="electricmeter_multiply" jdbcType="DECIMAL" property="electricmeterMultiply" />
    <result column="account_number" jdbcType="VARCHAR" property="accountNumber" />
    <result column="install_date" jdbcType="TIMESTAMP" property="installDate" />
    <result column="meter_state" jdbcType="INTEGER" property="meterState" />
    <result column="is_share" jdbcType="INTEGER" property="isShare" />
    <result column="meter_note" jdbcType="VARCHAR" property="meterNote" />
    <result column="data_from" jdbcType="INTEGER" property="dataFrom" />
    <result column="last_readnum" jdbcType="INTEGER" property="lastReadnum" />
    <result column="flat_lastreadnum" jdbcType="INTEGER" property="flatLastreadnum" />
    <result column="peak_lastreadnum" jdbcType="INTEGER" property="peakLastreadnum" />
    <result column="top_lastreadnum" jdbcType="INTEGER" property="topLastreadnum" />
    <result column="valley_lastreadnum" jdbcType="INTEGER" property="valleyLastreadnum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xunge.model.selfelec.VDatElectricmeterWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    <result column="baseresource_id" jdbcType="LONGVARCHAR" property="baseresourceId" />
    <result column="baseresource_code" jdbcType="LONGVARCHAR" property="baseresourceCode" />
    <result column="baseresource_name" jdbcType="LONGVARCHAR" property="baseresourceName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    meter_id, prv_id, prv_sname, preg_id, preg_name, reg_id, reg_name, billaccount_id, 
    meter_code, initial_value, upper_value, flat_value, peak_value, top_value, valley_value, 
    flat_upper_value, peak_upper_value, valley_upper_value, top_upper_value, meter_type, 
    electricmeter_multiply, account_number, install_date, meter_state, is_share, meter_note, 
    data_from, last_readnum, flat_lastreadnum, peak_lastreadnum, top_lastreadnum, valley_lastreadnum
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    baseresource_id, baseresource_code, baseresource_name
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xunge.model.selfelec.VDatElectricmeterExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from v_dat_electricmeter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by $orderByClause$
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xunge.model.selfelec.VDatElectricmeterExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_dat_electricmeter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xunge.model.selfelec.VDatElectricmeterExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    delete from v_dat_electricmeter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunge.model.selfelec.VDatElectricmeterWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    insert into v_dat_electricmeter (meter_id, prv_id, prv_sname, 
      preg_id, preg_name, reg_id, 
      reg_name, billaccount_id, meter_code, 
      initial_value, upper_value, flat_value, 
      peak_value, top_value, valley_value, 
      flat_upper_value, peak_upper_value, valley_upper_value, 
      top_upper_value, meter_type, electricmeter_multiply, 
      account_number, install_date, meter_state, 
      is_share, meter_note, data_from, 
      last_readnum, flat_lastreadnum, peak_lastreadnum, 
      top_lastreadnum, valley_lastreadnum, baseresource_id, 
      baseresource_code, baseresource_name
      )
    values (#{meterId,jdbcType=VARCHAR}, #{prvId,jdbcType=VARCHAR}, #{prvSname,jdbcType=VARCHAR}, 
      #{pregId,jdbcType=VARCHAR}, #{pregName,jdbcType=VARCHAR}, #{regId,jdbcType=VARCHAR}, 
      #{regName,jdbcType=VARCHAR}, #{billaccountId,jdbcType=VARCHAR}, #{meterCode,jdbcType=VARCHAR}, 
      #{initialValue,jdbcType=DECIMAL}, #{upperValue,jdbcType=DECIMAL}, #{flatValue,jdbcType=DECIMAL}, 
      #{peakValue,jdbcType=DECIMAL}, #{topValue,jdbcType=DECIMAL}, #{valleyValue,jdbcType=DECIMAL}, 
      #{flatUpperValue,jdbcType=DECIMAL}, #{peakUpperValue,jdbcType=DECIMAL}, #{valleyUpperValue,jdbcType=DECIMAL}, 
      #{topUpperValue,jdbcType=DECIMAL}, #{meterType,jdbcType=INTEGER}, #{electricmeterMultiply,jdbcType=DECIMAL}, 
      #{accountNumber,jdbcType=VARCHAR}, #{installDate,jdbcType=TIMESTAMP}, #{meterState,jdbcType=INTEGER}, 
      #{isShare,jdbcType=INTEGER}, #{meterNote,jdbcType=VARCHAR}, #{dataFrom,jdbcType=INTEGER}, 
      #{lastReadnum,jdbcType=INTEGER}, #{flatLastreadnum,jdbcType=INTEGER}, #{peakLastreadnum,jdbcType=INTEGER}, 
      #{topLastreadnum,jdbcType=INTEGER}, #{valleyLastreadnum,jdbcType=INTEGER}, #{baseresourceId,jdbcType=LONGVARCHAR}, 
      #{baseresourceCode,jdbcType=LONGVARCHAR}, #{baseresourceName,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunge.model.selfelec.VDatElectricmeterWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    insert into v_dat_electricmeter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="meterId != null">
        meter_id,
      </if>
      <if test="prvId != null">
        prv_id,
      </if>
      <if test="prvSname != null">
        prv_sname,
      </if>
      <if test="pregId != null">
        preg_id,
      </if>
      <if test="pregName != null">
        preg_name,
      </if>
      <if test="regId != null">
        reg_id,
      </if>
      <if test="regName != null">
        reg_name,
      </if>
      <if test="billaccountId != null">
        billaccount_id,
      </if>
      <if test="meterCode != null">
        meter_code,
      </if>
      <if test="initialValue != null">
        initial_value,
      </if>
      <if test="upperValue != null">
        upper_value,
      </if>
      <if test="flatValue != null">
        flat_value,
      </if>
      <if test="peakValue != null">
        peak_value,
      </if>
      <if test="topValue != null">
        top_value,
      </if>
      <if test="valleyValue != null">
        valley_value,
      </if>
      <if test="flatUpperValue != null">
        flat_upper_value,
      </if>
      <if test="peakUpperValue != null">
        peak_upper_value,
      </if>
      <if test="valleyUpperValue != null">
        valley_upper_value,
      </if>
      <if test="topUpperValue != null">
        top_upper_value,
      </if>
      <if test="meterType != null">
        meter_type,
      </if>
      <if test="electricmeterMultiply != null">
        electricmeter_multiply,
      </if>
      <if test="accountNumber != null">
        account_number,
      </if>
      <if test="installDate != null">
        install_date,
      </if>
      <if test="meterState != null">
        meter_state,
      </if>
      <if test="isShare != null">
        is_share,
      </if>
      <if test="meterNote != null">
        meter_note,
      </if>
      <if test="dataFrom != null">
        data_from,
      </if>
      <if test="lastReadnum != null">
        last_readnum,
      </if>
      <if test="flatLastreadnum != null">
        flat_lastreadnum,
      </if>
      <if test="peakLastreadnum != null">
        peak_lastreadnum,
      </if>
      <if test="topLastreadnum != null">
        top_lastreadnum,
      </if>
      <if test="valleyLastreadnum != null">
        valley_lastreadnum,
      </if>
      <if test="baseresourceId != null">
        baseresource_id,
      </if>
      <if test="baseresourceCode != null">
        baseresource_code,
      </if>
      <if test="baseresourceName != null">
        baseresource_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="meterId != null">
        #{meterId,jdbcType=VARCHAR},
      </if>
      <if test="prvId != null">
        #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="prvSname != null">
        #{prvSname,jdbcType=VARCHAR},
      </if>
      <if test="pregId != null">
        #{pregId,jdbcType=VARCHAR},
      </if>
      <if test="pregName != null">
        #{pregName,jdbcType=VARCHAR},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regName != null">
        #{regName,jdbcType=VARCHAR},
      </if>
      <if test="billaccountId != null">
        #{billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="meterCode != null">
        #{meterCode,jdbcType=VARCHAR},
      </if>
      <if test="initialValue != null">
        #{initialValue,jdbcType=DECIMAL},
      </if>
      <if test="upperValue != null">
        #{upperValue,jdbcType=DECIMAL},
      </if>
      <if test="flatValue != null">
        #{flatValue,jdbcType=DECIMAL},
      </if>
      <if test="peakValue != null">
        #{peakValue,jdbcType=DECIMAL},
      </if>
      <if test="topValue != null">
        #{topValue,jdbcType=DECIMAL},
      </if>
      <if test="valleyValue != null">
        #{valleyValue,jdbcType=DECIMAL},
      </if>
      <if test="flatUpperValue != null">
        #{flatUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="peakUpperValue != null">
        #{peakUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="valleyUpperValue != null">
        #{valleyUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="topUpperValue != null">
        #{topUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="meterType != null">
        #{meterType,jdbcType=INTEGER},
      </if>
      <if test="electricmeterMultiply != null">
        #{electricmeterMultiply,jdbcType=DECIMAL},
      </if>
      <if test="accountNumber != null">
        #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="installDate != null">
        #{installDate,jdbcType=TIMESTAMP},
      </if>
      <if test="meterState != null">
        #{meterState,jdbcType=INTEGER},
      </if>
      <if test="isShare != null">
        #{isShare,jdbcType=INTEGER},
      </if>
      <if test="meterNote != null">
        #{meterNote,jdbcType=VARCHAR},
      </if>
      <if test="dataFrom != null">
        #{dataFrom,jdbcType=INTEGER},
      </if>
      <if test="lastReadnum != null">
        #{lastReadnum,jdbcType=INTEGER},
      </if>
      <if test="flatLastreadnum != null">
        #{flatLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="peakLastreadnum != null">
        #{peakLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="topLastreadnum != null">
        #{topLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="valleyLastreadnum != null">
        #{valleyLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="baseresourceId != null">
        #{baseresourceId,jdbcType=LONGVARCHAR},
      </if>
      <if test="baseresourceCode != null">
        #{baseresourceCode,jdbcType=LONGVARCHAR},
      </if>
      <if test="baseresourceName != null">
        #{baseresourceName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunge.model.selfelec.VDatElectricmeterExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    select count(*) from v_dat_electricmeter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    update v_dat_electricmeter
    <set>
      <if test="record.meterId != null">
        meter_id = #{record.meterId,jdbcType=VARCHAR},
      </if>
      <if test="record.prvId != null">
        prv_id = #{record.prvId,jdbcType=VARCHAR},
      </if>
      <if test="record.prvSname != null">
        prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      </if>
      <if test="record.pregId != null">
        preg_id = #{record.pregId,jdbcType=VARCHAR},
      </if>
      <if test="record.pregName != null">
        preg_name = #{record.pregName,jdbcType=VARCHAR},
      </if>
      <if test="record.regId != null">
        reg_id = #{record.regId,jdbcType=VARCHAR},
      </if>
      <if test="record.regName != null">
        reg_name = #{record.regName,jdbcType=VARCHAR},
      </if>
      <if test="record.billaccountId != null">
        billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.meterCode != null">
        meter_code = #{record.meterCode,jdbcType=VARCHAR},
      </if>
      <if test="record.initialValue != null">
        initial_value = #{record.initialValue,jdbcType=DECIMAL},
      </if>
      <if test="record.upperValue != null">
        upper_value = #{record.upperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.flatValue != null">
        flat_value = #{record.flatValue,jdbcType=DECIMAL},
      </if>
      <if test="record.peakValue != null">
        peak_value = #{record.peakValue,jdbcType=DECIMAL},
      </if>
      <if test="record.topValue != null">
        top_value = #{record.topValue,jdbcType=DECIMAL},
      </if>
      <if test="record.valleyValue != null">
        valley_value = #{record.valleyValue,jdbcType=DECIMAL},
      </if>
      <if test="record.flatUpperValue != null">
        flat_upper_value = #{record.flatUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.peakUpperValue != null">
        peak_upper_value = #{record.peakUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.valleyUpperValue != null">
        valley_upper_value = #{record.valleyUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.topUpperValue != null">
        top_upper_value = #{record.topUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.meterType != null">
        meter_type = #{record.meterType,jdbcType=INTEGER},
      </if>
      <if test="record.electricmeterMultiply != null">
        electricmeter_multiply = #{record.electricmeterMultiply,jdbcType=DECIMAL},
      </if>
      <if test="record.accountNumber != null">
        account_number = #{record.accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.installDate != null">
        install_date = #{record.installDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.meterState != null">
        meter_state = #{record.meterState,jdbcType=INTEGER},
      </if>
      <if test="record.isShare != null">
        is_share = #{record.isShare,jdbcType=INTEGER},
      </if>
      <if test="record.meterNote != null">
        meter_note = #{record.meterNote,jdbcType=VARCHAR},
      </if>
      <if test="record.dataFrom != null">
        data_from = #{record.dataFrom,jdbcType=INTEGER},
      </if>
      <if test="record.lastReadnum != null">
        last_readnum = #{record.lastReadnum,jdbcType=INTEGER},
      </if>
      <if test="record.flatLastreadnum != null">
        flat_lastreadnum = #{record.flatLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="record.peakLastreadnum != null">
        peak_lastreadnum = #{record.peakLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="record.topLastreadnum != null">
        top_lastreadnum = #{record.topLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="record.valleyLastreadnum != null">
        valley_lastreadnum = #{record.valleyLastreadnum,jdbcType=INTEGER},
      </if>
      <if test="record.baseresourceId != null">
        baseresource_id = #{record.baseresourceId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.baseresourceCode != null">
        baseresource_code = #{record.baseresourceCode,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.baseresourceName != null">
        baseresource_name = #{record.baseresourceName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    update v_dat_electricmeter
    set meter_id = #{record.meterId,jdbcType=VARCHAR},
      prv_id = #{record.prvId,jdbcType=VARCHAR},
      prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      preg_id = #{record.pregId,jdbcType=VARCHAR},
      preg_name = #{record.pregName,jdbcType=VARCHAR},
      reg_id = #{record.regId,jdbcType=VARCHAR},
      reg_name = #{record.regName,jdbcType=VARCHAR},
      billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      meter_code = #{record.meterCode,jdbcType=VARCHAR},
      initial_value = #{record.initialValue,jdbcType=DECIMAL},
      upper_value = #{record.upperValue,jdbcType=DECIMAL},
      flat_value = #{record.flatValue,jdbcType=DECIMAL},
      peak_value = #{record.peakValue,jdbcType=DECIMAL},
      top_value = #{record.topValue,jdbcType=DECIMAL},
      valley_value = #{record.valleyValue,jdbcType=DECIMAL},
      flat_upper_value = #{record.flatUpperValue,jdbcType=DECIMAL},
      peak_upper_value = #{record.peakUpperValue,jdbcType=DECIMAL},
      valley_upper_value = #{record.valleyUpperValue,jdbcType=DECIMAL},
      top_upper_value = #{record.topUpperValue,jdbcType=DECIMAL},
      meter_type = #{record.meterType,jdbcType=INTEGER},
      electricmeter_multiply = #{record.electricmeterMultiply,jdbcType=DECIMAL},
      account_number = #{record.accountNumber,jdbcType=VARCHAR},
      install_date = #{record.installDate,jdbcType=TIMESTAMP},
      meter_state = #{record.meterState,jdbcType=INTEGER},
      is_share = #{record.isShare,jdbcType=INTEGER},
      meter_note = #{record.meterNote,jdbcType=VARCHAR},
      data_from = #{record.dataFrom,jdbcType=INTEGER},
      last_readnum = #{record.lastReadnum,jdbcType=INTEGER},
      flat_lastreadnum = #{record.flatLastreadnum,jdbcType=INTEGER},
      peak_lastreadnum = #{record.peakLastreadnum,jdbcType=INTEGER},
      top_lastreadnum = #{record.topLastreadnum,jdbcType=INTEGER},
      valley_lastreadnum = #{record.valleyLastreadnum,jdbcType=INTEGER},
      baseresource_id = #{record.baseresourceId,jdbcType=LONGVARCHAR},
      baseresource_code = #{record.baseresourceCode,jdbcType=LONGVARCHAR},
      baseresource_name = #{record.baseresourceName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 09 23:39:01 CST 2017.
    -->
    update v_dat_electricmeter
    set meter_id = #{record.meterId,jdbcType=VARCHAR},
      prv_id = #{record.prvId,jdbcType=VARCHAR},
      prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      preg_id = #{record.pregId,jdbcType=VARCHAR},
      preg_name = #{record.pregName,jdbcType=VARCHAR},
      reg_id = #{record.regId,jdbcType=VARCHAR},
      reg_name = #{record.regName,jdbcType=VARCHAR},
      billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      meter_code = #{record.meterCode,jdbcType=VARCHAR},
      initial_value = #{record.initialValue,jdbcType=DECIMAL},
      upper_value = #{record.upperValue,jdbcType=DECIMAL},
      flat_value = #{record.flatValue,jdbcType=DECIMAL},
      peak_value = #{record.peakValue,jdbcType=DECIMAL},
      top_value = #{record.topValue,jdbcType=DECIMAL},
      valley_value = #{record.valleyValue,jdbcType=DECIMAL},
      flat_upper_value = #{record.flatUpperValue,jdbcType=DECIMAL},
      peak_upper_value = #{record.peakUpperValue,jdbcType=DECIMAL},
      valley_upper_value = #{record.valleyUpperValue,jdbcType=DECIMAL},
      top_upper_value = #{record.topUpperValue,jdbcType=DECIMAL},
      meter_type = #{record.meterType,jdbcType=INTEGER},
      electricmeter_multiply = #{record.electricmeterMultiply,jdbcType=DECIMAL},
      account_number = #{record.accountNumber,jdbcType=VARCHAR},
      install_date = #{record.installDate,jdbcType=TIMESTAMP},
      meter_state = #{record.meterState,jdbcType=INTEGER},
      is_share = #{record.isShare,jdbcType=INTEGER},
      meter_note = #{record.meterNote,jdbcType=VARCHAR},
      data_from = #{record.dataFrom,jdbcType=INTEGER},
      last_readnum = #{record.lastReadnum,jdbcType=INTEGER},
      flat_lastreadnum = #{record.flatLastreadnum,jdbcType=INTEGER},
      peak_lastreadnum = #{record.peakLastreadnum,jdbcType=INTEGER},
      top_lastreadnum = #{record.topLastreadnum,jdbcType=INTEGER},
      valley_lastreadnum = #{record.valleyLastreadnum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>