<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunge.dao.basedata.DatBasestationVOMapper">
	<resultMap id="BaseResultMap" type="com.xunge.model.basedata.DatBasestationVO">
		<id column="basestation_id" jdbcType="VARCHAR" property="basestationId" />
		<result column="prv_id" jdbcType="VARCHAR" property="prvId" />
		<result column="prv_sname" jdbcType="VARCHAR" property="prvSname" />
		<result column="reg_id" jdbcType="VARCHAR" property="regId" />
		<result column="preg_id" jdbcType="VARCHAR" property="pregId" />
		<result column="baseresource_id" jdbcType="VARCHAR" property="baseresourceId" />
		<result column="baseresource_name" jdbcType="VARCHAR" property="baseresourceName" />
		<result column="baseresource_code" jdbcType="VARCHAR" property="baseresourceCode" />
		<result column="baseresource_cuid" jdbcType="VARCHAR" property="baseresourceCuid" />
		<result column="basestation_cuid" jdbcType="VARCHAR" property="basestationCuid" />
		<result column="basestation_code" jdbcType="VARCHAR" property="basestationCode" />
		<result column="basestation_name" jdbcType="VARCHAR" property="basestationName" />
		<result column="basestation_category" jdbcType="INTEGER"
			property="basestationCategory" />
		<result column="basestation_type" jdbcType="INTEGER" property="basestationType" />
		<result column="basestation_opendate" jdbcType="TIMESTAMP"
			property="basestationOpendate" />
		<result column="basestation_stopdate" jdbcType="TIMESTAMP"
			property="basestationStopdate" />
		<result column="basestation_vendor" jdbcType="INTEGER"
			property="basestationVendor" />
		<result column="basestation_model" jdbcType="VARCHAR" property="basestationModel" />
		<result column="basestation_power" jdbcType="DECIMAL" property="basestationPower" />
		<result column="basestation_state" jdbcType="INTEGER" property="basestationState" />
		<result column="basestation_carrier" jdbcType="INTEGER"
			property="basestationCarrier" />
		<result column="basestation_covertype" jdbcType="INTEGER"
			property="basestationCovertype" />
		<result column="data_from" jdbcType="INTEGER" property="dataFrom" />
	</resultMap>

	<!-- 设备制造商结果集 -->
	<resultMap id="BaseResultMap_device" type="com.xunge.model.basedata.DatDevicefactoryVO">
		<id column="devicefactory_id" jdbcType="VARCHAR" property="devicefactoryId" />
		<result column="devicefactory_name" jdbcType="VARCHAR"
			property="devicefactoryName" />
		<result column="devicefactory_note" jdbcType="VARCHAR"
			property="devicefactoryNote" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		basestation_id, prv_id, prv_sname, baseresource_id, baseresource_cuid,
		basestation_code,
		basestation_name, basestation_category, basestation_type, basestation_opendate,
		basestation_stopdate,
		basestation_vendor, basestation_model, basestation_power, basestation_state,
		basestation_carrier,basestation_cuid,
		basestation_covertype, data_from
	</sql>
	<select id="selectByExample" parameterType="com.xunge.model.basedata.DatBasestationVOExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,baseresource_name,baseresource_code
		from v_dat_basestation
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dat_basestation
		where basestation_id = #{basestationId,jdbcType=VARCHAR}
	</select>
	<!-- 根据资源点id查询基站信息 -->
	<select id="queryById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dat_basestation
		where baseresource_id = #{baseresourceId,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from dat_basestation
		where basestation_id = #{basestationId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.xunge.model.basedata.DatBasestationVOExample">
		delete from dat_basestation
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.xunge.model.basedata.DatBasestationVO">
		insert into dat_basestation (basestation_id, prv_id, prv_sname,
		baseresource_id, baseresource_cuid, basestation_code,
		basestation_name, basestation_category, basestation_type,
		basestation_opendate, basestation_stopdate,
		basestation_vendor, basestation_model, basestation_power,
		basestation_state, basestation_carrier, basestation_covertype,
		data_from)
		values (#{basestationId,jdbcType=VARCHAR}, #{prvId,jdbcType=VARCHAR},
		#{prvSname,jdbcType=VARCHAR},
		#{baseresourceId,jdbcType=VARCHAR}, #{baseresourceCuid,jdbcType=VARCHAR},
		#{basestationCode,jdbcType=VARCHAR},
		#{basestationName,jdbcType=VARCHAR},
		#{basestationCategory,jdbcType=INTEGER},
		#{basestationType,jdbcType=INTEGER},
		#{basestationOpendate,jdbcType=TIMESTAMP},
		#{basestationStopdate,jdbcType=TIMESTAMP},
		#{basestationVendor,jdbcType=INTEGER},
		#{basestationModel,jdbcType=VARCHAR},
		#{basestationPower,jdbcType=DECIMAL},
		#{basestationState,jdbcType=INTEGER},
		#{basestationCarrier,jdbcType=INTEGER},
		#{basestationCovertype,jdbcType=INTEGER},
		#{dataFrom,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.xunge.model.basedata.DatBasestationVO">
		insert into dat_basestation
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="basestationId != null">
				basestation_id,
			</if>
			<if test="prvId != null">
				prv_id,
			</if>
			<if test="prvSname != null">
				prv_sname,
			</if>
			<if test="baseresourceId != null">
				baseresource_id,
			</if>
			<if test="baseresourceCuid != null">
				baseresource_cuid,
			</if>
			<if test="basestationCode != null">
				basestation_code,
			</if>
			<if test="basestationName != null">
				basestation_name,
			</if>
			<if test="basestationCategory != null">
				basestation_category,
			</if>
			<if test="basestationType != null">
				basestation_type,
			</if>
			<if test="basestationOpendate != null">
				basestation_opendate,
			</if>
			<if test="basestationStopdate != null">
				basestation_stopdate,
			</if>
			<if test="basestationVendor != null">
				basestation_vendor,
			</if>
			<if test="basestationModel != null">
				basestation_model,
			</if>
			<if test="basestationPower != null">
				basestation_power,
			</if>
			<if test="basestationState != null">
				basestation_state,
			</if>
			<if test="basestationCarrier != null">
				basestation_carrier,
			</if>
			<if test="basestationCovertype != null">
				basestation_covertype,
			</if>
			<if test="dataFrom != null">
				data_from,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="basestationId != null">
				#{basestationId,jdbcType=VARCHAR},
			</if>
			<if test="prvId != null">
				#{prvId,jdbcType=VARCHAR},
			</if>
			<if test="prvSname != null">
				#{prvSname,jdbcType=VARCHAR},
			</if>
			<if test="baseresourceId != null">
				#{baseresourceId,jdbcType=VARCHAR},
			</if>
			<if test="baseresourceCuid != null">
				#{baseresourceCuid,jdbcType=VARCHAR},
			</if>
			<if test="basestationCode != null">
				#{basestationCode,jdbcType=VARCHAR},
			</if>
			<if test="basestationName != null">
				#{basestationName,jdbcType=VARCHAR},
			</if>
			<if test="basestationCategory != null">
				#{basestationCategory,jdbcType=INTEGER},
			</if>
			<if test="basestationType != null">
				#{basestationType,jdbcType=INTEGER},
			</if>
			<if test="basestationOpendate != null">
				#{basestationOpendate,jdbcType=TIMESTAMP},
			</if>
			<if test="basestationStopdate != null">
				#{basestationStopdate,jdbcType=TIMESTAMP},
			</if>
			<if test="basestationVendor != null">
				#{basestationVendor,jdbcType=INTEGER},
			</if>
			<if test="basestationModel != null">
				#{basestationModel,jdbcType=VARCHAR},
			</if>
			<if test="basestationPower != null">
				#{basestationPower,jdbcType=DECIMAL},
			</if>
			<if test="basestationState != null">
				#{basestationState,jdbcType=INTEGER},
			</if>
			<if test="basestationCarrier != null">
				#{basestationCarrier,jdbcType=INTEGER},
			</if>
			<if test="basestationCovertype != null">
				#{basestationCovertype,jdbcType=INTEGER},
			</if>
			<if test="dataFrom != null">
				#{dataFrom,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.xunge.model.basedata.DatBasestationVOExample"
		resultType="java.lang.Integer">
		select count(*) from dat_basestation
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update dat_basestation
		<set>
			<if test="record.basestationId != null">
				basestation_id = #{record.basestationId,jdbcType=VARCHAR},
			</if>
			<if test="record.prvId != null">
				prv_id = #{record.prvId,jdbcType=VARCHAR},
			</if>
			<if test="record.prvSname != null">
				prv_sname = #{record.prvSname,jdbcType=VARCHAR},
			</if>
			<if test="record.baseresourceId != null">
				baseresource_id = #{record.baseresourceId,jdbcType=VARCHAR},
			</if>
			<if test="record.baseresourceCuid != null">
				baseresource_cuid = #{record.baseresourceCuid,jdbcType=VARCHAR},
			</if>
			<if test="record.basestationCode != null">
				basestation_code = #{record.basestationCode,jdbcType=VARCHAR},
			</if>
			<if test="record.basestationName != null">
				basestation_name = #{record.basestationName,jdbcType=VARCHAR},
			</if>
			<if test="record.basestationCategory != null">
				basestation_category = #{record.basestationCategory,jdbcType=INTEGER},
			</if>
			<if test="record.basestationType != null">
				basestation_type = #{record.basestationType,jdbcType=INTEGER},
			</if>
			<if test="record.basestationOpendate != null">
				basestation_opendate = #{record.basestationOpendate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.basestationStopdate != null">
				basestation_stopdate = #{record.basestationStopdate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.basestationVendor != null">
				basestation_vendor = #{record.basestationVendor,jdbcType=INTEGER},
			</if>
			<if test="record.basestationModel != null">
				basestation_model = #{record.basestationModel,jdbcType=VARCHAR},
			</if>
			<if test="record.basestationPower != null">
				basestation_power = #{record.basestationPower,jdbcType=DECIMAL},
			</if>
			<if test="record.basestationState != null">
				basestation_state = #{record.basestationState,jdbcType=INTEGER},
			</if>
			<if test="record.basestationCarrier != null">
				basestation_carrier = #{record.basestationCarrier,jdbcType=INTEGER},
			</if>
			<if test="record.basestationCovertype != null">
				basestation_covertype = #{record.basestationCovertype,jdbcType=INTEGER},
			</if>
			<if test="record.dataFrom != null">
				data_from = #{record.dataFrom,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update dat_basestation
		set basestation_id = #{record.basestationId,jdbcType=VARCHAR},
		prv_id = #{record.prvId,jdbcType=VARCHAR},
		prv_sname = #{record.prvSname,jdbcType=VARCHAR},
		baseresource_id = #{record.baseresourceId,jdbcType=VARCHAR},
		baseresource_cuid = #{record.baseresourceCuid,jdbcType=VARCHAR},
		basestation_code = #{record.basestationCode,jdbcType=VARCHAR},
		basestation_name = #{record.basestationName,jdbcType=VARCHAR},
		basestation_category = #{record.basestationCategory,jdbcType=INTEGER},
		basestation_type = #{record.basestationType,jdbcType=INTEGER},
		basestation_opendate = #{record.basestationOpendate,jdbcType=TIMESTAMP},
		basestation_stopdate =
		#{record.basestationStopdate,jdbcType=TIMESTAMP},
		basestation_vendor = #{record.basestationVendor,jdbcType=INTEGER},
		basestation_model = #{record.basestationModel,jdbcType=VARCHAR},
		basestation_power = #{record.basestationPower,jdbcType=DECIMAL},
		basestation_state = #{record.basestationState,jdbcType=INTEGER},
		basestation_carrier = #{record.basestationCarrier,jdbcType=INTEGER},
		basestation_covertype =
		#{record.basestationCovertype,jdbcType=INTEGER},
		data_from = #{record.dataFrom,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.xunge.model.basedata.DatBasestationVO">
		update dat_basestation
		<set>
			<if test="prvId != null">
				prv_id = #{prvId,jdbcType=VARCHAR},
			</if>
			<if test="prvSname != null">
				prv_sname = #{prvSname,jdbcType=VARCHAR},
			</if>
			<if test="baseresourceId != null">
				baseresource_id = #{baseresourceId,jdbcType=VARCHAR},
			</if>
			<if test="baseresourceCuid != null">
				baseresource_cuid = #{baseresourceCuid,jdbcType=VARCHAR},
			</if>
			<if test="basestationCode != null">
				basestation_code = #{basestationCode,jdbcType=VARCHAR},
			</if>
			<if test="basestationName != null">
				basestation_name = #{basestationName,jdbcType=VARCHAR},
			</if>
			<if test="basestationCategory != null">
				basestation_category = #{basestationCategory,jdbcType=INTEGER},
			</if>
			<if test="basestationType != null">
				basestation_type = #{basestationType,jdbcType=INTEGER},
			</if>
			<if test="basestationOpendate != null">
				basestation_opendate = #{basestationOpendate,jdbcType=TIMESTAMP},
			</if>
			<if test="basestationStopdate != null">
				basestation_stopdate = #{basestationStopdate,jdbcType=TIMESTAMP},
			</if>
			<if test="basestationVendor != null">
				basestation_vendor = #{basestationVendor,jdbcType=INTEGER},
			</if>
			<if test="basestationModel != null">
				basestation_model = #{basestationModel,jdbcType=VARCHAR},
			</if>
			<if test="basestationPower != null">
				basestation_power = #{basestationPower,jdbcType=DECIMAL},
			</if>
			<if test="basestationState != null">
				basestation_state = #{basestationState,jdbcType=INTEGER},
			</if>
			<if test="basestationCarrier != null">
				basestation_carrier = #{basestationCarrier,jdbcType=INTEGER},
			</if>
			<if test="basestationCovertype != null">
				basestation_covertype = #{basestationCovertype,jdbcType=INTEGER},
			</if>
			<if test="dataFrom != null">
				data_from = #{dataFrom,jdbcType=INTEGER},
			</if>
		</set>
		where basestation_id = #{basestationId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xunge.model.basedata.DatBasestationVO">
		update dat_basestation
		set prv_id = #{prvId,jdbcType=VARCHAR},
		prv_sname = #{prvSname,jdbcType=VARCHAR},
		baseresource_id = #{baseresourceId,jdbcType=VARCHAR},
		baseresource_cuid = #{baseresourceCuid,jdbcType=VARCHAR},
		basestation_code = #{basestationCode,jdbcType=VARCHAR},
		basestation_name = #{basestationName,jdbcType=VARCHAR},
		basestation_category = #{basestationCategory,jdbcType=INTEGER},
		basestation_type = #{basestationType,jdbcType=INTEGER},
		basestation_opendate = #{basestationOpendate,jdbcType=TIMESTAMP},
		basestation_stopdate = #{basestationStopdate,jdbcType=TIMESTAMP},
		basestation_vendor = #{basestationVendor,jdbcType=INTEGER},
		basestation_model = #{basestationModel,jdbcType=VARCHAR},
		basestation_power = #{basestationPower,jdbcType=DECIMAL},
		basestation_state = #{basestationState,jdbcType=INTEGER},
		basestation_carrier = #{basestationCarrier,jdbcType=INTEGER},
		basestation_covertype = #{basestationCovertype,jdbcType=INTEGER},
		data_from = #{dataFrom,jdbcType=INTEGER}
		where basestation_id = #{basestationId,jdbcType=VARCHAR}
	</update>

	<insert id="batchInsert" useGeneratedKeys="true" parameterType="java.util.List">
		<!-- <selectKey resultType="long" keyProperty="id" order="AFTER"> SELECT 
			LAST_INSERT_ID() </selectKey> -->
		insert into dat_basestation (basestation_id, prv_id, prv_sname,
		baseresource_id, baseresource_cuid, basestation_code,
		basestation_name, basestation_category, basestation_type,
		basestation_opendate, basestation_stopdate,
		basestation_vendor, basestation_model, basestation_power,
		basestation_state, basestation_carrier, basestation_covertype,
		data_from)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.basestationId},#{item.prvId},#{item.prvSname,jdbcType=VARCHAR},
			#{item.baseresourceId}, #{item.baseresourceCuid},
			#{item.basestationCode}, #{item.basestationName},
			#{item.basestationCategory},
			#{item.basestationType}, #{item.basestationOpendate},
			#{item.basestationStopdate}, #{item.basestationVendor},
			#{item.basestationModel}, #{item.basestationPower}, #{item.basestationState},
			#{item.basestationCarrier}, #{item.basestationCovertype},
			#{item.dataFrom})
		</foreach>
	</insert>

	<update id="batchUpdate" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open=""
			close="" separator=";">
			update dat_basestation
			<set>
				prv_id = #{item.prvId,jdbcType=VARCHAR},
				prv_sname = #{item.prvSname,jdbcType=VARCHAR},
				baseresource_id = #{item.baseresourceId,jdbcType=VARCHAR},
				baseresource_cuid = #item.{baseresourceCuid,jdbcType=VARCHAR},
				basestation_code = #{item.basestationCode,jdbcType=VARCHAR},
				basestation_name = #{item.basestationName,jdbcType=VARCHAR},
				basestation_category = #{item.basestationCategory,jdbcType=INTEGER},
				basestation_type = #{item.basestationType,jdbcType=INTEGER},
				basestation_opendate = #{item.basestationOpendate,jdbcType=TIMESTAMP},
				basestation_stopdate =
				#{item.basestationStopdate,jdbcType=TIMESTAMP},
				basestation_vendor = #{item.basestationVendor,jdbcType=INTEGER},
				basestation_model = #{item.basestationModel,jdbcType=VARCHAR},
				basestation_power = #{item.basestationPower,jdbcType=DECIMAL},
				basestation_state = #{item.basestationState,jdbcType=INTEGER},
				basestation_carrier = #{item.basestationCarrier,jdbcType=INTEGER},
				basestation_covertype =
				#{item.basestationCovertype,jdbcType=INTEGER},
				data_from = #{item.dataFrom,jdbcType=INTEGER}
			</set>
			where baseresource_cuid = #{item.baseresourceCuid} AND prv_id =
			#{item.prvId}
		</foreach>

	</update>
	<!--删除 -->
	<delete id="delByCuidsAndPrvid" parameterType="java.util.Map">
		DELETE from dat_basestation
		WHERE prv_id=#{prvId} AND baseresource_cuid IN
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<select id="selectDivice" parameterType="java.lang.String"
		resultMap="BaseResultMap_device">
		select
		devicefactory_id,
		devicefactory_name,
		devicefactory_note
		from dat_devicefactory
		<where>
			<if test="devicefactoryId != null and devicefactoryId != ''">
				and devicefactory_id = #{devicefactoryId}
			</if>
		</where>
	</select>
	<!-- 根据资源点idList查询基站信息  xup-->
	<select id="queryBasestationById" parameterType="map"
		resultMap="BaseResultMap">
		select
		sum(basestation_power) basestation_power
		from dat_basestation
		where 
		<if test="list != null and list.size()>0">
			baseresource_id in 
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item.baseresourceId}
		</foreach>
			</if>
	</select>
</mapper>