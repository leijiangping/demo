<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.mapping.VPaymentVOMapper" >
  <resultMap id="BaseResultMap" type="com.xunge.model.selfrent.billAccount.VPaymentVO" >
    <result column="billaccountcontract_id" property="billaccountcontractId" jdbcType="VARCHAR" />
    <result column="reg_id" property="regId" jdbcType="VARCHAR" />
    <result column="billaccount_id" property="billaccountId" jdbcType="VARCHAR" />
    <result column="rentcontract_id" property="rentcontractId" jdbcType="VARCHAR" />
    <result column="billaccount_code" property="billaccountCode" jdbcType="VARCHAR" />
    <result column="billaccount_name" property="billaccountName" jdbcType="VARCHAR" />
    <result column="billaccount_state" property="billaccountState" jdbcType="INTEGER" />
    <result column="audit_state" property="auditState" jdbcType="INTEGER" /> 
    <result column="payment_date" property="paymentDate" jdbcType="TIMESTAMP" />
    <result column="payment_startdate" property="paymentStartdate" jdbcType="DATE" />
    <result column="payment_enddate" property="paymentEnddate" jdbcType="DATE" />
    <result column="include_tax" property="includeTax" jdbcType="INTEGER" />
    <result column="billamount_taxratio" property="billamountTaxratio" jdbcType="REAL" />
    <result column="year_amount" property="yearAmount" jdbcType="DECIMAL" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="billamount_taxamount" property="billamountTaxamount" jdbcType="DECIMAL" />
    <result column="payment_state" property="paymentState" jdbcType="INTEGER" />
    <result column="payment_flowstate" property="paymentFlowstate" jdbcType="INTEGER" />
    <result column="dueamount" property="dueamount" jdbcType="DECIMAL" />
    <result column="bill_type" property="billType" jdbcType="INTEGER" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
    <result column="amount_type" property="amountType" jdbcType="INTEGER" />
    <result column="charge_type" property="chargeType" jdbcType="INTEGER" />
    <result column="payment_method" property="paymentMethod" jdbcType="INTEGER" />
    <result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
    <result column="tax_method" property="taxMethod" jdbcType="INTEGER" />
    <result column="tax_deduction" property="taxDeduction" jdbcType="INTEGER" />
    <result column="payment_note" property="paymentNote" jdbcType="VARCHAR" />
    <result column="payment_id" property="paymentId" jdbcType="VARCHAR" />
         
     <result column="pay_actamount" property="payActamount" jdbcType="DECIMAL" />
     <result column="pay_calcamount" property="payCalcamount" jdbcType="DECIMAL" />
    <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="contract_code" property="contractCode" jdbcType="VARCHAR" />
    <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
    <result column="supplier_address" property="supplierAddress" jdbcType="VARCHAR" />
    <result column="supplier_contact" property="supplierContact" jdbcType="VARCHAR" />
    <result column="supplier_telephone" property="supplierTelephone" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank_user" property="bankUser" jdbcType="VARCHAR" />
    <result column="deposit_bank" property="depositBank" jdbcType="VARCHAR" />
	
    <result column="contract_startdate" property="contractStartdate" jdbcType="DATE" />
    <result column="contract_enddate" property="contractEnddate" jdbcType="DATE" />
    <result column="contract_yearquantity" property="contractYearquantity" jdbcType="DECIMAL" />
    <!--  -->
    <result column="baseresource_name" property="baseresourceName" jdbcType="VARCHAR" />
    <result column="baseresource_id" property="baseresourceId" jdbcType="VARCHAR" />
    
    <association property="sysRegionVO" javaType="com.xunge.model.system.region.SysRegionVO">
	    <id column="reg_id" property="regId" jdbcType="VARCHAR" />
	    <result column="reg_name" property="regName" jdbcType="VARCHAR" />
	    <result column="preg_name" property="pRegName" jdbcType="VARCHAR" />
	    <result column="preg_id" property="pregId" jdbcType="VARCHAR" />
    </association>
     <!--文章集合 -->  
    <collection property="rentPaymentdetails" ofType="com.xunge.model.selfrent.billAccount.RentPaymentdetailVO">  
        <id property="paymentdetailId" column="paymentdetail_id"/>  
        <result property="paymentId" column="payment_id"/>
    </collection>  
  </resultMap>
  
  <!-- 审核主页面查询 -->
  <select id="queryPayment" parameterType="Map" resultMap="BaseResultMap">
	SELECT
	rcc.billaccountcontract_id ,
	rb.reg_id,
	rcc.billaccount_id,
	rcc.rentcontract_id,
	rb.billaccount_code,
	rb.billaccount_name,
	rb.billaccount_state ,
	rb.audit_state,
	rp.payment_date ,
	rp.payment_startdate,
	rp.payment_enddate,
	rp.include_tax,
	rp.billamount_taxratio,
	rp.payment_state,
	rp.dueamount,
	rp.payment_note,
	rp.bill_type,
	rp.business_type,
	rp.amount_type,
	rp.charge_type,
	rp.payment_method,
	rp.payment_flowstate,
	rp.invoice_type,
	rp.tax_method,
	rp.tax_deduction,
	rp.pay_actamount,
	rp.pay_calcamount,
	rp.payment_id,
	rc.contract_id ,
	dc.contract_code,
	dc.contract_name,
	dc.contract_startdate,
	dc.contract_enddate,
	dc.contract_yearquantity,
	ds.supplier_name,
	ds.supplier_code,
	v_sys_region.preg_name,
  	v_sys_region.reg_name
	FROM
	rent_billaccount rb
	INNER JOIN rent_billaccountcontract rcc ON rb.billaccount_id =  rcc.billaccount_id
	INNER JOIN rent_contract rc ON  rc.rentcontract_id = rcc.rentcontract_id
	INNER JOIN dat_contract dc ON rc.contract_id = dc.contract_id
	left JOIN rent_payment rp ON rp.billaccount_id = rb.billaccount_id
	JOIN dat_supplier ds ON	ds.supplier_id = rc.supplier_id
  	INNER JOIN v_sys_region ON v_sys_region.reg_id = dc.reg_id
  	
  	<where>
  			and payment_flowstate=9
  			<if test="billaccountcontractId != '' and billaccountcontractId != null">
				and billaccountcontract_id = #{billaccountcontractId,jdbcType=VARCHAR}
			</if>
			<if test="billaccountName != '' and billaccountName != null">
				and (billaccount_name like
				CONCAT('%',#{billaccountName,jdbcType=VARCHAR},'%')
				or billaccount_code like
				CONCAT('%',#{billaccountName,jdbcType=VARCHAR},'%'))
			</if>
			<if test="contractName != '' and contractName != null">
				and (contract_name like
				CONCAT('%',#{contractName,jdbcType=VARCHAR},'%')
				or contract_code like
				CONCAT('%',#{contractName,jdbcType=VARCHAR},'%'))
			</if>
			<if test="regId != '' and regId != null">
				and v_sys_region.reg_id = #{regId,jdbcType=VARCHAR}
			</if>
			<if test="pregId != '' and pregId != null">
				and v_sys_region.preg_id = #{pregId,jdbcType=VARCHAR}
			</if>
			 <if test="billaccountState != '' and billaccountState != null">
				and billaccount_state = #{billaccountState,jdbcType=VARCHAR}
			</if> 
				 <!-- 根据权限过滤 -->
   			<include refid="com.xunge.dao.system.SysRegionVOMapper.queryRegionByUserIds"></include>
			<!-- 流程实例id集合 -->
			  <if test="idsList != null and idsList.size()>0">  
	        	and rp.payment_id in  
		        <foreach collection="idsList" item="item" index="index" open="(" separator="," close=")">  
	                #{item.businessId}
	            </foreach>  
    		</if>  
		</where>
		<!-- GROUP BY rcc.billaccountcontract_id ,rb.reg_id,rcc.billaccount_id,rcc.rentcontract_id,rb.billaccount_code,
		rb.billaccount_name -->
  </select>
  
  
  <!--  缴费记录查询 -->
   <select id="queryAllPayment" parameterType="Map" resultMap="BaseResultMap">
	SELECT
	rcc.billaccountcontract_id ,
	rb.reg_id,
	rcc.billaccount_id,
	rcc.rentcontract_id,
	rb.billaccount_code,
	rb.billaccount_name,
	rb.billaccount_state ,
	rb.audit_state,
	rp.payment_date ,
	rp.payment_startdate,
	rp.payment_enddate,
	rp.include_tax,
	rp.billamount_taxratio,
	rp.billamount_taxamount,
	rp.payment_state,
	rp.dueamount,
	rp.payment_note,
	rp.bill_type,
	rp.business_type,
	rp.amount_type,
	rp.charge_type,
	rp.payment_method,
	rp.payment_flowstate,
	rp.invoice_type,
	rp.tax_method,
	rp.tax_deduction,
	rp.pay_actamount,
	rp.pay_calcamount,
	rp.payment_id,
	rc.contract_id ,
	dc.contract_code,
	dc.contract_name,
	dc.contract_startdate,
	dc.contract_enddate,
	dc.contract_yearquantity,
	ds.supplier_name,
	ds.supplier_code,
	v_sys_region.preg_name,
  	v_sys_region.reg_name
	FROM

	rent_billaccount rb
	INNER JOIN rent_billaccountcontract rcc ON rb.billaccount_id =  rcc.billaccount_id
	INNER JOIN rent_contract rc ON  rc.rentcontract_id = rcc.rentcontract_id
	INNER JOIN dat_contract dc ON rc.contract_id = dc.contract_id
	left JOIN rent_payment rp ON rp.billaccount_id = rb.billaccount_id
	JOIN dat_supplier ds ON	ds.supplier_id = rc.supplier_id
  	INNER JOIN v_sys_region ON v_sys_region.reg_id = dc.reg_id
  	<where>
  		and rp.payment_id IS NOT NULL
  	<if test="billaccountcontractId != '' and billaccountcontractId != null">
				and billaccountcontract_id = #{billaccountcontractId,jdbcType=VARCHAR}
			</if>
			<if test="billaccountName != '' and billaccountName != null">
				and (billaccount_name like
				CONCAT('%',#{billaccountName,jdbcType=VARCHAR},'%')
				or billaccount_code like
				CONCAT('%',#{billaccountName,jdbcType=VARCHAR},'%'))
			</if>
			<if test="contractName != '' and contractName != null">
				and (contract_name like
				CONCAT('%',#{contractName,jdbcType=VARCHAR},'%')
				or contract_code like
				CONCAT('%',#{contractName,jdbcType=VARCHAR},'%'))
			</if>
			<if test="regId != '' and regId != null">
				and v_sys_region.reg_id = #{regId,jdbcType=VARCHAR}
			</if>
			<if test="pregId != '' and pregId != null">
				and v_sys_region.preg_id = #{pregId,jdbcType=VARCHAR}
			</if>
			 <if test="billaccountState != '' and billaccountState != null">
				and billaccount_state = #{billaccountState,jdbcType=VARCHAR}
			</if> 	
				 <!-- 根据权限过滤 -->
   			<include refid="com.xunge.dao.system.SysRegionVOMapper.queryRegionByUserIds"></include>
 
  </where>
  <!-- GROUP BY rcc.billaccountcontract_id ,rb.reg_id,rcc.billaccount_id,rcc.rentcontract_id,rb.billaccount_code,
		rb.billaccount_name -->
  </select>
  <!--  报账点维护查询信息-->
     <select id="queryPaymentContract" parameterType="Map" resultMap="BaseResultMap">
	SELECT
	rcc.billaccountcontract_id ,
	rb.reg_id,
	rcc.billaccount_id,
	rcc.rentcontract_id,
	rb.billaccount_code,
	rb.billaccount_name,
	rb.billaccount_state ,
	rb.audit_state,
	rp.payment_date ,
	rp.payment_startdate,
	rp.payment_enddate,
	rp.include_tax,
	rp.billamount_taxratio,
	rp.billamount_taxamount,
	rp.payment_state,
	rp.dueamount,
	rp.payment_note,
	rp.bill_type,
	rp.business_type,
	rp.amount_type,
	rp.charge_type,
	rp.payment_method,
	rp.payment_flowstate,
	rp.invoice_type,
	rp.tax_method,
	rp.tax_deduction,
	rp.pay_actamount,
	rp.pay_calcamount,
	rp.payment_id,
	rc.contract_id ,
	dc.contract_code,
	dc.contract_name,
	dc.contract_startdate,
	dc.contract_enddate,
	dc.contract_yearquantity,
	ds.supplier_name,
	ds.supplier_code,
	v_sys_region.preg_name,
  	v_sys_region.reg_name
	FROM

	rent_billaccount rb
	INNER JOIN rent_billaccountcontract rcc ON rb.billaccount_id =  rcc.billaccount_id
	INNER JOIN rent_contract rc ON  rc.rentcontract_id = rcc.rentcontract_id
	INNER JOIN dat_contract dc ON rc.contract_id = dc.contract_id
	RIGHT JOIN rent_payment rp ON rp.billaccount_id = rb.billaccount_id
	JOIN dat_supplier ds ON	ds.supplier_id = rc.supplier_id
  	INNER JOIN v_sys_region ON v_sys_region.reg_id = dc.reg_id
  	<where>
  	<if test="billaccountcontractId != '' and billaccountcontractId != null">
				and billaccountcontract_id = #{billaccountcontractId,jdbcType=VARCHAR}
			</if>
			<if test="billaccountName != '' and billaccountName != null">
				and (billaccount_name like
				CONCAT('%',#{billaccountName,jdbcType=VARCHAR},'%')
				or billaccount_code like
				CONCAT('%',#{billaccountName,jdbcType=VARCHAR},'%'))
			</if>
			<if test="paymentState != '' and paymentState != null">
				and payment_state = #{paymentState,jdbcType=VARCHAR}
			</if>
			<if test="regId != '' and regId != null">
				and v_sys_region.reg_id = #{regId,jdbcType=VARCHAR}
			</if>
			<if test="pregId != '' and pregId != null">
				and v_sys_region.preg_id = #{pregId,jdbcType=VARCHAR}
			</if>
			 <if test="paymentFlowstate != '' and paymentFlowstate != null">
				and payment_flowstate = #{paymentFlowstate,jdbcType=VARCHAR}
			</if> 	
			 <!-- 根据权限过滤 -->
   			<include refid="com.xunge.dao.system.SysRegionVOMapper.queryRegionByUserIds"></include>
  </where>
 <!--  GROUP BY rcc.billaccountcontract_id ,rb.reg_id,rcc.billaccount_id,rcc.rentcontract_id,rb.billaccount_code,
		rb.billaccount_name -->
  </select>
  
  <!--  根据paymentid查询报账点维护信息-->
     <select id="queryPaymentContractById" parameterType="String" resultMap="BaseResultMap">
	SELECT
	rcc.billaccountcontract_id ,
	rb.reg_id,
	rcc.billaccount_id,
	rcc.rentcontract_id,
	rb.billaccount_code,
	rb.billaccount_name,
	rb.billaccount_state ,
	rb.audit_state,
	rp.payment_date ,
	rp.payment_startdate,
	rp.payment_enddate,
	rp.include_tax,
	rp.billamount_taxratio,
	rp.billamount_taxamount,
	rp.payment_state,
	rp.dueamount,
	rp.payment_note,
	rp.bill_type,
	rp.business_type,
	rp.amount_type,
	rp.charge_type,
	rp.payment_method,
	rp.payment_flowstate,
	rp.invoice_type,
	rp.tax_method,
	rp.tax_deduction,
	rp.pay_actamount,
	rp.pay_calcamount,
	rp.payment_id,
	rc.contract_id ,
	dc.contract_code,
	dc.contract_name,
	dc.contract_startdate,
	dc.contract_enddate,
	dc.contract_yearquantity,
	ds.supplier_name,
	ds.supplier_code,
	v_sys_region.preg_name,
  	v_sys_region.reg_name
	FROM
	rent_billaccount rb
	INNER JOIN rent_billaccountcontract rcc ON rb.billaccount_id =  rcc.billaccount_id
	INNER JOIN rent_contract rc ON  rc.rentcontract_id = rcc.rentcontract_id
	INNER JOIN dat_contract dc ON rc.contract_id = dc.contract_id
	left JOIN rent_payment rp ON rp.billaccount_id = rb.billaccount_id
	JOIN dat_supplier ds ON	ds.supplier_id = rc.supplier_id
  	INNER JOIN v_sys_region ON v_sys_region.reg_id = dc.reg_id
 	where rp.payment_id=#{paymentId,jdbcType=VARCHAR}
  </select>
  

  <!-- 审核内页面 -->
  <select id="queryContractPayment" parameterType="Map" resultMap="BaseResultMap">
	SELECT
	rcc.billaccountcontract_id ,
	rb.reg_id,
	rcc.billaccount_id,
	rcc.rentcontract_id,
	rb.billaccount_code,
	rb.billaccount_name,
	rb.billaccount_state ,
	rb.audit_state,
	rp.payment_date ,
	rp.payment_startdate,
	rp.payment_enddate,
	rp.include_tax,
	rp.billamount_taxratio,
	rp.billamount_taxamount,
	rp.payment_state,
	rp.dueamount,
	rp.payment_note,
	rp.bill_type,
	rp.business_type,
	rp.amount_type,
	rp.charge_type,
	rp.payment_method,
	rp.invoice_type,
	rp.tax_method,
	rp.tax_deduction,
	rp.pay_actamount,
	rp.pay_calcamount,
	rp.payment_id,
	rc.contract_id ,
	rc.year_amount,
	rc.total_amount,
	dc.contract_code,
	dc.contract_name,
	dc.contract_startdate,
	dc.contract_enddate,
	dc.contract_yearquantity,
	ds.supplier_name,
	ds.supplier_code
	FROM
	rent_billaccountcontract rcc
	JOIN rent_billaccount rb ON
	rcc.billaccount_id = rb.billaccount_id
	JOIN rent_payment rp ON
	rb.billaccount_id = rp.billaccount_id
	JOIN rent_contract rc ON
	rcc.rentcontract_id = rc.rentcontract_id
	JOIN dat_contract dc ON
	dc.contract_id = rc.contract_id
	JOIN dat_supplier ds ON
	ds.supplier_id = rc.supplier_id
  	<where>
  			<if test="paymentId != '' and paymentId != null">
				and rp.payment_id = #{paymentId,jdbcType=VARCHAR}
			</if>
			<if test="billaccountcontractId != '' and billaccountcontractId != null">
				and rcc.billaccountcontract_id = #{billaccountcontractId,jdbcType=VARCHAR}
			</if>
			
		</where>
		<!-- GROUP BY rcc.billaccountcontract_id ,rb.reg_id,rcc.billaccount_id,rcc.rentcontract_id,rb.billaccount_code,
		rb.billaccount_name -->
  </select>

  <!-- 待汇总缴费记录查询 -->
  <select id="queryContractPaymentByNoAmount" parameterType="Map" resultMap="BaseResultMap">
	select rc.rentcontract_id,dc.contract_code,dc.contract_name ,bac.billaccount_id,ds.supplier_name,ds.supplier_code
	,ds.supplier_address,ds.supplier_telephone,ds.supplier_contact,ds.bank_account,ds.bank_user,ds.deposit_bank
	,payment.payment_id,payment.pay_calcamount,payment.pay_actamount,payment.billamount_taxratio,payment.billamount_taxamount
	,payment.payment_date,payment.payment_startdate,payment.payment_enddate,rpd.paymentdetail_id
	,bs.baseresource_id,bs.baseresource_name
	from rent_payment payment 
	left join rent_paymentdetail rpd on rpd.payment_id=payment.payment_id
	left join rent_billaccountcontract bac on bac.billaccount_id=payment.billaccount_id 
	left join rent_contract rc on rc.rentcontract_id=bac.rentcontract_id
	left join dat_supplier ds on ds.supplier_id=rc.supplier_id
	left join dat_contract dc on dc.contract_id=rc.contract_id
  	INNER JOIN v_sys_region reg ON reg.reg_id = dc.reg_id
	
	left join rent_billaccountresource bat on bat.billaccountresource_id=rpd.billaccountresource_id
	left join dat_baseresource bs on bs.baseresource_id=bat.baseresource_id
  	<where>

 		payment.payment_flowstate=0 and payment.payment_state=0
 		
		<if test="billamountId == '' or billamountId == null">
 		 and payment.billamount_id  is null
 		</if>
 		<if test="billamountId != '' and billamountId != null">
 		 and payment.billamount_id  =#{billamountId}
 		</if>
		<if test="billType != '' and billType != null">
			and payment.bill_type = #{billType}
		</if>
		<if test="paymentMethod != '' and paymentMethod != null">
			and payment.payment_method = #{paymentMethod}
		</if>
		<if test="paymentDate != '' and paymentDate != null">
			and payment.payment_date = #{paymentDate}
		</if>
		
		<if test="supplierId != '' and supplierId != null">
			and ds.supplier_id = #{supplierId}
		</if>
		<if test="prvId != '' and prvId != null">
			and reg.prv_id = #{prvId}
		</if>
		<if test="pregId != '' and pregId != null">
			and reg.preg_id = #{pregId}
		</if>
		
		<if test="rentcontractCode != '' and rentcontractCode != null">
			and dc.contract_code  like CONCAT('%,', #{rentcontractCode}, ',%') 
		</if>
		
		
		<if test="paymentIds != null and paymentIds.size()>0">
	        	and payment.payment_id in  
		        <foreach collection="paymentIds" item="item" index="index" open="(" separator="," close=")">  
	                #{item}
	            </foreach> 
	    </if>
	    <!-- 根据权限过滤 -->
   		<include refid="com.xunge.dao.system.SysRegionVOMapper.queryRegionByUserIds"></include>
	</where>
  </select>
  <update id="updateState" parameterType="Map" >
  	
  	update rent_payment set payment_flowstate=#{state} where payment_id=#{paymentId}
  
  </update>
  
  <update id="updatePaymentState" parameterType="Map" >
  	
  	update rent_payment set payment_state=#{paymentState} where payment_id=#{paymentId}
  
  </update>
  <!-- 修改租费缴费记录为已汇总 -->
 <update id="updateBillamountIdByPaymentId" parameterType="Map" >
 
  	update rent_payment set billamount_id=#{billamountId}
  	
  	<where>
	  	<if test="paymentIds != null and paymentIds.size()>0">
        	and payment_id in  
	        <foreach collection="paymentIds" item="item" index="index" open="(" separator="," close=")">  
                #{item}
            </foreach> 
	    </if>
  	</where>
  </update>
  
  <!--  <select id="queryRentPaymentDetailByCondition" parameterType="map" resultType="java.util.Map">
  	SELECT
		name,
		sum(value) value
	FROM
		(
			SELECT DATE_FORMAT( eleb.plan_date, '%m') name,
				count(elepd.paymentdetail_id) value
			FROM
				ele_paymentdetail	 elepd
			LEFT JOIN  ele_payment  elep ON elepd.billaccountpaymentdetail_id = elep.billaccountpaymentdetail_id
			INNER JOIN ele_billaccount eleb ON elep.billaccount_id=eleb.billaccount_id
			LEFT JOIN sys_region reg ON reg.reg_id = eleb.reg_id
			WHERE DATE_FORMAT( eleb.plan_date, '%Y')=#{nowDate}
			and eleb.billaccount_type=#{billaccountType}
			GROUP BY DATE_FORMAT( eleb.plan_date, '%Y-%m')
	) t
	GROUP BY
		t.name
  		
  </select>
   -->
  
</mapper>