<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunge.dao.basedata.DatElectricmeterMapper" >
  <resultMap id="BaseResultMap" type="com.xunge.model.basedata.DatElectricmeter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    <id column="meter_id" property="meterId" jdbcType="VARCHAR" />
    <result column="prv_id" property="prvId" jdbcType="VARCHAR" />
    <result column="prv_sname" property="prvSname" jdbcType="VARCHAR" />
    <result column="preg_id" property="pregId" jdbcType="VARCHAR" />
    <result column="preg_name" property="pregName" jdbcType="VARCHAR" />
    <result column="reg_id" property="regId" jdbcType="VARCHAR" />
    <result column="reg_name" property="regName" jdbcType="VARCHAR" />
    <result column="billaccount_id" property="billaccountId" jdbcType="VARCHAR" />
    <result column="meter_code" property="meterCode" jdbcType="VARCHAR" />
    <result column="initial_value" property="initialValue" jdbcType="DECIMAL" />
    <result column="upper_value" property="upperValue" jdbcType="DECIMAL" />
    <result column="flat_value" property="flatValue" jdbcType="DECIMAL" />
    <result column="peak_value" property="peakValue" jdbcType="DECIMAL" />
    <result column="top_value" property="topValue" jdbcType="DECIMAL" />
    <result column="valley_value" property="valleyValue" jdbcType="DECIMAL" />
    <result column="flat_upper_value" property="flatUpperValue" jdbcType="DECIMAL" />
    <result column="peak_upper_value" property="peakUpperValue" jdbcType="DECIMAL" />
    <result column="valley_upper_value" property="valleyUpperValue" jdbcType="DECIMAL" />
    <result column="top_upper_value" property="topUpperValue" jdbcType="DECIMAL" />
    <result column="meter_type" property="meterType" jdbcType="INTEGER" />
    <result column="electricmeter_multiply" property="electricmeterMultiply" jdbcType="DECIMAL" />
    <result column="account_number" property="accountNumber" jdbcType="VARCHAR" />
    <result column="install_date" property="installDate" jdbcType="TIMESTAMP" />
    <result column="meter_state" property="meterState" jdbcType="INTEGER" />
    <result column="is_share" property="isShare" jdbcType="INTEGER" />
    <result column="meter_note" property="meterNote" jdbcType="VARCHAR" />
    <result column="data_from" property="dataFrom" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    meter_id, prv_id, prv_sname, preg_id, preg_name, reg_id, reg_name, billaccount_id, 
    meter_code, initial_value, upper_value, flat_value, peak_value, top_value, valley_value, 
    flat_upper_value, peak_upper_value, valley_upper_value, top_upper_value, meter_type, 
    electricmeter_multiply, account_number, install_date, meter_state, is_share, meter_note, 
    data_from
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xunge.model.basedata.DatElectricmeterExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dat_electricmeter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from dat_electricmeter
    where meter_id = #{meterId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    delete from dat_electricmeter
    where meter_id = #{meterId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunge.model.basedata.DatElectricmeterExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    delete from dat_electricmeter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunge.model.basedata.DatElectricmeter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    insert into dat_electricmeter (meter_id, prv_id, prv_sname, 
      preg_id, preg_name, reg_id, 
      reg_name, billaccount_id, meter_code, 
      initial_value, upper_value, flat_value, 
      peak_value, top_value, valley_value, 
      flat_upper_value, peak_upper_value, valley_upper_value, 
      top_upper_value, meter_type, electricmeter_multiply, 
      account_number, install_date, meter_state, 
      is_share, meter_note, data_from
      )
    values (#{meterId,jdbcType=VARCHAR}, #{prvId,jdbcType=VARCHAR}, #{prvSname,jdbcType=VARCHAR}, 
      #{pregId,jdbcType=VARCHAR}, #{pregName,jdbcType=VARCHAR}, #{regId,jdbcType=VARCHAR}, 
      #{regName,jdbcType=VARCHAR}, #{billaccountId,jdbcType=VARCHAR}, #{meterCode,jdbcType=VARCHAR}, 
      #{initialValue,jdbcType=DECIMAL}, #{upperValue,jdbcType=DECIMAL}, #{flatValue,jdbcType=DECIMAL}, 
      #{peakValue,jdbcType=DECIMAL}, #{topValue,jdbcType=DECIMAL}, #{valleyValue,jdbcType=DECIMAL}, 
      #{flatUpperValue,jdbcType=DECIMAL}, #{peakUpperValue,jdbcType=DECIMAL}, #{valleyUpperValue,jdbcType=DECIMAL}, 
      #{topUpperValue,jdbcType=DECIMAL}, #{meterType,jdbcType=INTEGER}, #{electricmeterMultiply,jdbcType=DECIMAL}, 
      #{accountNumber,jdbcType=VARCHAR}, #{installDate,jdbcType=TIMESTAMP}, #{meterState,jdbcType=INTEGER}, 
      #{isShare,jdbcType=INTEGER}, #{meterNote,jdbcType=VARCHAR}, #{dataFrom,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunge.model.basedata.DatElectricmeter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    insert into dat_electricmeter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="meterId != null" >
        meter_id,
      </if>
      <if test="prvId != null" >
        prv_id,
      </if>
      <if test="prvSname != null" >
        prv_sname,
      </if>
      <if test="pregId != null" >
        preg_id,
      </if>
      <if test="pregName != null" >
        preg_name,
      </if>
      <if test="regId != null" >
        reg_id,
      </if>
      <if test="regName != null" >
        reg_name,
      </if>
      <if test="billaccountId != null" >
        billaccount_id,
      </if>
      <if test="meterCode != null" >
        meter_code,
      </if>
      <if test="initialValue != null" >
        initial_value,
      </if>
      <if test="upperValue != null" >
        upper_value,
      </if>
      <if test="flatValue != null" >
        flat_value,
      </if>
      <if test="peakValue != null" >
        peak_value,
      </if>
      <if test="topValue != null" >
        top_value,
      </if>
      <if test="valleyValue != null" >
        valley_value,
      </if>
      <if test="flatUpperValue != null" >
        flat_upper_value,
      </if>
      <if test="peakUpperValue != null" >
        peak_upper_value,
      </if>
      <if test="valleyUpperValue != null" >
        valley_upper_value,
      </if>
      <if test="topUpperValue != null" >
        top_upper_value,
      </if>
      <if test="meterType != null" >
        meter_type,
      </if>
      <if test="electricmeterMultiply != null" >
        electricmeter_multiply,
      </if>
      <if test="accountNumber != null" >
        account_number,
      </if>
      <if test="installDate != null" >
        install_date,
      </if>
      <if test="meterState != null" >
        meter_state,
      </if>
      <if test="isShare != null" >
        is_share,
      </if>
      <if test="meterNote != null" >
        meter_note,
      </if>
      <if test="dataFrom != null" >
        data_from,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="meterId != null" >
        #{meterId,jdbcType=VARCHAR},
      </if>
      <if test="prvId != null" >
        #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="prvSname != null" >
        #{prvSname,jdbcType=VARCHAR},
      </if>
      <if test="pregId != null" >
        #{pregId,jdbcType=VARCHAR},
      </if>
      <if test="pregName != null" >
        #{pregName,jdbcType=VARCHAR},
      </if>
      <if test="regId != null" >
        #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regName != null" >
        #{regName,jdbcType=VARCHAR},
      </if>
      <if test="billaccountId != null" >
        #{billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="meterCode != null" >
        #{meterCode,jdbcType=VARCHAR},
      </if>
      <if test="initialValue != null" >
        #{initialValue,jdbcType=DECIMAL},
      </if>
      <if test="upperValue != null" >
        #{upperValue,jdbcType=DECIMAL},
      </if>
      <if test="flatValue != null" >
        #{flatValue,jdbcType=DECIMAL},
      </if>
      <if test="peakValue != null" >
        #{peakValue,jdbcType=DECIMAL},
      </if>
      <if test="topValue != null" >
        #{topValue,jdbcType=DECIMAL},
      </if>
      <if test="valleyValue != null" >
        #{valleyValue,jdbcType=DECIMAL},
      </if>
      <if test="flatUpperValue != null" >
        #{flatUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="peakUpperValue != null" >
        #{peakUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="valleyUpperValue != null" >
        #{valleyUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="topUpperValue != null" >
        #{topUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="meterType != null" >
        #{meterType,jdbcType=INTEGER},
      </if>
      <if test="electricmeterMultiply != null" >
        #{electricmeterMultiply,jdbcType=DECIMAL},
      </if>
      <if test="accountNumber != null" >
        #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="installDate != null" >
        #{installDate,jdbcType=TIMESTAMP},
      </if>
      <if test="meterState != null" >
        #{meterState,jdbcType=INTEGER},
      </if>
      <if test="isShare != null" >
        #{isShare,jdbcType=INTEGER},
      </if>
      <if test="meterNote != null" >
        #{meterNote,jdbcType=VARCHAR},
      </if>
      <if test="dataFrom != null" >
        #{dataFrom,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunge.model.basedata.DatElectricmeterExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    select count(*) from dat_electricmeter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    update dat_electricmeter
    <set >
      <if test="record.meterId != null" >
        meter_id = #{record.meterId,jdbcType=VARCHAR},
      </if>
      <if test="record.prvId != null" >
        prv_id = #{record.prvId,jdbcType=VARCHAR},
      </if>
      <if test="record.prvSname != null" >
        prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      </if>
      <if test="record.pregId != null" >
        preg_id = #{record.pregId,jdbcType=VARCHAR},
      </if>
      <if test="record.pregName != null" >
        preg_name = #{record.pregName,jdbcType=VARCHAR},
      </if>
      <if test="record.regId != null" >
        reg_id = #{record.regId,jdbcType=VARCHAR},
      </if>
      <if test="record.regName != null" >
        reg_name = #{record.regName,jdbcType=VARCHAR},
      </if>
      <if test="record.billaccountId != null" >
        billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.meterCode != null" >
        meter_code = #{record.meterCode,jdbcType=VARCHAR},
      </if>
      <if test="record.initialValue != null" >
        initial_value = #{record.initialValue,jdbcType=DECIMAL},
      </if>
      <if test="record.upperValue != null" >
        upper_value = #{record.upperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.flatValue != null" >
        flat_value = #{record.flatValue,jdbcType=DECIMAL},
      </if>
      <if test="record.peakValue != null" >
        peak_value = #{record.peakValue,jdbcType=DECIMAL},
      </if>
      <if test="record.topValue != null" >
        top_value = #{record.topValue,jdbcType=DECIMAL},
      </if>
      <if test="record.valleyValue != null" >
        valley_value = #{record.valleyValue,jdbcType=DECIMAL},
      </if>
      <if test="record.flatUpperValue != null" >
        flat_upper_value = #{record.flatUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.peakUpperValue != null" >
        peak_upper_value = #{record.peakUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.valleyUpperValue != null" >
        valley_upper_value = #{record.valleyUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.topUpperValue != null" >
        top_upper_value = #{record.topUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="record.meterType != null" >
        meter_type = #{record.meterType,jdbcType=INTEGER},
      </if>
      <if test="record.electricmeterMultiply != null" >
        electricmeter_multiply = #{record.electricmeterMultiply,jdbcType=DECIMAL},
      </if>
      <if test="record.accountNumber != null" >
        account_number = #{record.accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.installDate != null" >
        install_date = #{record.installDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.meterState != null" >
        meter_state = #{record.meterState,jdbcType=INTEGER},
      </if>
      <if test="record.isShare != null" >
        is_share = #{record.isShare,jdbcType=INTEGER},
      </if>
      <if test="record.meterNote != null" >
        meter_note = #{record.meterNote,jdbcType=VARCHAR},
      </if>
      <if test="record.dataFrom != null" >
        data_from = #{record.dataFrom,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    update dat_electricmeter
    set meter_id = #{record.meterId,jdbcType=VARCHAR},
      prv_id = #{record.prvId,jdbcType=VARCHAR},
      prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      preg_id = #{record.pregId,jdbcType=VARCHAR},
      preg_name = #{record.pregName,jdbcType=VARCHAR},
      reg_id = #{record.regId,jdbcType=VARCHAR},
      reg_name = #{record.regName,jdbcType=VARCHAR},
      billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      meter_code = #{record.meterCode,jdbcType=VARCHAR},
      initial_value = #{record.initialValue,jdbcType=DECIMAL},
      upper_value = #{record.upperValue,jdbcType=DECIMAL},
      flat_value = #{record.flatValue,jdbcType=DECIMAL},
      peak_value = #{record.peakValue,jdbcType=DECIMAL},
      top_value = #{record.topValue,jdbcType=DECIMAL},
      valley_value = #{record.valleyValue,jdbcType=DECIMAL},
      flat_upper_value = #{record.flatUpperValue,jdbcType=DECIMAL},
      peak_upper_value = #{record.peakUpperValue,jdbcType=DECIMAL},
      valley_upper_value = #{record.valleyUpperValue,jdbcType=DECIMAL},
      top_upper_value = #{record.topUpperValue,jdbcType=DECIMAL},
      meter_type = #{record.meterType,jdbcType=INTEGER},
      electricmeter_multiply = #{record.electricmeterMultiply,jdbcType=DECIMAL},
      account_number = #{record.accountNumber,jdbcType=VARCHAR},
      install_date = #{record.installDate,jdbcType=TIMESTAMP},
      meter_state = #{record.meterState,jdbcType=INTEGER},
      is_share = #{record.isShare,jdbcType=INTEGER},
      meter_note = #{record.meterNote,jdbcType=VARCHAR},
      data_from = #{record.dataFrom,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunge.model.basedata.DatElectricmeter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    update dat_electricmeter
    <set >
      <if test="prvId != null" >
        prv_id = #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="prvSname != null" >
        prv_sname = #{prvSname,jdbcType=VARCHAR},
      </if>
      <if test="pregId != null" >
        preg_id = #{pregId,jdbcType=VARCHAR},
      </if>
      <if test="pregName != null" >
        preg_name = #{pregName,jdbcType=VARCHAR},
      </if>
      <if test="regId != null" >
        reg_id = #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regName != null" >
        reg_name = #{regName,jdbcType=VARCHAR},
      </if>
      <if test="billaccountId != null" >
        billaccount_id = #{billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="meterCode != null" >
        meter_code = #{meterCode,jdbcType=VARCHAR},
      </if>
      <if test="initialValue != null" >
        initial_value = #{initialValue,jdbcType=DECIMAL},
      </if>
      <if test="upperValue != null" >
        upper_value = #{upperValue,jdbcType=DECIMAL},
      </if>
      <if test="flatValue != null" >
        flat_value = #{flatValue,jdbcType=DECIMAL},
      </if>
      <if test="peakValue != null" >
        peak_value = #{peakValue,jdbcType=DECIMAL},
      </if>
      <if test="topValue != null" >
        top_value = #{topValue,jdbcType=DECIMAL},
      </if>
      <if test="valleyValue != null" >
        valley_value = #{valleyValue,jdbcType=DECIMAL},
      </if>
      <if test="flatUpperValue != null" >
        flat_upper_value = #{flatUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="peakUpperValue != null" >
        peak_upper_value = #{peakUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="valleyUpperValue != null" >
        valley_upper_value = #{valleyUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="topUpperValue != null" >
        top_upper_value = #{topUpperValue,jdbcType=DECIMAL},
      </if>
      <if test="meterType != null" >
        meter_type = #{meterType,jdbcType=INTEGER},
      </if>
      <if test="electricmeterMultiply != null" >
        electricmeter_multiply = #{electricmeterMultiply,jdbcType=DECIMAL},
      </if>
      <if test="accountNumber != null" >
        account_number = #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="installDate != null" >
        install_date = #{installDate,jdbcType=TIMESTAMP},
      </if>
      <if test="meterState != null" >
        meter_state = #{meterState,jdbcType=INTEGER},
      </if>
      <if test="isShare != null" >
        is_share = #{isShare,jdbcType=INTEGER},
      </if>
      <if test="meterNote != null" >
        meter_note = #{meterNote,jdbcType=VARCHAR},
      </if>
      <if test="dataFrom != null" >
        data_from = #{dataFrom,jdbcType=INTEGER},
      </if>
    </set>
    where meter_id = #{meterId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunge.model.basedata.DatElectricmeter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 24 18:13:33 CST 2017.
    -->
    update dat_electricmeter
    set prv_id = #{prvId,jdbcType=VARCHAR},
      prv_sname = #{prvSname,jdbcType=VARCHAR},
      preg_id = #{pregId,jdbcType=VARCHAR},
      preg_name = #{pregName,jdbcType=VARCHAR},
      reg_id = #{regId,jdbcType=VARCHAR},
      reg_name = #{regName,jdbcType=VARCHAR},
      billaccount_id = #{billaccountId,jdbcType=VARCHAR},
      meter_code = #{meterCode,jdbcType=VARCHAR},
      initial_value = #{initialValue,jdbcType=DECIMAL},
      upper_value = #{upperValue,jdbcType=DECIMAL},
      flat_value = #{flatValue,jdbcType=DECIMAL},
      peak_value = #{peakValue,jdbcType=DECIMAL},
      top_value = #{topValue,jdbcType=DECIMAL},
      valley_value = #{valleyValue,jdbcType=DECIMAL},
      flat_upper_value = #{flatUpperValue,jdbcType=DECIMAL},
      peak_upper_value = #{peakUpperValue,jdbcType=DECIMAL},
      valley_upper_value = #{valleyUpperValue,jdbcType=DECIMAL},
      top_upper_value = #{topUpperValue,jdbcType=DECIMAL},
      meter_type = #{meterType,jdbcType=INTEGER},
      electricmeter_multiply = #{electricmeterMultiply,jdbcType=DECIMAL},
      account_number = #{accountNumber,jdbcType=VARCHAR},
      install_date = #{installDate,jdbcType=TIMESTAMP},
      meter_state = #{meterState,jdbcType=INTEGER},
      is_share = #{isShare,jdbcType=INTEGER},
      meter_note = #{meterNote,jdbcType=VARCHAR},
      data_from = #{dataFrom,jdbcType=INTEGER}
    where meter_id = #{meterId,jdbcType=VARCHAR}
  </update>
</mapper>