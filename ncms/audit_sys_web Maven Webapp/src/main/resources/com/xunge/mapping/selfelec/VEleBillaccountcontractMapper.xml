<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunge.dao.selfelec.VEleBillaccountcontractMapper">
  <resultMap id="BaseResultMap" type="com.xunge.model.selfelec.VEleBillaccountcontract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    <result column="elecontract_id" jdbcType="VARCHAR" property="elecontractId" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
    <result column="paymentperiod_id" jdbcType="VARCHAR" property="paymentperiodId" />
    <result column="price_type" jdbcType="INTEGER" property="priceType" />
    <result column="elecontract_price" jdbcType="VARCHAR" property="elecontractPrice" />
    <result column="include_price_tax" jdbcType="INTEGER" property="includePriceTax" />
    <result column="flat_price" jdbcType="DECIMAL" property="flatPrice" />
    <result column="peak_price" jdbcType="DECIMAL" property="peakPrice" />
    <result column="valley_price" jdbcType="DECIMAL" property="valleyPrice" />
    <result column="top_price" jdbcType="DECIMAL" property="topPrice" />
    <result column="supply_method" jdbcType="INTEGER" property="supplyMethod" />
    <result column="buy_method" jdbcType="INTEGER" property="buyMethod" />
    <result column="payment_method" jdbcType="INTEGER" property="paymentMethod" />
    <result column="include_tax" jdbcType="INTEGER" property="includeTax" />
    <result column="tax_rate" jdbcType="DECIMAL" property="taxRate" />
    <result column="is_include_all" jdbcType="INTEGER" property="isIncludeAll" />
    <result column="pay_sign" jdbcType="INTEGER" property="paySign" />
    <result column="pay_sign_account" jdbcType="DECIMAL" property="paySignAccount" />
    <result column="contract_money" jdbcType="DECIMAL" property="contractMoney" />
    <result column="contract_tax" jdbcType="DECIMAL" property="contractTax" />
    <result column="contract_total_amount" jdbcType="DECIMAL" property="contractTotalAmount" />
    <result column="contract_year_amount" jdbcType="DECIMAL" property="contractYearAmount" />
    <result column="independent_meter" jdbcType="INTEGER" property="independentMeter" />
    <result column="cmcc_ratio" jdbcType="DECIMAL" property="cmccRatio" />
    <result column="unicom_ratio" jdbcType="DECIMAL" property="unicomRatio" />
    <result column="telcom_ratio" jdbcType="DECIMAL" property="telcomRatio" />
    <result column="include_loss" jdbcType="INTEGER" property="includeLoss" />
    <result column="loss_type" jdbcType="INTEGER" property="lossType" />
    <result column="payment_user" jdbcType="VARCHAR" property="paymentUser" />
    <result column="payment_telphone" jdbcType="VARCHAR" property="paymentTelphone" />
    <result column="elecontract_note" jdbcType="VARCHAR" property="elecontractNote" />
    <result column="prv_id" jdbcType="VARCHAR" property="prvId" />
    <result column="prv_sname" jdbcType="VARCHAR" property="prvSname" />
    <result column="preg_id" jdbcType="VARCHAR" property="pregId" />
    <result column="preg_name" jdbcType="VARCHAR" property="pregName" />
    <result column="reg_id" jdbcType="VARCHAR" property="regId" />
    <result column="reg_name" jdbcType="VARCHAR" property="regName" />
    <result column="is_downshare" jdbcType="INTEGER" property="isDownshare" />
    <result column="sys_dep_id" jdbcType="VARCHAR" property="sysDepId" />
    <result column="manager_department" jdbcType="VARCHAR" property="managerDepartment" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="contract_code" jdbcType="VARCHAR" property="contractCode" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="contract_type" jdbcType="INTEGER" property="contractType" />
    <result column="contract_startdate" jdbcType="DATE" property="contractStartdate" />
    <result column="contract_enddate" jdbcType="DATE" property="contractEnddate" />
    <result column="contract_signdate" jdbcType="DATE" property="contractSigndate" />
    <result column="contract_yearquantity" jdbcType="DECIMAL" property="contractYearquantity" />
    <result column="contract_checkname1" jdbcType="VARCHAR" property="contractCheckname1" />
    <result column="contract_checkname2" jdbcType="VARCHAR" property="contractCheckname2" />
    <result column="old_contract_id" jdbcType="VARCHAR" property="oldContractId" />
    <result column="old_contract_code" jdbcType="VARCHAR" property="oldContractCode" />
    <result column="contract_flow" jdbcType="VARCHAR" property="contractFlow" />
    <result column="contract_introduction" jdbcType="VARCHAR" property="contractIntroduction" />
    <result column="contract_spaceresource" jdbcType="VARCHAR" property="contractSpaceresource" />
    <result column="contract_state" jdbcType="INTEGER" property="contractState" />
    <result column="contract_note" jdbcType="VARCHAR" property="contractNote" />
    <result column="auditing_state" jdbcType="INTEGER" property="auditingState" />
    <result column="auditing_user_id" jdbcType="VARCHAR" property="auditingUserId" />
    <result column="auditing_date" jdbcType="TIMESTAMP" property="auditingDate" />
    <result column="data_from" jdbcType="INTEGER" property="dataFrom" />
    <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supplier_address" jdbcType="VARCHAR" property="supplierAddress" />
    <result column="supplier_contact" jdbcType="VARCHAR" property="supplierContact" />
    <result column="supplier_telephone" jdbcType="VARCHAR" property="supplierTelephone" />
    <result column="supplier_type" jdbcType="INTEGER" property="supplierType" />
    <result column="account_type" jdbcType="INTEGER" property="accountType" />
    <result column="bank_user" jdbcType="VARCHAR" property="bankUser" />
    <result column="deposit_bank" jdbcType="VARCHAR" property="depositBank" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="supplier_state" jdbcType="INTEGER" property="supplierState" />
    <result column="supplier_note" jdbcType="VARCHAR" property="supplierNote" />
    <result column="elebillaccountcontract_id" jdbcType="VARCHAR" property="elebillaccountcontractId" />
    <result column="billaccount_id" jdbcType="VARCHAR" property="billaccountId" />
    <result column="relation_state" jdbcType="INTEGER" property="relationState" />
    <result column="relation_startdate" jdbcType="DATE" property="relationStartdate" />
    <result column="relation_enddate" jdbcType="DATE" property="relationEnddate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    elecontract_id, contract_id, supplier_id, paymentperiod_id, price_type, elecontract_price, 
    include_price_tax, flat_price, peak_price, valley_price, top_price, supply_method, 
    buy_method, payment_method, include_tax, tax_rate, is_include_all, pay_sign, pay_sign_account, 
    contract_money, contract_tax, contract_total_amount, contract_year_amount, independent_meter, 
    cmcc_ratio, unicom_ratio, telcom_ratio, include_loss, loss_type, payment_user, payment_telphone, 
    elecontract_note, prv_id, prv_sname, preg_id, preg_name, reg_id, reg_name, is_downshare, 
    sys_dep_id, manager_department, user_id, contract_code, contract_name, contract_type, 
    contract_startdate, contract_enddate, contract_signdate, contract_yearquantity, contract_checkname1, 
    contract_checkname2, old_contract_id, old_contract_code, contract_flow, contract_introduction, 
    contract_spaceresource, contract_state, contract_note, auditing_state, auditing_user_id, 
    auditing_date, data_from, supplier_code, supplier_name, supplier_address, supplier_contact, 
    supplier_telephone, supplier_type, account_type, bank_user, deposit_bank, bank_account, 
    supplier_state, supplier_note, elebillaccountcontract_id, billaccount_id, relation_state, 
    relation_startdate, relation_enddate
  </sql>
  <select id="selectByExample" parameterType="com.xunge.model.selfelec.VEleBillaccountcontractExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_ele_billaccountcontract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xunge.model.selfelec.VEleBillaccountcontractExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    delete from v_ele_billaccountcontract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunge.model.selfelec.VEleBillaccountcontract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    insert into v_ele_billaccountcontract (elecontract_id, contract_id, supplier_id, 
      paymentperiod_id, price_type, elecontract_price, 
      include_price_tax, flat_price, peak_price, 
      valley_price, top_price, supply_method, 
      buy_method, payment_method, include_tax, 
      tax_rate, is_include_all, pay_sign, 
      pay_sign_account, contract_money, contract_tax, 
      contract_total_amount, contract_year_amount, 
      independent_meter, cmcc_ratio, unicom_ratio, 
      telcom_ratio, include_loss, loss_type, 
      payment_user, payment_telphone, elecontract_note, 
      prv_id, prv_sname, preg_id, 
      preg_name, reg_id, reg_name, 
      is_downshare, sys_dep_id, manager_department, 
      user_id, contract_code, contract_name, 
      contract_type, contract_startdate, contract_enddate, 
      contract_signdate, contract_yearquantity, contract_checkname1, 
      contract_checkname2, old_contract_id, old_contract_code, 
      contract_flow, contract_introduction, contract_spaceresource, 
      contract_state, contract_note, auditing_state, 
      auditing_user_id, auditing_date, data_from, 
      supplier_code, supplier_name, supplier_address, 
      supplier_contact, supplier_telephone, supplier_type, 
      account_type, bank_user, deposit_bank, 
      bank_account, supplier_state, supplier_note, 
      elebillaccountcontract_id, billaccount_id, 
      relation_state, relation_startdate, relation_enddate
      )
    values (#{elecontractId,jdbcType=VARCHAR}, #{contractId,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, 
      #{paymentperiodId,jdbcType=VARCHAR}, #{priceType,jdbcType=INTEGER}, #{elecontractPrice,jdbcType=VARCHAR}, 
      #{includePriceTax,jdbcType=INTEGER}, #{flatPrice,jdbcType=DECIMAL}, #{peakPrice,jdbcType=DECIMAL}, 
      #{valleyPrice,jdbcType=DECIMAL}, #{topPrice,jdbcType=DECIMAL}, #{supplyMethod,jdbcType=INTEGER}, 
      #{buyMethod,jdbcType=INTEGER}, #{paymentMethod,jdbcType=INTEGER}, #{includeTax,jdbcType=INTEGER}, 
      #{taxRate,jdbcType=DECIMAL}, #{isIncludeAll,jdbcType=INTEGER}, #{paySign,jdbcType=INTEGER}, 
      #{paySignAccount,jdbcType=DECIMAL}, #{contractMoney,jdbcType=DECIMAL}, #{contractTax,jdbcType=DECIMAL}, 
      #{contractTotalAmount,jdbcType=DECIMAL}, #{contractYearAmount,jdbcType=DECIMAL}, 
      #{independentMeter,jdbcType=INTEGER}, #{cmccRatio,jdbcType=DECIMAL}, #{unicomRatio,jdbcType=DECIMAL}, 
      #{telcomRatio,jdbcType=DECIMAL}, #{includeLoss,jdbcType=INTEGER}, #{lossType,jdbcType=INTEGER}, 
      #{paymentUser,jdbcType=VARCHAR}, #{paymentTelphone,jdbcType=VARCHAR}, #{elecontractNote,jdbcType=VARCHAR}, 
      #{prvId,jdbcType=VARCHAR}, #{prvSname,jdbcType=VARCHAR}, #{pregId,jdbcType=VARCHAR}, 
      #{pregName,jdbcType=VARCHAR}, #{regId,jdbcType=VARCHAR}, #{regName,jdbcType=VARCHAR}, 
      #{isDownshare,jdbcType=INTEGER}, #{sysDepId,jdbcType=VARCHAR}, #{managerDepartment,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{contractCode,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, 
      #{contractType,jdbcType=INTEGER}, #{contractStartdate,jdbcType=DATE}, #{contractEnddate,jdbcType=DATE}, 
      #{contractSigndate,jdbcType=DATE}, #{contractYearquantity,jdbcType=DECIMAL}, #{contractCheckname1,jdbcType=VARCHAR}, 
      #{contractCheckname2,jdbcType=VARCHAR}, #{oldContractId,jdbcType=VARCHAR}, #{oldContractCode,jdbcType=VARCHAR}, 
      #{contractFlow,jdbcType=VARCHAR}, #{contractIntroduction,jdbcType=VARCHAR}, #{contractSpaceresource,jdbcType=VARCHAR}, 
      #{contractState,jdbcType=INTEGER}, #{contractNote,jdbcType=VARCHAR}, #{auditingState,jdbcType=INTEGER}, 
      #{auditingUserId,jdbcType=VARCHAR}, #{auditingDate,jdbcType=TIMESTAMP}, #{dataFrom,jdbcType=INTEGER}, 
      #{supplierCode,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, #{supplierAddress,jdbcType=VARCHAR}, 
      #{supplierContact,jdbcType=VARCHAR}, #{supplierTelephone,jdbcType=VARCHAR}, #{supplierType,jdbcType=INTEGER}, 
      #{accountType,jdbcType=INTEGER}, #{bankUser,jdbcType=VARCHAR}, #{depositBank,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{supplierState,jdbcType=INTEGER}, #{supplierNote,jdbcType=VARCHAR}, 
      #{elebillaccountcontractId,jdbcType=VARCHAR}, #{billaccountId,jdbcType=VARCHAR}, 
      #{relationState,jdbcType=INTEGER}, #{relationStartdate,jdbcType=DATE}, #{relationEnddate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunge.model.selfelec.VEleBillaccountcontract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    insert into v_ele_billaccountcontract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="elecontractId != null">
        elecontract_id,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="paymentperiodId != null">
        paymentperiod_id,
      </if>
      <if test="priceType != null">
        price_type,
      </if>
      <if test="elecontractPrice != null">
        elecontract_price,
      </if>
      <if test="includePriceTax != null">
        include_price_tax,
      </if>
      <if test="flatPrice != null">
        flat_price,
      </if>
      <if test="peakPrice != null">
        peak_price,
      </if>
      <if test="valleyPrice != null">
        valley_price,
      </if>
      <if test="topPrice != null">
        top_price,
      </if>
      <if test="supplyMethod != null">
        supply_method,
      </if>
      <if test="buyMethod != null">
        buy_method,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="includeTax != null">
        include_tax,
      </if>
      <if test="taxRate != null">
        tax_rate,
      </if>
      <if test="isIncludeAll != null">
        is_include_all,
      </if>
      <if test="paySign != null">
        pay_sign,
      </if>
      <if test="paySignAccount != null">
        pay_sign_account,
      </if>
      <if test="contractMoney != null">
        contract_money,
      </if>
      <if test="contractTax != null">
        contract_tax,
      </if>
      <if test="contractTotalAmount != null">
        contract_total_amount,
      </if>
      <if test="contractYearAmount != null">
        contract_year_amount,
      </if>
      <if test="independentMeter != null">
        independent_meter,
      </if>
      <if test="cmccRatio != null">
        cmcc_ratio,
      </if>
      <if test="unicomRatio != null">
        unicom_ratio,
      </if>
      <if test="telcomRatio != null">
        telcom_ratio,
      </if>
      <if test="includeLoss != null">
        include_loss,
      </if>
      <if test="lossType != null">
        loss_type,
      </if>
      <if test="paymentUser != null">
        payment_user,
      </if>
      <if test="paymentTelphone != null">
        payment_telphone,
      </if>
      <if test="elecontractNote != null">
        elecontract_note,
      </if>
      <if test="prvId != null">
        prv_id,
      </if>
      <if test="prvSname != null">
        prv_sname,
      </if>
      <if test="pregId != null">
        preg_id,
      </if>
      <if test="pregName != null">
        preg_name,
      </if>
      <if test="regId != null">
        reg_id,
      </if>
      <if test="regName != null">
        reg_name,
      </if>
      <if test="isDownshare != null">
        is_downshare,
      </if>
      <if test="sysDepId != null">
        sys_dep_id,
      </if>
      <if test="managerDepartment != null">
        manager_department,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="contractCode != null">
        contract_code,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="contractType != null">
        contract_type,
      </if>
      <if test="contractStartdate != null">
        contract_startdate,
      </if>
      <if test="contractEnddate != null">
        contract_enddate,
      </if>
      <if test="contractSigndate != null">
        contract_signdate,
      </if>
      <if test="contractYearquantity != null">
        contract_yearquantity,
      </if>
      <if test="contractCheckname1 != null">
        contract_checkname1,
      </if>
      <if test="contractCheckname2 != null">
        contract_checkname2,
      </if>
      <if test="oldContractId != null">
        old_contract_id,
      </if>
      <if test="oldContractCode != null">
        old_contract_code,
      </if>
      <if test="contractFlow != null">
        contract_flow,
      </if>
      <if test="contractIntroduction != null">
        contract_introduction,
      </if>
      <if test="contractSpaceresource != null">
        contract_spaceresource,
      </if>
      <if test="contractState != null">
        contract_state,
      </if>
      <if test="contractNote != null">
        contract_note,
      </if>
      <if test="auditingState != null">
        auditing_state,
      </if>
      <if test="auditingUserId != null">
        auditing_user_id,
      </if>
      <if test="auditingDate != null">
        auditing_date,
      </if>
      <if test="dataFrom != null">
        data_from,
      </if>
      <if test="supplierCode != null">
        supplier_code,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="supplierAddress != null">
        supplier_address,
      </if>
      <if test="supplierContact != null">
        supplier_contact,
      </if>
      <if test="supplierTelephone != null">
        supplier_telephone,
      </if>
      <if test="supplierType != null">
        supplier_type,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="bankUser != null">
        bank_user,
      </if>
      <if test="depositBank != null">
        deposit_bank,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="supplierState != null">
        supplier_state,
      </if>
      <if test="supplierNote != null">
        supplier_note,
      </if>
      <if test="elebillaccountcontractId != null">
        elebillaccountcontract_id,
      </if>
      <if test="billaccountId != null">
        billaccount_id,
      </if>
      <if test="relationState != null">
        relation_state,
      </if>
      <if test="relationStartdate != null">
        relation_startdate,
      </if>
      <if test="relationEnddate != null">
        relation_enddate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="elecontractId != null">
        #{elecontractId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="paymentperiodId != null">
        #{paymentperiodId,jdbcType=VARCHAR},
      </if>
      <if test="priceType != null">
        #{priceType,jdbcType=INTEGER},
      </if>
      <if test="elecontractPrice != null">
        #{elecontractPrice,jdbcType=VARCHAR},
      </if>
      <if test="includePriceTax != null">
        #{includePriceTax,jdbcType=INTEGER},
      </if>
      <if test="flatPrice != null">
        #{flatPrice,jdbcType=DECIMAL},
      </if>
      <if test="peakPrice != null">
        #{peakPrice,jdbcType=DECIMAL},
      </if>
      <if test="valleyPrice != null">
        #{valleyPrice,jdbcType=DECIMAL},
      </if>
      <if test="topPrice != null">
        #{topPrice,jdbcType=DECIMAL},
      </if>
      <if test="supplyMethod != null">
        #{supplyMethod,jdbcType=INTEGER},
      </if>
      <if test="buyMethod != null">
        #{buyMethod,jdbcType=INTEGER},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="includeTax != null">
        #{includeTax,jdbcType=INTEGER},
      </if>
      <if test="taxRate != null">
        #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="isIncludeAll != null">
        #{isIncludeAll,jdbcType=INTEGER},
      </if>
      <if test="paySign != null">
        #{paySign,jdbcType=INTEGER},
      </if>
      <if test="paySignAccount != null">
        #{paySignAccount,jdbcType=DECIMAL},
      </if>
      <if test="contractMoney != null">
        #{contractMoney,jdbcType=DECIMAL},
      </if>
      <if test="contractTax != null">
        #{contractTax,jdbcType=DECIMAL},
      </if>
      <if test="contractTotalAmount != null">
        #{contractTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="contractYearAmount != null">
        #{contractYearAmount,jdbcType=DECIMAL},
      </if>
      <if test="independentMeter != null">
        #{independentMeter,jdbcType=INTEGER},
      </if>
      <if test="cmccRatio != null">
        #{cmccRatio,jdbcType=DECIMAL},
      </if>
      <if test="unicomRatio != null">
        #{unicomRatio,jdbcType=DECIMAL},
      </if>
      <if test="telcomRatio != null">
        #{telcomRatio,jdbcType=DECIMAL},
      </if>
      <if test="includeLoss != null">
        #{includeLoss,jdbcType=INTEGER},
      </if>
      <if test="lossType != null">
        #{lossType,jdbcType=INTEGER},
      </if>
      <if test="paymentUser != null">
        #{paymentUser,jdbcType=VARCHAR},
      </if>
      <if test="paymentTelphone != null">
        #{paymentTelphone,jdbcType=VARCHAR},
      </if>
      <if test="elecontractNote != null">
        #{elecontractNote,jdbcType=VARCHAR},
      </if>
      <if test="prvId != null">
        #{prvId,jdbcType=VARCHAR},
      </if>
      <if test="prvSname != null">
        #{prvSname,jdbcType=VARCHAR},
      </if>
      <if test="pregId != null">
        #{pregId,jdbcType=VARCHAR},
      </if>
      <if test="pregName != null">
        #{pregName,jdbcType=VARCHAR},
      </if>
      <if test="regId != null">
        #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regName != null">
        #{regName,jdbcType=VARCHAR},
      </if>
      <if test="isDownshare != null">
        #{isDownshare,jdbcType=INTEGER},
      </if>
      <if test="sysDepId != null">
        #{sysDepId,jdbcType=VARCHAR},
      </if>
      <if test="managerDepartment != null">
        #{managerDepartment,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null">
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contractStartdate != null">
        #{contractStartdate,jdbcType=DATE},
      </if>
      <if test="contractEnddate != null">
        #{contractEnddate,jdbcType=DATE},
      </if>
      <if test="contractSigndate != null">
        #{contractSigndate,jdbcType=DATE},
      </if>
      <if test="contractYearquantity != null">
        #{contractYearquantity,jdbcType=DECIMAL},
      </if>
      <if test="contractCheckname1 != null">
        #{contractCheckname1,jdbcType=VARCHAR},
      </if>
      <if test="contractCheckname2 != null">
        #{contractCheckname2,jdbcType=VARCHAR},
      </if>
      <if test="oldContractId != null">
        #{oldContractId,jdbcType=VARCHAR},
      </if>
      <if test="oldContractCode != null">
        #{oldContractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractFlow != null">
        #{contractFlow,jdbcType=VARCHAR},
      </if>
      <if test="contractIntroduction != null">
        #{contractIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="contractSpaceresource != null">
        #{contractSpaceresource,jdbcType=VARCHAR},
      </if>
      <if test="contractState != null">
        #{contractState,jdbcType=INTEGER},
      </if>
      <if test="contractNote != null">
        #{contractNote,jdbcType=VARCHAR},
      </if>
      <if test="auditingState != null">
        #{auditingState,jdbcType=INTEGER},
      </if>
      <if test="auditingUserId != null">
        #{auditingUserId,jdbcType=VARCHAR},
      </if>
      <if test="auditingDate != null">
        #{auditingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dataFrom != null">
        #{dataFrom,jdbcType=INTEGER},
      </if>
      <if test="supplierCode != null">
        #{supplierCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierAddress != null">
        #{supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="supplierContact != null">
        #{supplierContact,jdbcType=VARCHAR},
      </if>
      <if test="supplierTelephone != null">
        #{supplierTelephone,jdbcType=VARCHAR},
      </if>
      <if test="supplierType != null">
        #{supplierType,jdbcType=INTEGER},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=INTEGER},
      </if>
      <if test="bankUser != null">
        #{bankUser,jdbcType=VARCHAR},
      </if>
      <if test="depositBank != null">
        #{depositBank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="supplierState != null">
        #{supplierState,jdbcType=INTEGER},
      </if>
      <if test="supplierNote != null">
        #{supplierNote,jdbcType=VARCHAR},
      </if>
      <if test="elebillaccountcontractId != null">
        #{elebillaccountcontractId,jdbcType=VARCHAR},
      </if>
      <if test="billaccountId != null">
        #{billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="relationState != null">
        #{relationState,jdbcType=INTEGER},
      </if>
      <if test="relationStartdate != null">
        #{relationStartdate,jdbcType=DATE},
      </if>
      <if test="relationEnddate != null">
        #{relationEnddate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunge.model.selfelec.VEleBillaccountcontractExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    select count(*) from v_ele_billaccountcontract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    update v_ele_billaccountcontract
    <set>
      <if test="record.elecontractId != null">
        elecontract_id = #{record.elecontractId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentperiodId != null">
        paymentperiod_id = #{record.paymentperiodId,jdbcType=VARCHAR},
      </if>
      <if test="record.priceType != null">
        price_type = #{record.priceType,jdbcType=INTEGER},
      </if>
      <if test="record.elecontractPrice != null">
        elecontract_price = #{record.elecontractPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.includePriceTax != null">
        include_price_tax = #{record.includePriceTax,jdbcType=INTEGER},
      </if>
      <if test="record.flatPrice != null">
        flat_price = #{record.flatPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.peakPrice != null">
        peak_price = #{record.peakPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.valleyPrice != null">
        valley_price = #{record.valleyPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.topPrice != null">
        top_price = #{record.topPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.supplyMethod != null">
        supply_method = #{record.supplyMethod,jdbcType=INTEGER},
      </if>
      <if test="record.buyMethod != null">
        buy_method = #{record.buyMethod,jdbcType=INTEGER},
      </if>
      <if test="record.paymentMethod != null">
        payment_method = #{record.paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="record.includeTax != null">
        include_tax = #{record.includeTax,jdbcType=INTEGER},
      </if>
      <if test="record.taxRate != null">
        tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.isIncludeAll != null">
        is_include_all = #{record.isIncludeAll,jdbcType=INTEGER},
      </if>
      <if test="record.paySign != null">
        pay_sign = #{record.paySign,jdbcType=INTEGER},
      </if>
      <if test="record.paySignAccount != null">
        pay_sign_account = #{record.paySignAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.contractMoney != null">
        contract_money = #{record.contractMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.contractTax != null">
        contract_tax = #{record.contractTax,jdbcType=DECIMAL},
      </if>
      <if test="record.contractTotalAmount != null">
        contract_total_amount = #{record.contractTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.contractYearAmount != null">
        contract_year_amount = #{record.contractYearAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.independentMeter != null">
        independent_meter = #{record.independentMeter,jdbcType=INTEGER},
      </if>
      <if test="record.cmccRatio != null">
        cmcc_ratio = #{record.cmccRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.unicomRatio != null">
        unicom_ratio = #{record.unicomRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.telcomRatio != null">
        telcom_ratio = #{record.telcomRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.includeLoss != null">
        include_loss = #{record.includeLoss,jdbcType=INTEGER},
      </if>
      <if test="record.lossType != null">
        loss_type = #{record.lossType,jdbcType=INTEGER},
      </if>
      <if test="record.paymentUser != null">
        payment_user = #{record.paymentUser,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTelphone != null">
        payment_telphone = #{record.paymentTelphone,jdbcType=VARCHAR},
      </if>
      <if test="record.elecontractNote != null">
        elecontract_note = #{record.elecontractNote,jdbcType=VARCHAR},
      </if>
      <if test="record.prvId != null">
        prv_id = #{record.prvId,jdbcType=VARCHAR},
      </if>
      <if test="record.prvSname != null">
        prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      </if>
      <if test="record.pregId != null">
        preg_id = #{record.pregId,jdbcType=VARCHAR},
      </if>
      <if test="record.pregName != null">
        preg_name = #{record.pregName,jdbcType=VARCHAR},
      </if>
      <if test="record.regId != null">
        reg_id = #{record.regId,jdbcType=VARCHAR},
      </if>
      <if test="record.regName != null">
        reg_name = #{record.regName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDownshare != null">
        is_downshare = #{record.isDownshare,jdbcType=INTEGER},
      </if>
      <if test="record.sysDepId != null">
        sys_dep_id = #{record.sysDepId,jdbcType=VARCHAR},
      </if>
      <if test="record.managerDepartment != null">
        manager_department = #{record.managerDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractCode != null">
        contract_code = #{record.contractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contractName != null">
        contract_name = #{record.contractName,jdbcType=VARCHAR},
      </if>
      <if test="record.contractType != null">
        contract_type = #{record.contractType,jdbcType=INTEGER},
      </if>
      <if test="record.contractStartdate != null">
        contract_startdate = #{record.contractStartdate,jdbcType=DATE},
      </if>
      <if test="record.contractEnddate != null">
        contract_enddate = #{record.contractEnddate,jdbcType=DATE},
      </if>
      <if test="record.contractSigndate != null">
        contract_signdate = #{record.contractSigndate,jdbcType=DATE},
      </if>
      <if test="record.contractYearquantity != null">
        contract_yearquantity = #{record.contractYearquantity,jdbcType=DECIMAL},
      </if>
      <if test="record.contractCheckname1 != null">
        contract_checkname1 = #{record.contractCheckname1,jdbcType=VARCHAR},
      </if>
      <if test="record.contractCheckname2 != null">
        contract_checkname2 = #{record.contractCheckname2,jdbcType=VARCHAR},
      </if>
      <if test="record.oldContractId != null">
        old_contract_id = #{record.oldContractId,jdbcType=VARCHAR},
      </if>
      <if test="record.oldContractCode != null">
        old_contract_code = #{record.oldContractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contractFlow != null">
        contract_flow = #{record.contractFlow,jdbcType=VARCHAR},
      </if>
      <if test="record.contractIntroduction != null">
        contract_introduction = #{record.contractIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.contractSpaceresource != null">
        contract_spaceresource = #{record.contractSpaceresource,jdbcType=VARCHAR},
      </if>
      <if test="record.contractState != null">
        contract_state = #{record.contractState,jdbcType=INTEGER},
      </if>
      <if test="record.contractNote != null">
        contract_note = #{record.contractNote,jdbcType=VARCHAR},
      </if>
      <if test="record.auditingState != null">
        auditing_state = #{record.auditingState,jdbcType=INTEGER},
      </if>
      <if test="record.auditingUserId != null">
        auditing_user_id = #{record.auditingUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditingDate != null">
        auditing_date = #{record.auditingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataFrom != null">
        data_from = #{record.dataFrom,jdbcType=INTEGER},
      </if>
      <if test="record.supplierCode != null">
        supplier_code = #{record.supplierCode,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierName != null">
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierAddress != null">
        supplier_address = #{record.supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierContact != null">
        supplier_contact = #{record.supplierContact,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierTelephone != null">
        supplier_telephone = #{record.supplierTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierType != null">
        supplier_type = #{record.supplierType,jdbcType=INTEGER},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=INTEGER},
      </if>
      <if test="record.bankUser != null">
        bank_user = #{record.bankUser,jdbcType=VARCHAR},
      </if>
      <if test="record.depositBank != null">
        deposit_bank = #{record.depositBank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierState != null">
        supplier_state = #{record.supplierState,jdbcType=INTEGER},
      </if>
      <if test="record.supplierNote != null">
        supplier_note = #{record.supplierNote,jdbcType=VARCHAR},
      </if>
      <if test="record.elebillaccountcontractId != null">
        elebillaccountcontract_id = #{record.elebillaccountcontractId,jdbcType=VARCHAR},
      </if>
      <if test="record.billaccountId != null">
        billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.relationState != null">
        relation_state = #{record.relationState,jdbcType=INTEGER},
      </if>
      <if test="record.relationStartdate != null">
        relation_startdate = #{record.relationStartdate,jdbcType=DATE},
      </if>
      <if test="record.relationEnddate != null">
        relation_enddate = #{record.relationEnddate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 23 13:23:41 CST 2017.
    -->
    update v_ele_billaccountcontract
    set elecontract_id = #{record.elecontractId,jdbcType=VARCHAR},
      contract_id = #{record.contractId,jdbcType=VARCHAR},
      supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      paymentperiod_id = #{record.paymentperiodId,jdbcType=VARCHAR},
      price_type = #{record.priceType,jdbcType=INTEGER},
      elecontract_price = #{record.elecontractPrice,jdbcType=VARCHAR},
      include_price_tax = #{record.includePriceTax,jdbcType=INTEGER},
      flat_price = #{record.flatPrice,jdbcType=DECIMAL},
      peak_price = #{record.peakPrice,jdbcType=DECIMAL},
      valley_price = #{record.valleyPrice,jdbcType=DECIMAL},
      top_price = #{record.topPrice,jdbcType=DECIMAL},
      supply_method = #{record.supplyMethod,jdbcType=INTEGER},
      buy_method = #{record.buyMethod,jdbcType=INTEGER},
      payment_method = #{record.paymentMethod,jdbcType=INTEGER},
      include_tax = #{record.includeTax,jdbcType=INTEGER},
      tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      is_include_all = #{record.isIncludeAll,jdbcType=INTEGER},
      pay_sign = #{record.paySign,jdbcType=INTEGER},
      pay_sign_account = #{record.paySignAccount,jdbcType=DECIMAL},
      contract_money = #{record.contractMoney,jdbcType=DECIMAL},
      contract_tax = #{record.contractTax,jdbcType=DECIMAL},
      contract_total_amount = #{record.contractTotalAmount,jdbcType=DECIMAL},
      contract_year_amount = #{record.contractYearAmount,jdbcType=DECIMAL},
      independent_meter = #{record.independentMeter,jdbcType=INTEGER},
      cmcc_ratio = #{record.cmccRatio,jdbcType=DECIMAL},
      unicom_ratio = #{record.unicomRatio,jdbcType=DECIMAL},
      telcom_ratio = #{record.telcomRatio,jdbcType=DECIMAL},
      include_loss = #{record.includeLoss,jdbcType=INTEGER},
      loss_type = #{record.lossType,jdbcType=INTEGER},
      payment_user = #{record.paymentUser,jdbcType=VARCHAR},
      payment_telphone = #{record.paymentTelphone,jdbcType=VARCHAR},
      elecontract_note = #{record.elecontractNote,jdbcType=VARCHAR},
      prv_id = #{record.prvId,jdbcType=VARCHAR},
      prv_sname = #{record.prvSname,jdbcType=VARCHAR},
      preg_id = #{record.pregId,jdbcType=VARCHAR},
      preg_name = #{record.pregName,jdbcType=VARCHAR},
      reg_id = #{record.regId,jdbcType=VARCHAR},
      reg_name = #{record.regName,jdbcType=VARCHAR},
      is_downshare = #{record.isDownshare,jdbcType=INTEGER},
      sys_dep_id = #{record.sysDepId,jdbcType=VARCHAR},
      manager_department = #{record.managerDepartment,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      contract_code = #{record.contractCode,jdbcType=VARCHAR},
      contract_name = #{record.contractName,jdbcType=VARCHAR},
      contract_type = #{record.contractType,jdbcType=INTEGER},
      contract_startdate = #{record.contractStartdate,jdbcType=DATE},
      contract_enddate = #{record.contractEnddate,jdbcType=DATE},
      contract_signdate = #{record.contractSigndate,jdbcType=DATE},
      contract_yearquantity = #{record.contractYearquantity,jdbcType=DECIMAL},
      contract_checkname1 = #{record.contractCheckname1,jdbcType=VARCHAR},
      contract_checkname2 = #{record.contractCheckname2,jdbcType=VARCHAR},
      old_contract_id = #{record.oldContractId,jdbcType=VARCHAR},
      old_contract_code = #{record.oldContractCode,jdbcType=VARCHAR},
      contract_flow = #{record.contractFlow,jdbcType=VARCHAR},
      contract_introduction = #{record.contractIntroduction,jdbcType=VARCHAR},
      contract_spaceresource = #{record.contractSpaceresource,jdbcType=VARCHAR},
      contract_state = #{record.contractState,jdbcType=INTEGER},
      contract_note = #{record.contractNote,jdbcType=VARCHAR},
      auditing_state = #{record.auditingState,jdbcType=INTEGER},
      auditing_user_id = #{record.auditingUserId,jdbcType=VARCHAR},
      auditing_date = #{record.auditingDate,jdbcType=TIMESTAMP},
      data_from = #{record.dataFrom,jdbcType=INTEGER},
      supplier_code = #{record.supplierCode,jdbcType=VARCHAR},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      supplier_address = #{record.supplierAddress,jdbcType=VARCHAR},
      supplier_contact = #{record.supplierContact,jdbcType=VARCHAR},
      supplier_telephone = #{record.supplierTelephone,jdbcType=VARCHAR},
      supplier_type = #{record.supplierType,jdbcType=INTEGER},
      account_type = #{record.accountType,jdbcType=INTEGER},
      bank_user = #{record.bankUser,jdbcType=VARCHAR},
      deposit_bank = #{record.depositBank,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      supplier_state = #{record.supplierState,jdbcType=INTEGER},
      supplier_note = #{record.supplierNote,jdbcType=VARCHAR},
      elebillaccountcontract_id = #{record.elebillaccountcontractId,jdbcType=VARCHAR},
      billaccount_id = #{record.billaccountId,jdbcType=VARCHAR},
      relation_state = #{record.relationState,jdbcType=INTEGER},
      relation_startdate = #{record.relationStartdate,jdbcType=DATE},
      relation_enddate = #{record.relationEnddate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="queryStateByBillaccountId" parameterType="String" resultMap="BaseResultMap">
 	select contract_state
  	 from v_ele_billaccountcontract
    where  billaccount_id = #{billaccountId,jdbcType=VARCHAR}
    and contract_state=0
  </select>
  
   <select id="queryPaymentperiodIdByBillaccountId" parameterType="String" resultType="String">
 	select paymentperiod_id
  	 from v_ele_billaccountcontract
    where  billaccount_id = #{billaccountId,jdbcType=VARCHAR}
    and contract_state=0
  </select>
  
  
  <select id="queryPaymentDetailByCondition" parameterType="map" resultType="java.util.Map">
  	SELECT
		name,
		sum(value) value
	FROM
		(
			SELECT DATE_FORMAT( eleb.plan_date, '%m') name,
				count(elepd.paymentdetail_id) value
			FROM
				ele_paymentdetail	 elepd
			LEFT JOIN  ele_payment  elep ON elepd.billaccountpaymentdetail_id = elep.billaccountpaymentdetail_id
			INNER JOIN ele_billaccount eleb ON elep.billaccount_id=eleb.billaccount_id
			LEFT JOIN sys_region reg ON reg.reg_id = eleb.reg_id
			WHERE DATE_FORMAT( eleb.plan_date, '%Y')=#{nowDate}
			and eleb.billaccount_type=#{billaccountType}
			<if test="reg_ids != null and reg_ids.size()>0">
				and eleb.reg_id in
				<foreach collection="reg_ids" item="item" index="index"	open="(" separator="," close=")">
				   #{item}
				</foreach>
			</if>
			<if test="prv_id != null">
				and eleb.prv_id=#{prv_id}
			</if>
			<if test="prvName != null">
				and eleb.prv_sname=#{prvName}
			</if>
			GROUP BY DATE_FORMAT( eleb.plan_date, '%Y-%m')
	) t
	GROUP BY
		t.name
  		
  </select>
</mapper>