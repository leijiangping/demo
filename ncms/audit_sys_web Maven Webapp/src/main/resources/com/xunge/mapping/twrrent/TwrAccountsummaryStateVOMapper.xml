<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunge.dao.towerrent.accountsummary.TwrAccountsummaryStateVODao">
  <resultMap id="BaseResultMap" type="com.xunge.model.towerrent.accountsummary.TwrAccountsummaryStateVO">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="yearmonth" jdbcType="VARCHAR" property="yearmonth" />
    <result column="areaid" jdbcType="INTEGER" property="areaid" />
    <result column="feeType" jdbcType="VARCHAR" property="feetype" />
    <result column="accountsumid" jdbcType="VARCHAR" property="accountsumid" />
    <result column="createUser" jdbcType="INTEGER" property="createuser" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateUser" jdbcType="INTEGER" property="updateuser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, yearmonth, areaid, feeType, accountsumid, createUser, createTime, updateUser, 
    updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from twr_accountsummary_state
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from twr_accountsummary_state
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xunge.model.towerrent.accountsummary.TwrAccountsummaryStateVO" useGeneratedKeys="true" keyProperty="id">
    insert into twr_accountsummary_state (id, yearmonth, areaid, 
      feeType, accountsumid, createUser, 
      createTime, updateUser, updateTime
      )
    values (#{id,jdbcType=VARCHAR}, #{yearmonth,jdbcType=VARCHAR}, #{areaid,jdbcType=VARCHAR}, 
      #{feetype,jdbcType=VARCHAR}, #{accountsumid,jdbcType=VARCHAR}, #{createuser,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updateuser,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunge.model.towerrent.accountsummary.TwrAccountsummaryStateVO" useGeneratedKeys="true" keyProperty="id">
    insert into twr_accountsummary_state
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="yearmonth != null">
        yearmonth,
      </if>
      <if test="areaid != null">
        areaid,
      </if>
      <if test="feetype != null">
        feeType,
      </if>
      <if test="accountsumid != null">
        accountsumid,
      </if>
      <if test="createuser != null">
        createUser,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updateuser != null">
        updateUser,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="yearmonth != null">
        #{yearmonth,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null">
        #{areaid,jdbcType=VARCHAR},
      </if>
      <if test="feetype != null">
        #{feetype,jdbcType=VARCHAR},
      </if>
      <if test="accountsumid != null">
        #{accountsumid,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunge.model.towerrent.accountsummary.TwrAccountsummaryStateVO">
    update twr_accountsummary_state
    <set>
      <if test="yearmonth != null">
        yearmonth = #{yearmonth,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null">
        areaid = #{areaid,jdbcType=VARCHAR},
      </if>
      <if test="feetype != null">
        feeType = #{feetype,jdbcType=VARCHAR},
      </if>
      <if test="accountsumid != null">
        accountsumid = #{accountsumid,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null">
        createUser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        updateUser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunge.model.towerrent.accountsummary.TwrAccountsummaryStateVO">
    update twr_accountsummary_state
    set yearmonth = #{yearmonth,jdbcType=VARCHAR},
      areaid = #{areaid,jdbcType=VARCHAR},
      feeType = #{feetype,jdbcType=VARCHAR},
      accountsumid = #{accountsumid,jdbcType=VARCHAR},
      createUser = #{createuser,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateUser = #{updateuser,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 根据参数查询费用汇总状态集合 -->
  <select id="queryTwrAccountsummeryStateMapListByCondition" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		ass.id,
		ass.yearmonth,
		ass.areaid,
		ass.feeType,
		ass.accountsumid,
		ass.createUser,
		ass.createTime,
		ass.updateUser,
		ass.updateTime
	FROM
		twr_accountsummary_state ass
		INNER JOIN v_sys_region reg on reg.reg_id = ass.areaid
	<where>
		<if test="yearmonth != null and yearmonth != ''">
			and ass.yearmonth = #{yearmonth}
		</if>
		<if test="prvId != '' and prvId != null">
			and reg.prv_id = #{prvId}
		</if>
		<if test="pregId != '' and pregId != null">
			and reg.preg_id = #{pregId}
		</if>
		<if test="regId != null and regId != ''">
  			and ass.areaid = #{regId}
  		</if>
  		<if test="regId == '' or regId == null">
			and reg.reg_id in (
			select reg_id from sys_userregion 
			where relation_state=#{state}
				and user_id = #{userId}
			)
		</if>
	</where>
  </select>
  
  <delete id="deleteTwrAccountsummaryByCondition" parameterType="java.util.Map">
    delete from twr_accountsummary_state 
    	where accountsumid in
		<foreach collection="idsList" item="item" open="(" separator=","
                close=")">
            #{item}
        </foreach>
  </delete>
</mapper>